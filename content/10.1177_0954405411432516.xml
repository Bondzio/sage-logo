<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article
  PUBLIC "-//NLM//DTD Journal Publishing DTD v2.3 20070202//EN" "journalpublishing.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" article-type="research-article">
<front>
<journal-meta>
<journal-id journal-id-type="publisher-id">PIB</journal-id>
<journal-id journal-id-type="hwp">sppib</journal-id>
<journal-title>Proceedings of the Institution of Mechanical Engineers, Part B: Journal of Engineering Manufacture</journal-title>
<issn pub-type="ppub">0954-4054</issn>
<issn pub-type="epub">2041-1975</issn>
<publisher>
<publisher-name>SAGE Publications</publisher-name>
<publisher-loc>Sage UK: London, England</publisher-loc>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="doi">10.1177/0954405411432516</article-id>
<article-id pub-id-type="publisher-id">10.1177_0954405411432516</article-id>
<article-categories>
<subj-group subj-group-type="heading">
<subject>Original Articles</subject>
</subj-group>
</article-categories>
<title-group>
<article-title>Framework of a representation model for modular product development</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author" corresp="yes">
<name><surname>Kong</surname><given-names>Fan B</given-names></name>
</contrib>
<contrib contrib-type="author">
<name><surname>Ming</surname><given-names>Xin G</given-names></name>
</contrib>
<contrib contrib-type="author">
<name><surname>Wang</surname><given-names>Lei</given-names></name>
</contrib>
<contrib contrib-type="author">
<name><surname>Wang</surname><given-names>Xing H</given-names></name>
</contrib>
<contrib contrib-type="author">
<name><surname>Wang</surname><given-names>Peng P</given-names></name>
</contrib>
<aff id="aff1-0954405411432516">School of Mechanical Engineering, Shanghai Jiao Tong University, People’s Republic of China</aff>
</contrib-group>
<author-notes>
<corresp id="corresp1-0954405411432516">F B Kong, Shanghai Research Center for Industrial Informatics, Shanghai Key Laboratory of Advanced Manufacturing Environment, Institute of Computer Integrated Manufacturing, School of Mechanical Engineering, Shanghai Jiao Tong University, 800 Dongchuan Road, Minhang District, Shanghai, 200240, People’s Republic of China. Email: <email>kongfanbin@sjtu.edu.cn</email></corresp>
</author-notes>
<pub-date pub-type="epub-ppub">
<month>5</month>
<year>2012</year>
</pub-date>
<volume>226</volume>
<issue>5</issue>
<fpage>941</fpage>
<lpage>949</lpage>
<history>
<date date-type="received">
<day>5</day>
<month>5</month>
<year>2011</year>
</date>
<date date-type="accepted">
<day>18</day>
<month>11</month>
<year>2011</year>
</date>
</history>
<permissions>
<copyright-statement>© IMechE 2012</copyright-statement>
<copyright-year>2012</copyright-year>
<copyright-holder content-type="society">Institution of Mechanical Engineers</copyright-holder>
</permissions>
<abstract>
<p>Partitioning, development, fabrication, and management of construction blocks of modular products still heavily rely on manual labor of sophisticated designers because existing representation models seldom have automatic capability of product data processing for modular product development. To cope with this challenge, a framework for building an efficient representation model for modular product development has been developed. First, the framework redefines some very important concepts in order to make them clear and accurate. Second, the framework proposes a generic structure for modular products, which comes from the analysis and synthesis of real cases of modular product development in industry. Third, concept formalization is brought forward to facilitate manufacturers to establish responding ontology while the development process for modular product development ontology is provided as a simple reference for manufacturers to build their own modular product development ontology. Last, the analysis shows that the proposed approach is feasible, and may assist manufacturers to establish modular product development ontology for automation in modular product development.</p>
</abstract>
<kwd-group>
<kwd>Modularity</kwd>
<kwd>modular product development</kwd>
<kwd>representation model</kwd>
<kwd>ontology</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="section1-0954405411432516" sec-type="intro">
<title>Introduction</title>
<p>A representation model is an abstract description to express real modular products<sup><xref ref-type="bibr" rid="bibr1-0954405411432516">1</xref>–<xref ref-type="bibr" rid="bibr4-0954405411432516">4</xref></sup> in modular product development (MPD). It determines the complexity of partitioning, developing, fabricating, and managing construction blocks of modular products. There have been many studies on representation models in the past. In design and development, there are product functional structure models,<sup><xref ref-type="bibr" rid="bibr5-0954405411432516">5</xref></sup> graph or network models,<sup><xref ref-type="bibr" rid="bibr6-0954405411432516">6</xref>–<xref ref-type="bibr" rid="bibr8-0954405411432516">8</xref></sup> and tree models.<sup><xref ref-type="bibr" rid="bibr9-0954405411432516">9</xref></sup> In management, there are generic product structure models<sup><xref ref-type="bibr" rid="bibr10-0954405411432516">10</xref></sup> and product data management models provided by various commercial Product data management/Product lifecycle management (PDM/PLM) systems.<sup><xref ref-type="bibr" rid="bibr11-0954405411432516">11</xref>–<xref ref-type="bibr" rid="bibr13-0954405411432516">13</xref></sup> In product configuration, there are structured net models,<sup><xref ref-type="bibr" rid="bibr14-0954405411432516">14</xref></sup> Petri net models,<sup><xref ref-type="bibr" rid="bibr15-0954405411432516">15</xref></sup> ontology-based models,<sup><xref ref-type="bibr" rid="bibr16-0954405411432516">16</xref>,<xref ref-type="bibr" rid="bibr17-0954405411432516">17</xref></sup> and so on. In knowledge management or data exchange, ontology-based models<sup><xref ref-type="bibr" rid="bibr18-0954405411432516">18</xref>–<xref ref-type="bibr" rid="bibr20-0954405411432516">20</xref></sup> share most scenarios.</p>
<p>However, the application of existing representation models in real MPD projects has encountered the following difficulties.</p>
<list id="list1-0954405411432516" list-type="order">
<list-item><p>Owing to relative independence and lack of representation unitarity, most models are difficult to integrate.</p></list-item>
<list-item><p>Construction elements of most models are over generic, relative loose, and lack close relationships.</p></list-item>
<list-item><p>Attributes of product construction blocks are seldom involved in most models. It is difficult to retrieve those attributes for further needs.</p></list-item>
<list-item><p>A visitor could not access directly the information hiding in various heterogeneous documents that model elements represent.</p></list-item>
<list-item><p>Except for data exchange models, most models are not intended for computer automatic processing.</p></list-item>
</list>
<p>Therefore, partitioning, development, fabrication, and management of construction blocks of modular products still rely heavily on manual labors of sophisticate designers. In order to solve this dilemma, a pervasive representation model is proposed as a basis to realize computer automatic processing for MPD. The organization of the rest of this text includes four sections: presentation model for modular products; model establishment; model feasibility; and conclusion and future works.</p>
</sec>
<sec id="section2-0954405411432516">
<title>Presentation model for modular products</title>
<p>The representation model for modular products is a hybrid of a hierarchy structure and ontology. The ontology, including classes and properties, deals with concepts, while all the individuals of classes and properties are attached on the hierarchy structure that expresses the organization of product components.</p>
<p>The establishment procedure of the model includes six steps, as shown in <xref ref-type="fig" rid="fig1-0954405411432516">Figure 1</xref>. Step 1 clarifies and defines some important concepts used in MPD. Step 2 defines the generic structure for all modular products. Step 3 formalizes the defined concepts. Step 4 establishes generic structure for each model product. Step 5 establishes ontology for modular products based on the results of steps 3 and 4. Step 6 constructs the product structure with individuals of ontology classes and properties.</p>
<fig id="fig1-0954405411432516" position="float">
<label>Figure 1.</label>
<caption>
<p>Framework of the presentation model.</p>
<p>CAX: CAD, CAM, CAE, CAPP, and etc</p>
</caption>
<graphic xlink:href="10.1177_0954405411432516-fig1.tif"/>
</fig>
<p>With the help of the presentation model, computers could substitute engineers to automatically deal with most activities in MPD. These activities fall mainly within the following scenarios.</p>
<list id="list2-0954405411432516" list-type="order">
<list-item><p>Product modularization: the process that transforms a set of non-modular products into a family of modular products.</p></list-item>
<list-item><p>Model product development: the development of new modular product architectures based on existing modular products.</p></list-item>
<list-item><p>Design solution development: the development of new design solutions for a certain configuration item.</p></list-item>
<list-item><p>Module instance development: the development of new module instances for a certain module.</p></list-item>
<list-item><p>Fabrication schedule: the production planning of module instances for new customizations.</p></list-item>
<list-item><p>Product configuration: the procedure to configure a new variant derived from a model product.</p></list-item>
<list-item><p>Maintenance and service: services that support normal operation of modular products.</p></list-item>
</list>
<p>In addition, the ontology individuals could be dynamically produced according to newly developed construction blocks of modular products through a multi-agent system,<sup><xref ref-type="bibr" rid="bibr21-0954405411432516">21</xref>,<xref ref-type="bibr" rid="bibr22-0954405411432516">22</xref></sup> as shown in <xref ref-type="fig" rid="fig1-0954405411432516">Figure 1</xref>. The multi-agent system could translate the heterogeneous documents of each node of a product structure into new individuals based on modular product ontology.</p>
</sec>
<sec id="section3-0954405411432516">
<title>Model establishment</title>
<sec id="section4-0954405411432516">
<title>Concepts definition</title>
<p>Some significant concepts have been redefined as reference definitions to establish a pervasive model for MPD. These concepts are related directly to real practices in manufacturing industry and have no serious conflicts with existing ones.</p>
<sec id="section5-0954405411432516">
<title>Modular products</title>
<p><italic>Definition 1:</italic> modular products are the products or systems that can perform certain functions through a combination of distinct module instances that could be developed independently.</p>
<p><italic>Definition 2:</italic> MPD is a systematic and sustainable process to obtain modular products at low costs.<sup><xref ref-type="bibr" rid="bibr2-0954405411432516">2</xref>–<xref ref-type="bibr" rid="bibr4-0954405411432516">4</xref></sup></p>
</sec>
<sec id="section6-0954405411432516">
<title>Product option</title>
<p><italic>Definition 3:</italic> customer requirements (CR) is a regular expression of refined customer needs about products.<sup><xref ref-type="bibr" rid="bibr3-0954405411432516">3</xref>,<xref ref-type="bibr" rid="bibr23-0954405411432516">23</xref></sup></p>
<p><italic>Definition 4:</italic> a configuration item attribute (CIA) is an attribute of the physical entity that a configuration item represents. A CIA is translated from CR.</p>
<p><italic>Definition 5:</italic> a product option (PO) represents a non-empty subset of CIAs of a certain configuration item provided by a manufacturer for customers to select and customize specific product features and is on behalf of customers’ rights reflecting customer experiences on a class of products.</p>
<p><italic>Definition 6:</italic> a PO value (POV) is a group of values assigned to the attributes represented by a PO and is one of the choices provided by the PO.</p>
<p><italic>Definition 7:</italic> an option value carrier (OVC) is a set of physical entities that realize one POV of a certain PO.</p>
</sec>
<sec id="section7-0954405411432516">
<title>Modular product architecture</title>
<p><italic>Definition 8:</italic> a modular product architecture (MPA) is a fixed hierarchy, a three-dimensional framework being composed of interfaces and boundaries, and represents the overall abstract structure of a family of modular products.</p>
<p><italic>Definition 9:</italic> a model product represents a set of variants derived from a certain MPA.</p>
<p><italic>Definition 10:</italic> a product structure is the structure of a variant derived from a model product and represents a real manufactured product.</p>
</sec>
<sec id="section8-0954405411432516">
<title>Product module</title>
<p><italic>Definition 11:</italic> a module is an abstract entity that represents all the development specifications, the boundaries, the intended functions, and the interfaces satisfied by all the instantiated module instances.</p>
<p><italic>Definition 12:</italic> an interface is a part of a module, the specifications of the channel through which a module instance interacts with its surroundings.</p>
<p><italic>Definition 13:</italic> a module instance is a physical implementation of a module, meeting all the requirements of the module, and can be designed, developed, tested, and fabricated independently.</p>
<p>Currently, in academia and industry, a module instance is generally known as a ‘module’. However, this ‘module’ is difficult to differentiate from common product components. It is a semantic or conceptual confusion between a general and a special, or between an abstract and an actual. Therefore, a computer reasoning system finds it difficult to identify relationships among those ‘modules’.</p>
</sec>
<sec id="section9-0954405411432516">
<title>Modular product configuration item</title>
<p><italic>Definition 14:</italic> A configuration item (CI) is an under control construction block of modular products or systems that customers emphasize on, is the product configuration unit managed by the manufacturer, and is the basic unit of the task allocation in project management in MPD.</p>
<p>A CI containing other CIs, is called as a combination CI (CCI), while a CI not containing other CIs is called as a meta CI (MCI). In fact, a CI is an alias of a module controlled by customers and the manufacturer, and has all the properties of a module.</p>
<p><italic>Definition 15:</italic> A design solution (DS) is the design solution to realize a modular product CI, and is composed of modules. A CI may have one or more DSs.</p>
<p><italic>Definition 16:</italic> A DS instance (DSI) is a group of module instances assigned to the modules of a certain DS.</p>
<p><xref ref-type="fig" rid="fig2-0954405411432516">Figure 2</xref> shows the relationships among some of the above-mentioned concepts. They interact together, and constitute the concept system of MPD.</p>
<fig id="fig2-0954405411432516" position="float">
<label>Figure 2.</label>
<caption>
<p>Relationships among concepts.</p>
<p>PO: product option; CI: configuration item.</p>
</caption>
<graphic xlink:href="10.1177_0954405411432516-fig2.tif"/>
</fig>
</sec>
</sec>
<sec id="section10-0954405411432516">
<title>Generic structure definition</title>
<p>A generic structure for modular products has been built, as shown in <xref ref-type="fig" rid="fig3-0954405411432516">Figure 3</xref>, based on the integration of common characteristics of modular products. This structure is a unified model for all modular products. Because of considering product development, manufacturing, project management, and customer cognition on products, the generic structure could be used as a standard generic structure for the representation model.</p>
<fig id="fig3-0954405411432516" position="float">
<label>Figure 3.</label>
<caption>
<p>Generic structure for modular products.</p>
<p>MP: modular product; MCI: meta configuration item; CCI: combination configuration item; DS: design solution.</p>
</caption>
<graphic xlink:href="10.1177_0954405411432516-fig3.tif"/>
</fig>
<p>Since the structure of a model product is relative steady, the top structure of the generic structure is merely a CI hierarchy. That is to say that each CI of each level has only one DS, i.e. one structure. For example, in <xref ref-type="fig" rid="fig3-0954405411432516">Figure 3</xref>, MP refers to a model product, being a CCI according to the definition of a CI, that has three sub-CIs, i.e. MCI<sub>0</sub>, CCI<sub>1</sub>, and CCI<sub>2</sub>. Moreover, CCI<sub>1</sub> has three sub-CIs, i.e. CCI<sub>10</sub>, MCI<sub>11</sub>, and MCI<sub>12</sub>. The middle structure of the generic structure is composed of all DSs of each MCI, all modules of each DS, and all module instances of each module. In addition, the middle structure will increase by adding new DSs of certain MCIs during the MPD procedure. For instance, in <xref ref-type="fig" rid="fig3-0954405411432516">Figure 3</xref>, it can see that there are some DSs and a new DS, modules, and module instances in the middle structure of MP. The bottom structure of the generic structure is composed of the assembly of each module instance.</p>
<p>Based on this generic structure, each model product could be transformed into a similar structure so that the unified operations could be fulfilled on all the model products.</p>
</sec>
<sec id="section11-0954405411432516">
<title>Concept formalization</title>
<p>Concept formalization is the procedure that uses a symbol system to express the involved concepts, and that makes the concepts more concrete. Using the formalization, concepts could be easily described by an ontology language. Manufacturers may extend these formalizations with respect to their own situations.</p>
<sec id="section12-0954405411432516">
<title>PO</title>
<p>The formalization of PO is as follows.</p>
<p><disp-formula id="disp-formula1-0954405411432516">
<mml:math display="block" id="math1-0954405411432516">
<mml:mrow>
<mml:mtable align="left">
<mml:mtr>
<mml:mtd columnalign="left">
<mml:mrow>
<mml:mi>PO</mml:mi>
<mml:mo>=</mml:mo>
<mml:mrow>
<mml:mo>(</mml:mo>
<mml:mrow>
<mml:mo>{</mml:mo>
<mml:mi>MPA</mml:mi>
<mml:mo>}</mml:mo>
</mml:mrow>
<mml:mo>,</mml:mo>
<mml:mrow>
<mml:mo>{</mml:mo>
<mml:mi>CI</mml:mi>
<mml:mo>}</mml:mo>
</mml:mrow>
<mml:mo>,</mml:mo>
<mml:mrow>
<mml:mo>{</mml:mo>
<mml:mi>A</mml:mi>
<mml:mo>}</mml:mo>
</mml:mrow>
<mml:mo>,</mml:mo>
<mml:mrow>
<mml:mo>{</mml:mo>
<mml:mi>POV</mml:mi>
<mml:mo>}</mml:mo>
</mml:mrow>
<mml:mo>,</mml:mo>
<mml:mrow>
<mml:mo>{</mml:mo>
<mml:mi>OVC</mml:mi>
<mml:mo>}</mml:mo>
</mml:mrow>
<mml:mo>,</mml:mo>
<mml:mrow>
<mml:mo>{</mml:mo>
<mml:mi>m</mml:mi>
<mml:mo>}</mml:mo>
</mml:mrow>
<mml:mo>)</mml:mo>
</mml:mrow>
</mml:mrow>
</mml:mtd>
</mml:mtr>
<mml:mtr>
<mml:mtd columnalign="left">
<mml:mrow>
<mml:mi>POV</mml:mi>
<mml:mo>=</mml:mo>
<mml:mrow>
<mml:mo>{</mml:mo>
<mml:mo>&lt;</mml:mo>
<mml:msub>
<mml:mrow>
<mml:mi>A</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>p</mml:mi>
</mml:mrow>
</mml:msub>
<mml:mo>,</mml:mo>
<mml:mi>value</mml:mi>
<mml:mo>&gt;</mml:mo>
<mml:mo>}</mml:mo>
</mml:mrow>
<mml:mo>,</mml:mo>
<mml:msub>
<mml:mrow>
<mml:mi>A</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>p</mml:mi>
</mml:mrow>
</mml:msub>
<mml:mo>∈</mml:mo>
<mml:mrow>
<mml:mo>{</mml:mo>
<mml:mi>A</mml:mi>
<mml:mo>}</mml:mo>
</mml:mrow>
</mml:mrow>
</mml:mtd>
</mml:mtr>
<mml:mtr>
<mml:mtd columnalign="left">
<mml:mrow>
<mml:mi>OVC</mml:mi>
<mml:mo>=</mml:mo>
<mml:mrow>
<mml:mo>{</mml:mo>
<mml:mo>&lt;</mml:mo>
<mml:mi>PO</mml:mi>
<mml:msub>
<mml:mrow>
<mml:mi>V</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>i</mml:mi>
</mml:mrow>
</mml:msub>
<mml:mo>,</mml:mo>
<mml:mi>MP</mml:mi>
<mml:msub>
<mml:mrow>
<mml:mi>A</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>j</mml:mi>
</mml:mrow>
</mml:msub>
<mml:mo>,</mml:mo>
<mml:mi>C</mml:mi>
<mml:msub>
<mml:mrow>
<mml:mi>I</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>k</mml:mi>
</mml:mrow>
</mml:msub>
<mml:mo>,</mml:mo>
<mml:mrow>
<mml:mo>{</mml:mo>
<mml:msub>
<mml:mrow>
<mml:mi>m</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>l</mml:mi>
</mml:mrow>
</mml:msub>
<mml:mo>}</mml:mo>
</mml:mrow>
<mml:mo>&gt;</mml:mo>
<mml:mo>}</mml:mo>
</mml:mrow>
<mml:mo>,</mml:mo>
</mml:mrow>
</mml:mtd>
</mml:mtr>
<mml:mtr>
<mml:mtd columnalign="center">
<mml:mrow>
<mml:mi>PO</mml:mi>
<mml:msub>
<mml:mrow>
<mml:mi>V</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>i</mml:mi>
</mml:mrow>
</mml:msub>
<mml:mo>∈</mml:mo>
<mml:mrow>
<mml:mo>{</mml:mo>
<mml:mi>POV</mml:mi>
<mml:mo>}</mml:mo>
</mml:mrow>
<mml:mo>,</mml:mo>
<mml:mi>MP</mml:mi>
<mml:msub>
<mml:mrow>
<mml:mi>A</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>j</mml:mi>
</mml:mrow>
</mml:msub>
<mml:mo>∈</mml:mo>
<mml:mrow>
<mml:mo>{</mml:mo>
<mml:mi>MPA</mml:mi>
<mml:mo>}</mml:mo>
</mml:mrow>
<mml:mo>,</mml:mo>
</mml:mrow>
</mml:mtd>
</mml:mtr>
<mml:mtr>
<mml:mtd columnalign="center">
<mml:mrow>
<mml:mi>C</mml:mi>
<mml:msub>
<mml:mrow>
<mml:mi>I</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>k</mml:mi>
</mml:mrow>
</mml:msub>
<mml:mo>∈</mml:mo>
<mml:mrow>
<mml:mo>{</mml:mo>
<mml:mi>CI</mml:mi>
<mml:mo>}</mml:mo>
</mml:mrow>
<mml:mo>,</mml:mo>
<mml:msub>
<mml:mrow>
<mml:mi>m</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>l</mml:mi>
</mml:mrow>
</mml:msub>
<mml:mo>∈</mml:mo>
<mml:mrow>
<mml:mo>{</mml:mo>
<mml:mi>m</mml:mi>
<mml:mo>}</mml:mo>
</mml:mrow>
</mml:mrow>
</mml:mtd>
</mml:mtr>
</mml:mtable>
</mml:mrow>
</mml:math>
<graphic alternate-form-of="disp-formula1-0954405411432516" xlink:href="10.1177_0954405411432516-eq1.tif"/>
</disp-formula>
</p>
<p>where, <italic>PO</italic> refers to a PO; {<italic>MPA</italic>} refers to the set of MPAs that has the PO; {<italic>CI</italic>} refers to the set of CIs that has the PO; {<italic>A</italic>} refers to the set of CIAs; {<italic>POV</italic>} refers to the set of POVs; <italic>value</italic> refers to the specific value of a CIA; {<italic>OVC</italic>} refers to the set of OVCs; {<italic>m</italic>} refers to the set of module instances.</p>
</sec>
<sec id="section13-0954405411432516">
<title>MPA</title>
<p>The formalization of MPA is as follows.</p>
<p><disp-formula id="disp-formula2-0954405411432516">
<mml:math display="block" id="math2-0954405411432516">
<mml:mstyle displaystyle="true">
<mml:mrow>
<mml:mtable align="left">
<mml:mtr>
<mml:mtd columnalign="left">
<mml:mrow>
<mml:mi>MPA</mml:mi>
<mml:mo>=</mml:mo>
<mml:mrow>
<mml:mo>(</mml:mo>
<mml:mrow>
<mml:mo>{</mml:mo>
<mml:mi>CCI</mml:mi>
<mml:mo>}</mml:mo>
</mml:mrow>
<mml:mo>,</mml:mo>
<mml:mrow>
<mml:mo>{</mml:mo>
<mml:mi>MCI</mml:mi>
<mml:mo>}</mml:mo>
</mml:mrow>
<mml:mo>,</mml:mo>
<mml:mrow>
<mml:mo>{</mml:mo>
<mml:mi>DS</mml:mi>
<mml:mo>}</mml:mo>
</mml:mrow>
<mml:mo>,</mml:mo>
<mml:mrow>
<mml:mo>{</mml:mo>
<mml:mi>M</mml:mi>
<mml:mo>}</mml:mo>
</mml:mrow>
<mml:mo>,</mml:mo>
<mml:mrow>
<mml:mo>{</mml:mo>
<mml:mi>DSI</mml:mi>
<mml:mo>}</mml:mo>
</mml:mrow>
<mml:mo>,</mml:mo>
<mml:mrow>
<mml:mo>{</mml:mo>
<mml:mi>m</mml:mi>
<mml:mo>}</mml:mo>
</mml:mrow>
<mml:mo>,</mml:mo>
<mml:mi>HR</mml:mi>
<mml:mo>,</mml:mo>
<mml:mi>SR</mml:mi>
<mml:mo>)</mml:mo>
</mml:mrow>
</mml:mrow>
</mml:mtd>
</mml:mtr>
<mml:mtr>
<mml:mtd columnalign="left">
<mml:mrow>
<mml:mi>CCI</mml:mi>
<mml:mo>=</mml:mo>
<mml:mo stretchy="false">{</mml:mo>
<mml:mrow>
<mml:mo>{</mml:mo>
<mml:mi>CCI</mml:mi>
<mml:mo>}</mml:mo>
</mml:mrow>
<mml:mo>,</mml:mo>
<mml:mo stretchy="false">{</mml:mo>
<mml:mi>MCI</mml:mi>
<mml:mo stretchy="false">}</mml:mo>
<mml:mo>,</mml:mo>
<mml:mi>HR</mml:mi>
<mml:mo stretchy="false">}</mml:mo>
</mml:mrow>
</mml:mtd>
</mml:mtr>
<mml:mtr>
<mml:mtd columnalign="left">
<mml:mrow>
<mml:mi>MCI</mml:mi>
<mml:mo>=</mml:mo>
<mml:mo stretchy="false">{</mml:mo>
<mml:mi>CCI</mml:mi>
<mml:mo>,</mml:mo>
<mml:mrow>
<mml:mo>{</mml:mo>
<mml:mi>DS</mml:mi>
<mml:mo>}</mml:mo>
</mml:mrow>
<mml:mo stretchy="false">}</mml:mo>
</mml:mrow>
</mml:mtd>
</mml:mtr>
<mml:mtr>
<mml:mtd columnalign="left">
<mml:mrow>
<mml:mi>DS</mml:mi>
<mml:mo>=</mml:mo>
<mml:mrow>
<mml:mo>{</mml:mo>
<mml:mi>MC</mml:mi>
<mml:msub>
<mml:mrow>
<mml:mi>I</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>m</mml:mi>
</mml:mrow>
</mml:msub>
<mml:mo>,</mml:mo>
<mml:mrow>
<mml:mo>{</mml:mo>
<mml:msub>
<mml:mrow>
<mml:mi>M</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>q</mml:mi>
</mml:mrow>
</mml:msub>
<mml:mo>}</mml:mo>
</mml:mrow>
<mml:mo>}</mml:mo>
</mml:mrow>
</mml:mrow>
</mml:mtd>
</mml:mtr>
<mml:mtr>
<mml:mtd columnalign="left">
<mml:mrow>
<mml:mi>DSI</mml:mi>
<mml:mo>=</mml:mo>
<mml:mrow>
<mml:mo>{</mml:mo>
<mml:mo>&lt;</mml:mo>
<mml:mi>D</mml:mi>
<mml:msub>
<mml:mrow>
<mml:mi>S</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>i</mml:mi>
</mml:mrow>
</mml:msub>
<mml:mo>,</mml:mo>
<mml:mrow>
<mml:mo>{</mml:mo>
<mml:msub>
<mml:mrow>
<mml:mi>m</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>j</mml:mi>
</mml:mrow>
</mml:msub>
<mml:mo>}</mml:mo>
</mml:mrow>
<mml:mo>&gt;</mml:mo>
<mml:mo>}</mml:mo>
</mml:mrow>
<mml:mo>,</mml:mo>
<mml:mi>D</mml:mi>
<mml:msub>
<mml:mrow>
<mml:mi>S</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>i</mml:mi>
</mml:mrow>
</mml:msub>
<mml:mo>∈</mml:mo>
<mml:mrow>
<mml:mo>{</mml:mo>
<mml:mi>DS</mml:mi>
<mml:mo>}</mml:mo>
</mml:mrow>
<mml:mo>,</mml:mo>
<mml:msub>
<mml:mrow>
<mml:mi>m</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>j</mml:mi>
</mml:mrow>
</mml:msub>
<mml:mo>∈</mml:mo>
<mml:mrow>
<mml:mo>{</mml:mo>
<mml:mi>m</mml:mi>
<mml:mo>}</mml:mo>
</mml:mrow>
</mml:mrow>
</mml:mtd>
</mml:mtr>
<mml:mtr>
<mml:mtd columnalign="left">
<mml:mrow>
<mml:mi>HR</mml:mi>
<mml:mo>=</mml:mo>
<mml:mrow>
<mml:mo>{</mml:mo>
<mml:mo>&lt;</mml:mo>
<mml:mi>CC</mml:mi>
<mml:msub>
<mml:mrow>
<mml:mi>I</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>i</mml:mi>
</mml:mrow>
</mml:msub>
<mml:mo>,</mml:mo>
<mml:mi>CC</mml:mi>
<mml:msub>
<mml:mrow>
<mml:mi>I</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>j</mml:mi>
</mml:mrow>
</mml:msub>
<mml:mo>&gt;</mml:mo>
<mml:mo>∪</mml:mo>
<mml:mo>&lt;</mml:mo>
<mml:mi>CC</mml:mi>
<mml:msub>
<mml:mrow>
<mml:mi>I</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>l</mml:mi>
</mml:mrow>
</mml:msub>
<mml:mo>,</mml:mo>
<mml:mi>MC</mml:mi>
<mml:msub>
<mml:mrow>
<mml:mi>I</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>m</mml:mi>
</mml:mrow>
</mml:msub>
<mml:mo>&gt;</mml:mo>
<mml:mo>∪</mml:mo>
<mml:mo>&lt;</mml:mo>
<mml:mi>D</mml:mi>
<mml:msub>
<mml:mrow>
<mml:mi>S</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>p</mml:mi>
</mml:mrow>
</mml:msub>
<mml:mo>,</mml:mo>
<mml:msub>
<mml:mrow>
<mml:mi>M</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>q</mml:mi>
</mml:mrow>
</mml:msub>
<mml:mo>&gt;</mml:mo>
<mml:mo>}</mml:mo>
</mml:mrow>
<mml:mo>,</mml:mo>
</mml:mrow>
</mml:mtd>
</mml:mtr>
<mml:mtr>
<mml:mtd columnalign="center">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>M</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>q</mml:mi>
</mml:mrow>
</mml:msub>
<mml:mo>∈</mml:mo>
<mml:mrow>
<mml:mo>{</mml:mo>
<mml:mi>M</mml:mi>
<mml:mo>}</mml:mo>
</mml:mrow>
<mml:mo>,</mml:mo>
<mml:mi>MC</mml:mi>
<mml:msub>
<mml:mrow>
<mml:mi>I</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>m</mml:mi>
</mml:mrow>
</mml:msub>
<mml:mo>∈</mml:mo>
<mml:mrow>
<mml:mo>{</mml:mo>
<mml:mi>MCI</mml:mi>
<mml:mo>}</mml:mo>
</mml:mrow>
<mml:mo>,</mml:mo>
<mml:mi>CC</mml:mi>
<mml:msub>
<mml:mrow>
<mml:mi>I</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>i</mml:mi>
</mml:mrow>
</mml:msub>
<mml:mo>,</mml:mo>
<mml:mi>CC</mml:mi>
<mml:msub>
<mml:mrow>
<mml:mi>I</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>j</mml:mi>
</mml:mrow>
</mml:msub>
<mml:mo>,</mml:mo>
<mml:mi>CC</mml:mi>
<mml:msub>
<mml:mrow>
<mml:mi>I</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>l</mml:mi>
</mml:mrow>
</mml:msub>
<mml:mo>∈</mml:mo>
<mml:mrow>
<mml:mo>{</mml:mo>
<mml:mi>CCI</mml:mi>
<mml:mo>}</mml:mo>
</mml:mrow>
</mml:mrow>
</mml:mtd>
</mml:mtr>
<mml:mtr>
<mml:mtd columnalign="left">
<mml:mrow>
<mml:mi>SR</mml:mi>
<mml:mo>=</mml:mo>
<mml:mrow>
<mml:mo>{</mml:mo>
<mml:mo>&lt;</mml:mo>
<mml:mi>MC</mml:mi>
<mml:msub>
<mml:mrow>
<mml:mi>I</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>i</mml:mi>
</mml:mrow>
</mml:msub>
<mml:mo>,</mml:mo>
<mml:mi>D</mml:mi>
<mml:msub>
<mml:mrow>
<mml:mi>S</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>j</mml:mi>
</mml:mrow>
</mml:msub>
<mml:mo>&gt;</mml:mo>
<mml:mo>}</mml:mo>
</mml:mrow>
<mml:mo>,</mml:mo>
<mml:mi>MC</mml:mi>
<mml:msub>
<mml:mrow>
<mml:mi>I</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>i</mml:mi>
</mml:mrow>
</mml:msub>
<mml:mo>∈</mml:mo>
<mml:mrow>
<mml:mo>{</mml:mo>
<mml:mi>MCI</mml:mi>
<mml:mo>}</mml:mo>
</mml:mrow>
<mml:mo>,</mml:mo>
<mml:mi>D</mml:mi>
<mml:msub>
<mml:mrow>
<mml:mi>S</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>j</mml:mi>
</mml:mrow>
</mml:msub>
<mml:mo>∈</mml:mo>
<mml:mrow>
<mml:mo>{</mml:mo>
<mml:mi>DS</mml:mi>
<mml:mo>}</mml:mo>
</mml:mrow>
</mml:mrow>
</mml:mtd>
</mml:mtr>
</mml:mtable>
</mml:mrow>
</mml:mstyle>
</mml:math>
<graphic alternate-form-of="disp-formula2-0954405411432516" xlink:href="10.1177_0954405411432516-eq2.tif"/></disp-formula>
</p>
<p>where, <italic>MPA</italic> refers to a MPA; {<italic>CCI</italic>} refers to the finite set of CCIs; {MCI} refers to the finite set of MCIs; {<italic>DS</italic>} refers to the finite set of DSs; {<italic>M</italic>} refers to the finite set of modules; {<italic>DSI</italic>} refers to the set of DSIs; {<italic>m</italic>} refers to the set of module instances; <italic>HR</italic> refers to the hierarchy relationship; <italic>SR</italic> refers to the selection relationship.</p>
</sec>
<sec id="section14-0954405411432516">
<title>Product module</title>
<p>The formalization of a module is as follows</p>
<p><disp-formula id="disp-formula3-0954405411432516">
<mml:math display="block" id="math3-0954405411432516">
<mml:mrow>
<mml:mtable align="left">
<mml:mtr>
<mml:mtd columnalign="left">
<mml:mrow>
<mml:mi>M</mml:mi>
<mml:mo>=</mml:mo>
<mml:mo stretchy="false">(</mml:mo>
<mml:mrow>
<mml:mo>{</mml:mo>
<mml:mi>m</mml:mi>
<mml:mo>}</mml:mo>
</mml:mrow>
<mml:mo>,</mml:mo>
<mml:mrow>
<mml:mo>{</mml:mo>
<mml:mi>F</mml:mi>
<mml:mo>}</mml:mo>
</mml:mrow>
<mml:mo>,</mml:mo>
<mml:mrow>
<mml:mo>{</mml:mo>
<mml:mi>i</mml:mi>
<mml:mo>}</mml:mo>
</mml:mrow>
<mml:mo>,</mml:mo>
<mml:mrow>
<mml:mo>{</mml:mo>
<mml:mi>B</mml:mi>
<mml:mo>}</mml:mo>
</mml:mrow>
<mml:mo>,</mml:mo>
<mml:mrow>
<mml:mo>{</mml:mo>
<mml:mi>R</mml:mi>
<mml:mo>}</mml:mo>
</mml:mrow>
<mml:mo>,</mml:mo>
<mml:mrow>
<mml:mo>{</mml:mo>
<mml:mi>A</mml:mi>
<mml:mo>}</mml:mo>
</mml:mrow>
<mml:mo stretchy="false">)</mml:mo>
</mml:mrow>
</mml:mtd>
</mml:mtr>
<mml:mtr>
<mml:mtd columnalign="left">
<mml:mrow>
<mml:mrow>
<mml:mo>{</mml:mo>
<mml:mi>F</mml:mi>
<mml:mo>}</mml:mo>
</mml:mrow>
<mml:mo>⊂</mml:mo>
<mml:mrow>
<mml:mo>{</mml:mo>
<mml:mi>A</mml:mi>
<mml:mo>}</mml:mo>
</mml:mrow>
</mml:mrow>
</mml:mtd>
</mml:mtr>
<mml:mtr>
<mml:mtd columnalign="left">
<mml:mrow>
<mml:mrow>
<mml:mo>{</mml:mo>
<mml:mi>R</mml:mi>
<mml:mo>}</mml:mo>
</mml:mrow>
<mml:mo>=</mml:mo>
<mml:mi>Range</mml:mi>
<mml:mrow>
<mml:mo>(</mml:mo>
<mml:mrow>
<mml:mo>{</mml:mo>
<mml:mi>A</mml:mi>
<mml:mo>}</mml:mo>
</mml:mrow>
<mml:mo>)</mml:mo>
</mml:mrow>
</mml:mrow>
</mml:mtd>
</mml:mtr>
<mml:mtr>
<mml:mtd columnalign="left">
<mml:mrow>
<mml:mrow>
<mml:mo>{</mml:mo>
<mml:mi>B</mml:mi>
<mml:mo>}</mml:mo>
</mml:mrow>
<mml:mo>⊂</mml:mo>
<mml:mrow>
<mml:mo>{</mml:mo>
<mml:mi>R</mml:mi>
<mml:mo>}</mml:mo>
</mml:mrow>
</mml:mrow>
</mml:mtd>
</mml:mtr>
</mml:mtable>
</mml:mrow>
</mml:math>
<graphic alternate-form-of="disp-formula3-0954405411432516" xlink:href="10.1177_0954405411432516-eq3.tif"/>
</disp-formula>
</p>
<p>where, <italic>M</italic> refers to a module; {<italic>m</italic>} refers to the finite set of module instances; {<italic>R</italic>} refers to the set of design rules; {<italic>B</italic>} refers to the set of boundaries satisfied by all the module instances; {<italic>F</italic>} refers to the set of functions; {<italic>i</italic>} refers to the set of interface; {<italic>A</italic>} refers to the set of attributes of this module; <italic>Range</italic>(.) refers to the value scope of each element of {<italic>A</italic>}.</p>
</sec>
<sec id="section15-0954405411432516">
<title>Module instance</title>
<p>The formalization of a module instance is as follows</p>
<p><disp-formula id="disp-formula4-0954405411432516">
<mml:math display="block" id="math4-0954405411432516">
<mml:mrow>
<mml:mi>m</mml:mi>
<mml:mo>=</mml:mo>
<mml:mo stretchy="false">(</mml:mo>
<mml:mi>M</mml:mi>
<mml:mo>,</mml:mo>
<mml:mrow>
<mml:mo>{</mml:mo>
<mml:mo>&lt;</mml:mo>
<mml:mi>A</mml:mi>
<mml:mo>,</mml:mo>
<mml:mi>value</mml:mi>
<mml:mo>&gt;</mml:mo>
<mml:mo>}</mml:mo>
</mml:mrow>
<mml:mo stretchy="false">)</mml:mo>
</mml:mrow>
</mml:math>
<graphic alternate-form-of="disp-formula4-0954405411432516" xlink:href="10.1177_0954405411432516-eq4.tif"/>
</disp-formula>
</p>
<p>where, <italic>m</italic> refers to a module instance; {&lt;<italic>A</italic>, <italic>value</italic>&gt;} refers the set of attribute values of the module instance.</p>
</sec>
<sec id="section16-0954405411432516">
<title>Modular product structure</title>
<p>The formalization of a modular product structure is as follows</p>
<p><disp-formula id="disp-formula5-0954405411432516">
<mml:math display="block" id="math5-0954405411432516">
<mml:mrow>
<mml:mtable align="left">
<mml:mtr>
<mml:mtd columnalign="left">
<mml:mrow>
<mml:mi>MP</mml:mi>
<mml:mo>=</mml:mo>
<mml:mrow>
<mml:mo>(</mml:mo>
<mml:mrow>
<mml:mo>{</mml:mo>
<mml:mi>m</mml:mi>
<mml:mo>}</mml:mo>
</mml:mrow>
<mml:mo>,</mml:mo>
<mml:mi>MPA</mml:mi>
<mml:mo>,</mml:mo>
<mml:mi>PCST</mml:mi>
<mml:mo>)</mml:mo>
</mml:mrow>
<mml:mo>,</mml:mo>
</mml:mrow>
</mml:mtd>
</mml:mtr>
<mml:mtr>
<mml:mtd columnalign="center">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>m</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>i</mml:mi>
</mml:mrow>
</mml:msub>
<mml:mo>∈</mml:mo>
<mml:msub>
<mml:mrow>
<mml:mi>M</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>j</mml:mi>
</mml:mrow>
</mml:msub>
<mml:mo>∈</mml:mo>
<mml:mi>MPA</mml:mi>
</mml:mrow>
</mml:mtd>
</mml:mtr>
<mml:mtr>
<mml:mtd columnalign="center">
<mml:mrow>
<mml:mi>PCST</mml:mi>
<mml:mo>=</mml:mo>
<mml:mrow>
<mml:mo>{</mml:mo>
<mml:mi>PO</mml:mi>
<mml:msub>
<mml:mrow>
<mml:mi>V</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>i</mml:mi>
</mml:mrow>
</mml:msub>
<mml:mo>}</mml:mo>
</mml:mrow>
<mml:mo>,</mml:mo>
<mml:mi>PO</mml:mi>
<mml:msub>
<mml:mrow>
<mml:mi>V</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>i</mml:mi>
</mml:mrow>
</mml:msub>
<mml:mo>∈</mml:mo>
<mml:mi>P</mml:mi>
<mml:msub>
<mml:mrow>
<mml:mi>O</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>j</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:mtd>
</mml:mtr>
</mml:mtable>
</mml:mrow>
</mml:math>
<graphic alternate-form-of="disp-formula5-0954405411432516" xlink:href="10.1177_0954405411432516-eq5.tif"/>
</disp-formula>
</p>
<p>where, <italic>MP</italic> refers to a modular product structure; {<italic>m</italic>} refers to the finite set of module instances; <italic>MPA</italic> refers to the inherited MPA; <italic>PCST</italic> refers to the list of POVs.</p>
</sec>
</sec>
<sec id="section17-0954405411432516">
<title>MPD ontology development process</title>
<p>The establishment of MPD ontology adopts a top-down development process, as shown in <xref ref-type="fig" rid="fig4-0954405411432516">Figure 4</xref>. The process includes six steps: POs, MPA, modules, module instance, product structure ontology establishment and web ontology language (OWL) programming.</p>
<fig id="fig4-0954405411432516" position="float">
<label>Figure 4.</label>
<caption><p>MPD ontology development process.</p><p>OWL: web ontology language.</p></caption>
<graphic xlink:href="10.1177_0954405411432516-fig4.tif"/></fig>
<sec id="section18-0954405411432516">
<title>PO ontology</title>
<p>A PO is a direct response to CR, and represents a group of CIAs. First, collect and analyse customer needs, and translate them into product-specific specifications, i.e. CR. Second, find all the attributes that have different requirements. Third, change these attributes and requirements into POs. Fourth, create an ontology class for concepts in the domain of the PO. Last, add individuals for each ontology class.</p>
</sec>
<sec id="section19-0954405411432516">
<title>MPA ontology</title>
<p>Firms should find out all the MPAs in MPD and define the class MPA and its properties with respect to the formalized representation. Each real MPA is an individual of this class. Note that the properties of a MPA are not limited to those in formalized representation. For a certain firm, the properties of class MPA must be determined according to the real developing requirements.</p>
</sec>
<sec id="section20-0954405411432516">
<title>Product module ontology</title>
<p>Modules are abstracted into an ontology class and all modules become its sub-classes according to the definition of a module. Each module class or sub-class has its individuals expressing the real modules. In order to build module ontology, firms must collect and collate existing product components and identify the module instances and then create the module class, sub-classes, and their individuals.</p>
</sec>
<sec id="section21-0954405411432516">
<title>Module instance ontology</title>
<p>A module instance is the actual manufactured entity and is the most complex part in the modelling process. A module instance has general information of its functions, performances, interface, assembly, and so on. Commonly, there are two types of instances: outsourcing and self-made. For an outsourcing instance, the corresponding properties are less and it just contains the information of suppliers and acquisition-related in addition to general information. For a self-made instance, it has more information, such as alternative information, subsystems, working principle, design models, analysis and calculations, test data, and so on.</p>
</sec>
<sec id="section22-0954405411432516">
<title>Modular product structure ontology</title>
<p>A product structure represents a specific variant of a model product. All the product structures are defined as a top-level ontology class and each real structure is an individual of this class according to the requirements of MPD. Firms must search out all of the product structures and extract the common properties to define the product structure ontology.</p>
</sec>
<sec id="section23-0954405411432516">
<title>OWL programming</title>
<p>Tools: OWL is the standard ontology language of semantic web recommended by the W3C. On 10 February 2004, W3C released the first recommended version 1.0 of OWL and version 2.0 (OWL2) was released on 27 October 2007, after application and improvement of OWL1 for years. As a kind of ontology implementation on the web, OWL expresses ontology as an XML document and can be directly processed in a computer. Therefore, OWL2 is selected as the language to express MPD ontology.</p>
<p>Protégé is a kind of application software developed by Stanford University for ontology edit and knowledge acquisition and has become one of the most popular ontology editors at present. Its current release has the capability to support the newest OWL2 language. So, Protégé is employed as the development environment for MPD ontology development.</p>
<p>Demonstration case: Since the establishment of ontology for modular products relates to real products, we exploit a high-performance notebook personal computer (NPC) family of a famous firm to demonstrate the result of MPD ontology establishment.</p>
<p>NPC has a few series, such as, H, M, and L, aimed at different market segments and each series has different models. Because the modelling for the whole NPC is a huge task, an H09 model is selected to demonstrate the NPC ontology. It processes the five real products as shown in <xref ref-type="fig" rid="fig5-0954405411432516">Figure 5</xref>.</p>
<fig id="fig5-0954405411432516" position="float">
<label>Figure 5.</label>
<caption>
<p>Product configuration list of H09 model.</p>
</caption>
<graphic xlink:href="10.1177_0954405411432516-fig5.tif"/>
</fig>
<p>The NPC ontology has been developed using Protégé 4.02. <xref ref-type="fig" rid="fig6-0954405411432516">Figure 6</xref> shows the top-level classes of the NPC ontology and their sub-classes. <xref ref-type="fig" rid="fig7-0954405411432516">Figure 7</xref> shows a PO ontology graph. <xref ref-type="fig" rid="fig8-0954405411432516">Figure 8</xref> shows a query example of the NPC ontology using a ‘DL Query’ function in Protégé. The example is a query (<italic>HasModuleInstance</italic> value <italic>MI_1G1066MHz_Memory</italic>) to search all the individuals related to module instance <italic>MI_1G1066MHz_ Memory</italic>. The result includes the individuals of <italic>ProductStructure</italic>: <italic>H09-1</italic>, <italic>H09-3</italic>, <italic>H09-4</italic>, and <italic>H09-5</italic>, the individual of <italic>Memory</italic>: <italic>M_DDR3_Memory</italic>, and the individual of <italic>ProductOption</italic>: <italic>OVC_Memory_Size_3G</italic>.</p>
<fig id="fig6-0954405411432516" position="float">
<label>Figure 6.</label>
<caption>
<p>Top-level class diagram of NPC ontology.</p>
<p>OVC: option value carrier; POV: product option value; CCI: combination configuration item; MCI: meta configuration item.</p>
</caption>
<graphic xlink:href="10.1177_0954405411432516-fig6.tif"/>
</fig>
<fig id="fig7-0954405411432516" position="float">
<label>Figure 7.</label>
<caption>
<p>Product option <italic>PO_CPU_Performance</italic> ontology.</p>
<p>PO: product option; CPU: central processing unit; NPC: notebook personal computer; POV: product option value; OVC: option value carrier; MCI: meta configuration item; DS: design solution; MI: module instance</p>
</caption>
<graphic xlink:href="10.1177_0954405411432516-fig7.tif"/>
</fig>
<fig id="fig8-0954405411432516" position="float">
<label>Figure 8.</label>
<caption>
<p>Sample of an ontology query.</p>
<p>OVC: option value carrier.</p>
</caption>
<graphic xlink:href="10.1177_0954405411432516-fig8.tif"/>
</fig>
</sec>
</sec>
</sec>
<sec id="section24-0954405411432516">
<title>Model feasibility analysis</title>
<sec id="section25-0954405411432516">
<title>Feasibility analysis</title>
<p>Since a family of modular products commonly has a steady architecture, it is possible to define a generic structure for the family. The proposed generic structure is just such a structure for modular products. Compatible with the structure, the related concepts in MPD are redefined at the same time. These concepts have no serious conflicts with existing ones but they become more precise and clear. In addition, the concepts directly relate to real practices in manufacturing industry. Although it seems to be more theoretical, they satisfy the requirements of MPD. Since the ontology technology is well suited to knowledge representation,<sup><xref ref-type="bibr" rid="bibr19-0954405411432516">19</xref></sup> the representation models are based on ontology. Moreover, OWL is exploited to implement the ontology in computers. In comparison with the existing contributions, this study focuses on the development process of modular products, not on the knowledge management. In summary, this approach is feasible in industry.</p>
</sec>
<sec id="section26-0954405411432516">
<title>Comparison with existing models</title>
<p>In order to show the differences, <xref ref-type="table" rid="table1-0954405411432516">Table 1</xref> lists the comparisons between the proposed model and some existing ones. The comparison has six aspects, i.e. purpose, application scope, work object, technology, modelling method, and information carrier. The major difference between the proposed model and others is to support MPD rather than to express products or their knowledge using conventional product decomposition.</p>
<table-wrap id="table1-0954405411432516" position="float">
<label>Table 1.</label>
<caption>
<p>Comparison with various existing product representations.</p>
</caption>
<graphic alternate-form-of="table1-0954405411432516" xlink:href="10.1177_0954405411432516-table1.tif"/>
<table>
<colgroup>
<col align="left"/>
<col align="left"/>
<col align="left"/>
<col align="left"/>
<col align="left"/>
<col align="left"/>
</colgroup>
<thead>
<tr>
<th/>
<th align="left">The proposed</th>
<th align="left">Existing PDM/PLM systems<sup><xref ref-type="bibr" rid="bibr11-0954405411432516">11</xref>,<xref ref-type="bibr" rid="bibr12-0954405411432516">12</xref></sup></th>
<th align="left">Hao and Wang<sup><xref ref-type="bibr" rid="bibr24-0954405411432516">24</xref></sup></th>
<th align="left">Gao et al.<sup><xref ref-type="bibr" rid="bibr16-0954405411432516">16</xref></sup></th>
<th align="left">Nanda et al.<sup><xref ref-type="bibr" rid="bibr19-0954405411432516">19</xref></sup></th>
</tr>
</thead>
<tbody>
<tr>
<td>Purpose</td>
<td>Efficient design reuse; automatic processing</td>
<td>Product data management</td>
<td>Knowledge sharing</td>
<td>Automatic configuration</td>
<td>Information sharing</td>
</tr>
<tr>
<td>Application scope</td>
<td>Product data management</td>
<td>Product data management</td>
<td>Product life cycle</td>
<td>Product configuration</td>
<td>Knowledge management</td>
</tr>
<tr>
<td>Work object</td>
<td>MPD</td>
<td>General product; modular products</td>
<td>Product; components; process</td>
<td>CR; component configuration</td>
<td>Product family; component</td>
</tr>
<tr>
<td>Technology</td>
<td>Ontology</td>
<td>Generic BOM</td>
<td>Ontology</td>
<td>Ontology</td>
<td>Ontology</td>
</tr>
<tr>
<td>Modelling method</td>
<td>Formal model; process</td>
<td>Product structure decomposition</td>
<td>IDEF0</td>
<td>Multi-digraph; formal model</td>
<td>Formal model; process</td>
</tr>
<tr>
<td>Information carrier</td>
<td>OWL2.0; XML</td>
<td>Database</td>
<td>ODLBKIF; ASPECTOL;</td>
<td>BNF; database</td>
<td>OWL1.0; XML</td>
</tr>
</tbody>
</table>
<table-wrap-foot>
<fn id="table-fn1-0954405411432516">
<p>MPD: modular product development; CR: realise customer requirements; PDM: product data management; PLM: product lifecycle management; BOM: bill of material; IDEF: Integration Definition for Function Modeling; ODLBKIF: object description language based on knowledge interchange format; ASPECTOL: Aspect-based ontology description language; BNF: Backus-Naur Form.</p>
</fn>
</table-wrap-foot>
</table-wrap>
</sec>
<sec id="section27-0954405411432516">
<title>Potential industrial benefits</title>
<p>The purpose of this article is to provide a framework for a firm to develop a representation model to support or improve automatic capability of product data processing for MPD. Although the proposed model is just in the implementation process, in practice it shows some important potential benefits.</p>
<list id="list3-0954405411432516" list-type="order">
<list-item><p>The semantic organization of product data facilitates designers or engineers to master various modular products.</p></list-item>
<list-item><p>MPD ontology provides an information system with the basis to identify and reason modules or module instances automatically.</p></list-item>
<list-item><p>MPD ontology facilitates the accumulation of MPD knowledge.</p></list-item>
<list-item><p>Modularization or modular design could be standardized and normalized.</p></list-item>
<list-item><p>MPD ontology could extend the collaborative depth with partners.</p></list-item>
</list>
</sec>
</sec>
<sec id="section28-0954405411432516" sec-type="conclusions">
<title>Conclusion and future works</title>
<p>MPD has been a significant paradigm of product development in computer industry, automotive industry, and aircraft industry. However, MPD could not avoid a large amount of manual labor while it has realized reuse of experiences and instances. How to exploit computers to substitute manual labor in knowledge-intensive areas becomes a new goal to MPD. As the basis to realize automation, a new representation model for MPD is carried out. Modelling is a generic way to express the abstract ideas or concepts in product development, such as idea generation for conceptual design.<sup><xref ref-type="bibr" rid="bibr25-0954405411432516">25</xref></sup> The proposed model is intended to support the development of complex modular products in manufacturing industry and forms them. The generic structure of the model has explicit print of mechanical and electrical products. In fact, this model is a core model of product data management. It determines the performance of accessing and managing product data. Its efficient representation can not only increase search speed but also realize reasoning automatically, and consequently, development time and costs would be reduced.</p>
<p>The proposed representation model, at present, only supports model product, DS, module instance development, and other scenarios. Nevertheless, it is difficult to apply directly in product modularization, although the purpose of this modelling is to process existing designs automatically. Therefore, how to make it meet the requirements of product modularization will be a research perspective in the future. At the same time, how to integrate this approach into the current PDM/PLM systems is another important issue that needs to be solved. Because each application scenario has its specific way of fulfilling automatic processing based on this representation model, the implementation of each automatic machine needs more attention paid to it. In addition, the produce mechanism of dynamic individuals through the multi-agent system based on this model requires further study.</p>
</sec>
</body>
<back>
<fn-group>
<fn fn-type="financial-disclosure">
<p>The research is supported by Shanghai Research Center for Industrial Informatics.</p>
</fn>
</fn-group>
<ref-list>
<title>References</title>
<ref id="bibr1-0954405411432516">
<label>1.</label>
<citation citation-type="journal">
<person-group person-group-type="author">
<name><surname>Baldwin</surname><given-names>CY</given-names></name>
<name><surname>Clark</surname><given-names>KB</given-names></name>
</person-group>. <article-title>Modularity in the design of complex engineering systems</article-title>. In: <source>Complex engineered systems</source>, <year>2006</year>, pp.<fpage>175</fpage>–<lpage>205</lpage>.</citation>
</ref>
<ref id="bibr2-0954405411432516">
<label>2.</label>
<citation citation-type="journal">
<person-group person-group-type="author">
<name><surname>Stone</surname><given-names>RB</given-names></name>
<name><surname>Wood</surname><given-names>KL</given-names></name>
<name><surname>Crawford</surname><given-names>RH</given-names></name>
</person-group>. <article-title>A heuristic method for identifying modules for product architectures</article-title>. <source>Des Stud</source> <year>2000</year>; <volume>21</volume>(<issue>1</issue>): <fpage>5</fpage>–<lpage>31</lpage>.</citation>
</ref>
<ref id="bibr3-0954405411432516">
<label>3.</label>
<citation citation-type="book">
<person-group person-group-type="author">
<name><surname>Pahl</surname><given-names>G</given-names></name>
<name><surname>Beitz</surname><given-names>W</given-names></name>
<name><surname>Feldhusen</surname><given-names>J</given-names></name><etal/>
</person-group>. <source>Engineering design: a systematic approach</source>, <edition>3rd ed.</edition> <publisher-loc>London</publisher-loc>: <publisher-name>Springer-Verlag London Limited</publisher-name>, <year>2007</year>.</citation>
</ref>
<ref id="bibr4-0954405411432516">
<label>4.</label>
<citation citation-type="journal">
<person-group person-group-type="author">
<name><surname>Kong</surname><given-names>FB</given-names></name>
<name><surname>Ming</surname><given-names>XG</given-names></name>
<name><surname>Wang</surname><given-names>L</given-names></name><etal/>
</person-group>. <article-title>On modular products development</article-title>. <source>Concurrent Eng-Res A</source> <year>2009</year>; <volume>17</volume>(<issue>4</issue>): <fpage>291</fpage>–<lpage>300</lpage>.</citation>
</ref>
<ref id="bibr5-0954405411432516">
<label>5.</label>
<citation citation-type="book">
<person-group person-group-type="author">
<name><surname>Pahl</surname><given-names>G</given-names></name>
<name><surname>Beitz</surname><given-names>W</given-names></name>
</person-group>. <source>Engineering design</source>. <publisher-loc>London</publisher-loc>: <publisher-name>Design Council</publisher-name>, <year>1984</year>.</citation>
</ref>
<ref id="bibr6-0954405411432516">
<label>6.</label>
<citation citation-type="journal">
<person-group person-group-type="author">
<name><surname>Kusiak</surname><given-names>A</given-names></name>
<name><surname>Huang</surname><given-names>CC</given-names></name>
</person-group>. <article-title>Development of modular products</article-title>. <source>IEEE Trans Components Packaging Mfg Technol Part A</source> <year>1996</year>; <volume>19</volume>(<issue>4</issue>): <fpage>523</fpage>–<lpage>538</lpage>.</citation>
</ref>
<ref id="bibr7-0954405411432516">
<label>7.</label>
<citation citation-type="journal">
<person-group person-group-type="author">
<name><surname>Cetin</surname><given-names>OL</given-names></name>
<name><surname>Saitou</surname><given-names>K</given-names></name>
</person-group>. <article-title>Decomposition-based assembly synthesis for structural modularity</article-title>. <source>J Mech Design</source> <year>2004</year>; <volume>126</volume>(<issue>2</issue>): <fpage>234</fpage>–<lpage>243</lpage>.</citation>
</ref>
<ref id="bibr8-0954405411432516">
<label>8.</label>
<citation citation-type="journal">
<person-group person-group-type="author">
<name><surname>Sosa</surname><given-names>ME</given-names></name>
<name><surname>Eppinger</surname><given-names>SD</given-names></name>
<name><surname>Rowles</surname><given-names>CM</given-names></name>
</person-group>. <article-title>A network approach to define modularity of components in complex products</article-title>. <source>J Mech Design</source> <year>2007</year>; <volume>129</volume>(<issue>11</issue>): <fpage>1118</fpage>–<lpage>1129</lpage>.</citation>
</ref>
<ref id="bibr9-0954405411432516">
<label>9.</label>
<citation citation-type="journal">
<person-group person-group-type="author">
<name><surname>Gershenson</surname><given-names>JK</given-names></name>
<name><surname>Prasad</surname><given-names>GJ</given-names></name>
<name><surname>Allamneni</surname><given-names>S</given-names></name>
</person-group>. <article-title>Modular product design: a life-cycle view</article-title>. <source>J Integrated Design and Process Sci</source> <year>1999</year>; <volume>3</volume>(<issue>4</issue>): <fpage>13</fpage>–<lpage>26</lpage>.</citation>
</ref>
<ref id="bibr10-0954405411432516">
<label>10.</label>
<citation citation-type="journal">
<person-group person-group-type="author">
<name><surname>Du</surname><given-names>XH</given-names></name>
<name><surname>Jiao</surname><given-names>JX</given-names></name>
<name><surname>Tseng</surname><given-names>MM</given-names></name>
</person-group>. <article-title>Architecture of product family: fundamentals and methodology</article-title>. <source>Concurrent Eng-Res A</source> <year>2001</year>; <volume>9</volume>(<issue>4</issue>): <fpage>309</fpage>–<lpage>325</lpage>.</citation>
</ref>
<ref id="bibr11-0954405411432516">
<label>11.</label>
<citation citation-type="other">
<comment>Siemens. Teamcenter 8.0.1 help documentation</comment>, <year>2008</year>.</citation>
</ref>
<ref id="bibr12-0954405411432516">
<label>12.</label>
<citation citation-type="journal">
<comment>PTC. Windchill 9.1 help documentation</comment>, <year>2008</year>.</citation>
</ref>
<ref id="bibr13-0954405411432516">
<label>13.</label>
<citation citation-type="book">
<person-group person-group-type="author">
<name><surname>Saaksvuori</surname><given-names>A</given-names></name>
<name><surname>Immonen</surname><given-names>A</given-names></name>
</person-group>. <source>Product lifecycle management</source>. <publisher-loc>3rd ed</publisher-loc>: <publisher-loc>Berlin Heidelberg</publisher-loc>: <publisher-name>Springer-Verlag</publisher-name>, <year>2008</year>.</citation>
</ref>
<ref id="bibr14-0954405411432516">
<label>14.</label>
<citation citation-type="journal">
<person-group person-group-type="author">
<name><surname>Burneika</surname><given-names>L</given-names></name>
</person-group>. <article-title>Product configurator for product data management system: design of internal structure</article-title>. <source>Mechanika</source> <volume>2008</volume>: <fpage>51</fpage>–<lpage>56</lpage>.</citation>
</ref>
<ref id="bibr15-0954405411432516">
<label>15.</label>
<citation citation-type="journal">
<person-group person-group-type="author">
<name><surname>Zhang</surname><given-names>LF</given-names></name>
<name><surname>Rodrigues</surname><given-names>B</given-names></name>
</person-group>. <article-title>Nested coloured timed Petri nets for production configuration of product families</article-title>. <source>Int J Production Res</source> <year>2010</year>; <volume>48</volume>(<issue>6</issue>): <fpage>1805</fpage>–<lpage>1833</lpage>.</citation>
</ref>
<ref id="bibr16-0954405411432516">
<label>16.</label>
<citation citation-type="journal">
<person-group person-group-type="author">
<name><surname>Gao</surname><given-names>P</given-names></name>
<name><surname>Lin</surname><given-names>LF</given-names></name>
<name><surname>Cai</surname><given-names>M</given-names></name><etal/>
</person-group>. <article-title>Automatic acquisition of product configuration model based on ontology mapping</article-title>. <source>Computer Integrated Mfg Sys</source> <year>2003</year>; <volume>9</volume>(<issue>9</issue>): <fpage>810</fpage>–<lpage>816</lpage>.</citation>
</ref>
<ref id="bibr17-0954405411432516">
<label>17.</label>
<citation citation-type="journal">
<person-group person-group-type="author">
<name><surname>Yang</surname><given-names>D</given-names></name>
<name><surname>Dong</surname><given-names>M</given-names></name>
<name><surname>Miao</surname><given-names>R</given-names></name>
</person-group>. <article-title>Development of a product configuration system with an ontology-based approach</article-title>. <source>Computer-Aided Design</source> <year>2008</year>; <volume>40</volume>(<issue>8</issue>): <fpage>863</fpage>–<lpage>878</lpage>.</citation>
</ref>
<ref id="bibr18-0954405411432516">
<label>18.</label>
<citation citation-type="journal">
<person-group person-group-type="author">
<name><surname>Roy</surname><given-names>R</given-names></name>
<name><surname>Kerr</surname><given-names>CIV</given-names></name>
<name><surname>Sackett</surname><given-names>PJ</given-names></name><etal/>
</person-group>. <article-title>Design requirements management using an ontological framework</article-title>. <source>CIRP Annals – Mfg Technol</source> <year>2005</year>; <volume>54</volume>(<issue>1</issue>): <fpage>109</fpage>–<lpage>112</lpage>.</citation>
</ref>
<ref id="bibr19-0954405411432516">
<label>19.</label>
<citation citation-type="journal">
<person-group person-group-type="author">
<name><surname>Nanda</surname><given-names>J</given-names></name>
<name><surname>Simpson</surname><given-names>TW</given-names></name>
<name><surname>Kumara</surname><given-names>SRT</given-names></name>
<etal/>
</person-group>. <article-title>A methodology for product family ontology development using formal concept analysis and Web ontology language</article-title>. <source>J Comput Inf Sci Eng</source> <year>2006</year>; <volume>6</volume>(<issue>2</issue>): <fpage>103</fpage>–<lpage>113</lpage>.</citation>
</ref>
<ref id="bibr20-0954405411432516">
<label>20.</label>
<citation citation-type="journal">
<person-group person-group-type="author">
<name><surname>Seo</surname><given-names>W</given-names></name>
<name><surname>Lee</surname><given-names>S</given-names></name>
<name><surname>Kim</surname><given-names>K</given-names></name>
<etal/>
</person-group>. <article-title>Product data interoperability based on layered reference ontology</article-title>. In: <source>The semantic web – ASWC</source>, <year>2006</year>, pp.<fpage>573</fpage>–<lpage>587</lpage>.</citation>
</ref>
<ref id="bibr21-0954405411432516">
<label>21.</label>
<citation citation-type="book">
<person-group person-group-type="author">
<name><surname>Ferber</surname><given-names>J</given-names></name>
</person-group>. <source>Multi-agent system: an introduction to distributed artificial intelligence</source>. <publisher-loc>Harlow, UK</publisher-loc>: <publisher-name>Addison Wesley Longman</publisher-name>, <year>1999</year>.</citation>
</ref>
<ref id="bibr22-0954405411432516">
<label>22.</label>
<citation citation-type="journal">
<person-group person-group-type="author">
<name><surname>Crespi</surname><given-names>V</given-names></name>
<name><surname>Galstyan</surname><given-names>A</given-names></name>
<name><surname>Lerman</surname><given-names>K</given-names></name>
</person-group>. <article-title>Top-down vs bottom-up methodologies in multi-agent system design</article-title>. <source>Autonomous Robots</source> <year>2008</year>; <volume>24</volume>(<issue>3</issue>): <fpage>303</fpage>–<lpage>313</lpage>.</citation>
</ref>
<ref id="bibr23-0954405411432516">
<label>23.</label>
<citation citation-type="book">
<person-group person-group-type="author">
<name><surname>Ulrich</surname><given-names>K</given-names></name>
<name><surname>Eppinger</surname><given-names>SD</given-names></name>
</person-group>. <source>Product design and development</source>. <publisher-loc>New York</publisher-loc>: <publisher-name>McGraw-Hill</publisher-name>, <year>1995</year>.</citation>
</ref>
<ref id="bibr24-0954405411432516">
<label>24.</label>
<citation citation-type="journal">
<person-group person-group-type="author">
<name><surname>Hao</surname><given-names>YP</given-names></name>
<name><surname>Wang</surname><given-names>CH</given-names></name>
</person-group>. <article-title>Study on knowledge sharing in the whole process of product based on ontology</article-title>. <source>Chinese J Mech Engng</source> <year>2002</year>; <volume>38</volume>(<issue>12</issue>): <fpage>126</fpage>–<lpage>130</lpage>.</citation>
</ref>
<ref id="bibr25-0954405411432516">
<label>25.</label>
<citation citation-type="journal">
<person-group person-group-type="author">
<name><surname>Ma</surname><given-names>G.-L</given-names></name>
<name><surname>Li</surname><given-names>Y</given-names></name>
<name><surname>Li</surname><given-names>W-Q</given-names></name><etal/>
</person-group>. <article-title>A process model and method of idea generation for conceptual design</article-title>. <source>Proc IMechE, Part B: J Engineering Manufacture</source> <year>2011</year>; <volume>225</volume>(<issue>4</issue>): <fpage>568</fpage>–<lpage>586</lpage>.</citation>
</ref>
</ref-list>
</back>
</article>