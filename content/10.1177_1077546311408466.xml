<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article
  PUBLIC "-//NLM//DTD Journal Publishing DTD v2.3 20070202//EN" "journalpublishing.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink" article-type="research-article">
<front>
<journal-meta>
<journal-id journal-id-type="publisher-id">JVC</journal-id>
<journal-id journal-id-type="hwp">spjvc</journal-id>
<journal-title>Journal of Vibration and Control</journal-title>
<issn pub-type="ppub">1077-5463</issn>
<issn pub-type="epub">1741-2986</issn>
<publisher>
<publisher-name>SAGE Publications</publisher-name>
<publisher-loc>Sage UK: London, England</publisher-loc>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="doi">10.1177/1077546311408466</article-id>
<article-id pub-id-type="publisher-id">10.1177_1077546311408466</article-id>
<article-categories>
<subj-group subj-group-type="heading">
<subject>Articles</subject>
</subj-group>
</article-categories>
<title-group>
<article-title>Computationally efficient modeling of flexible robots using the transfer matrix method</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author" corresp="yes">
<name><surname>Krauss</surname><given-names>Ryan W</given-names></name>
<xref ref-type="corresp" rid="corresp1-1077546311408466"/>
</contrib>
</contrib-group>
<aff id="aff1-1077546311408466">Department of Mechanical and Industrial Engineering, School of Engineering, Southern Illinois University Edwardsville, USA</aff>
<author-notes>
<corresp id="corresp1-1077546311408466">Ryan W Krauss, Department of Mechanical and Industrial Engineering, School of Engineering, Southern Illinois University Edwardsville, Campus Box 1805, Edwardsville, IL 62026-1805, USA Email: <email>rkrauss@siue.edu</email></corresp>
</author-notes>
<pub-date pub-type="epub-ppub">
<month>4</month>
<year>2012</year>
</pub-date>
<volume>18</volume>
<issue>5</issue>
<fpage>596</fpage>
<lpage>608</lpage>
<history>
<date date-type="received"><day>12</day><month>10</month><year>2009</year></date>
<date date-type="accepted"><day>10</day><month>8</month><year>2010</year></date>
</history>
<permissions>
<copyright-statement>© The Author(s) 2011 Reprints and permissions: sagepub.co.uk/journalsPermissions.nav</copyright-statement>
<copyright-year>2011</copyright-year>
<copyright-holder content-type="sage">SAGE Publications</copyright-holder>
</permissions>
<abstract>
<p>An approach is presented for developing a computationally efficient model of robots with flexible links and joints. The approach uses the transfer matrix method, which allows continuous elements such as flexible links to be treated without spatial discretization. The small size of transfer matrices allows the analysis to be performed symbolically so that closed-form expressions can be found for the infinite-dimensional transfer functions between the robot inputs and sensor outputs. The approach is applied to a single-link robot where both the link and the joint are flexible. The computationally efficient model is used by an optimization routine to estimate unknown parameters of the robot model.</p>
</abstract>
<kwd-group>
<kwd>Flexible robots</kwd>
<kwd>modeling</kwd>
<kwd>transfer matrix method</kwd>
<kwd>system identification</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="sec1-1077546311408466"><title>1. Introduction and literature overview</title>
<p>Many approaches to modeling flexible robots have been presented in the literature. Finite element analysis (FEA) has been used extensively to model many different robots. Brüls (<xref ref-type="bibr" rid="bibr4-1077546311408466">2005</xref>); Brüls et al. (<xref ref-type="bibr" rid="bibr5-1077546311408466">2005</xref>); Brüls et al. (<xref ref-type="bibr" rid="bibr6-1077546311408466">2007</xref>) have used nonlinear FEA to model robots and other mechatronic systems. The dynamic stiffness method has been used by Banerjee and others (Hallauer and Liu, <xref ref-type="bibr" rid="bibr7-1077546311408466">1982</xref>; Banerjee and Fisher, <xref ref-type="bibr" rid="bibr2-1077546311408466">1992</xref>; Banerjee, <xref ref-type="bibr" rid="bibr1-1077546311408466">1997</xref>) to model many different kinds of flexible structures. Book (<xref ref-type="bibr" rid="bibr3-1077546311408466">1984</xref>) developed a method to efficiently model link flexibility using the assumed modes method.</p>
<p>While other modeling approaches have been adapted to a wide-range of problems, the transfer matrix method (TMM) (Pestel and Leckie, <xref ref-type="bibr" rid="bibr12-1077546311408466">1963</xref>) is well suited to modeling flexible robots, especially when the robots are composed of serial connections of elements and the model will ultimately be used for control design. In the form presented by Pestel and Leckie, the TMM can model continuous elements without spatial discretization. Flexible links are modeled by a transfer matrix that incorporates the continuous solution to the partial differential equation of a beam in bending. This approach avoids the possibility of modal spillover because a reduced-order model is never used. TMM analysis performed in this way is explicitly linked to the Laplace transform, limiting it to linear problems. It is a frequency domain technique that lends itself to Bode analysis.</p>
<p>A modeling approach is presented by Yu et al. (<xref ref-type="bibr" rid="bibr17-1077546311408466">2004</xref>) that combines the transfer matrix and dynamic stiffness methods. The TMM is used to derive dynamic stiffness matrices for various elements. The system model is a transfer dynamic stiffness matrix (TDSM) which is a frequency-dependent basis function. This approach allows for exact analysis of complex frame structures whose interconnections would be difficult to model using the TMM alone. An algorithm is presented for finding repeated roots of the characteristic equation of the TDSM.</p>
<p>A modeling approach is presented by Kumar and Sankar (<xref ref-type="bibr" rid="bibr9-1077546311408466">1986</xref>) that combines the TMM with a numerical integration procedure. This approach allows TMM analysis to be performed in the time domain and applied to nonlinear and time-varying systems. The matrices involved in the method are always small, regardless of the size of the system. Computation time and storage requirements are both significantly smaller than for direct integration of system equations of motion based on conventional lumped mass modeling.</p>
<p>The work presented by Rui et al. (<xref ref-type="bibr" rid="bibr14-1077546311408466">2005</xref>) expands on the approach of Kumar and Sankar (<xref ref-type="bibr" rid="bibr9-1077546311408466">1986</xref>) by deriving discrete time transfer matrices for bodies moving in space with up to six degrees of freedom and applying the method to more complicated systems than were analyzed by Kumar and Sankar (<xref ref-type="bibr" rid="bibr9-1077546311408466">1986</xref>). This approach is later expanded to apply to large-amplitude motions (He et al., <xref ref-type="bibr" rid="bibr8-1077546311408466">2007</xref>). The method provides a means of modeling the dynamics of multibody systems without formulating the global dynamics equations for the system. The numerical integration procedure cannot currently handle continuous beam models. Flexible links are modeled either as a series of rigid elements and torsional springs (Rui et al., <xref ref-type="bibr" rid="bibr14-1077546311408466">2005</xref>) or using a modal discretization (Rui et al., <xref ref-type="bibr" rid="bibr15-1077546311408466">2009</xref>). The approach is applied to systems under feedback control by Rong et al. (<xref ref-type="bibr" rid="bibr13-1077546311408466">2010</xref>). The response of a robot with two flexible links is simulated with and without a vibration suppression system based on piezoceramic actuators.</p>
<p>This paper presents a method for finding the infinite-dimensional transfer functions for robots with flexible links, based on the work of Pestel and Leckie. The TMM analysis is performed symbolically, resulting in closed-form symbolic expressions for the open- and closed-loop transfer functions of flexible robots. The transfer functions are infinite dimensional and involve sinh(<italic>s</italic>), cosh(<italic>s</italic>), sin(<italic>s</italic>), and cos(<italic>s</italic>). The method is limited to linear systems. It is the ability to perform the analysis symbolically that leads to computationally efficient models that are very useful in optimization routines used for system identification. The approach is used to model a single-flexible-link robot (SFLR), ultimately resulting in good agreement between experimental Bode plots and those from the TMM model.</p>
</sec>
<sec id="sec2-1077546311408466"><title>2. Overview of TMM analysis</title>
<sec id="sec3-1077546311408466"><title>2.1. Continuous beam transfer matrix</title>
<p>The partial differential equation for a beam in bending with uniform cross section (Meirovitch, <xref ref-type="bibr" rid="bibr10-1077546311408466">1986</xref>) is
<disp-formula id="disp-formula1-1077546311408466"><label>(1)</label><graphic xlink:href="10.1177_1077546311408466-eq1.tif"/></disp-formula>
assuming that there are no applied forces along the length of the beam. Here <italic>E</italic> is Young's modulus, <italic>I</italic> is the area moment of inertia for the cross section, μ is the mass per unit length, <italic>w</italic> is the lateral displacement, <italic>x</italic> is the position along the length of the beam, and <italic>t</italic> is time.</p>
<p>A transfer matrix for a beam element must transfer the state vector
<disp-formula id="disp-formula2-1077546311408466"><label>(2)</label><graphic xlink:href="10.1177_1077546311408466-eq2.tif"/></disp-formula>
from one end of the beam element to the other. Four states are required because the partial differential equation is fourth order in the spatial variable. The necessary states to model a beam element are lateral displacement <italic>w</italic>, angular displacement <italic>θ</italic>, bending moment <italic>M</italic>, and shear force <italic>V</italic>. The matrix can be found by solving Equation (<xref ref-type="disp-formula" rid="disp-formula1-1077546311408466">1</xref>) by separation of variables, i.e.
<disp-formula id="disp-formula3-1077546311408466"><label>(3)</label><graphic xlink:href="10.1177_1077546311408466-eq3.tif"/></disp-formula>
This separation will lead to the spatial differential equation
<disp-formula id="disp-formula4-1077546311408466"><label>(4)</label><graphic xlink:href="10.1177_1077546311408466-eq4.tif"/></disp-formula>
where
<disp-formula id="disp-formula5-1077546311408466"><label>(5)</label><graphic xlink:href="10.1177_1077546311408466-eq5.tif"/></disp-formula>
A general solution to Equation (<xref ref-type="disp-formula" rid="disp-formula4-1077546311408466">4</xref>) is given by
<disp-formula id="disp-formula6-1077546311408466"><label>(6)</label><graphic xlink:href="10.1177_1077546311408466-eq6.tif"/></disp-formula>
Relationships between the states can be found from mechanics of materials analysis and Newton's second law:
<disp-formula id="disp-formula7-1077546311408466"><label>(7)</label><graphic xlink:href="10.1177_1077546311408466-eq7.tif"/></disp-formula>
<disp-formula id="disp-formula8-1077546311408466"><label>(8)</label><graphic xlink:href="10.1177_1077546311408466-eq8.tif"/></disp-formula>
<disp-formula id="disp-formula9-1077546311408466"><label>(9)</label><graphic xlink:href="10.1177_1077546311408466-eq9.tif"/></disp-formula>
Substituting Equation (<xref ref-type="disp-formula" rid="disp-formula6-1077546311408466">6</xref>) into Equations (<xref ref-type="disp-formula" rid="disp-formula7-1077546311408466">7</xref>) and (<xref ref-type="disp-formula" rid="disp-formula8-1077546311408466">8</xref>) and then substituting the result from Equation (<xref ref-type="disp-formula" rid="disp-formula8-1077546311408466">8</xref>) into Equation (<xref ref-type="disp-formula" rid="disp-formula9-1077546311408466">9</xref>) would allow each state to be expressed in terms of the <italic>A</italic><sub><italic>n</italic></sub> coefficients:
<disp-formula id="disp-formula10-1077546311408466"><label>(10)</label><graphic xlink:href="10.1177_1077546311408466-eq10.tif"/></disp-formula>
or
<disp-formula id="disp-formula11-1077546311408466"><label>(11)</label><graphic xlink:href="10.1177_1077546311408466-eq11.tif"/></disp-formula>
substituting <italic>x</italic> = 0 and <italic>x</italic> = <italic>L</italic> into Equation (<xref ref-type="disp-formula" rid="disp-formula11-1077546311408466">11</xref>) gives the state vectors at each end of the beam:
<disp-formula id="disp-formula12-1077546311408466"><label>(12)</label><graphic xlink:href="10.1177_1077546311408466-eq12.tif"/></disp-formula>
<disp-formula id="disp-formula13-1077546311408466"><label>(13)</label><graphic xlink:href="10.1177_1077546311408466-eq13.tif"/></disp-formula>
Solving Equation (<xref ref-type="disp-formula" rid="disp-formula12-1077546311408466">12</xref>) for <bold>A</bold> and substituting the result into Equation (<xref ref-type="disp-formula" rid="disp-formula13-1077546311408466">13</xref>) gives
<disp-formula id="disp-formula14-1077546311408466"><label>(14)</label><graphic xlink:href="10.1177_1077546311408466-eq14.tif"/></disp-formula>
or
<disp-formula id="disp-formula15-1077546311408466"><label>(15)</label><graphic xlink:href="10.1177_1077546311408466-eq15.tif"/></disp-formula>
where
<disp-formula id="disp-formula16-1077546311408466"><label>(16)</label><graphic xlink:href="10.1177_1077546311408466-eq16.tif"/></disp-formula>
is the transfer matrix for the beam:
<disp-formula id="disp-formula17-1077546311408466"><label>(17)</label><graphic xlink:href="10.1177_1077546311408466-eq17.tif"/></disp-formula>
where
<disp-formula id="disp-formula18-1077546311408466"><label>(18)</label><graphic xlink:href="10.1177_1077546311408466-eq18.tif"/></disp-formula>
and
<disp-formula id="disp-formula19-1077546311408466"><label>(19)</label><graphic xlink:href="10.1177_1077546311408466-eq19.tif"/></disp-formula>
</p>
</sec>
<sec id="sec4-1077546311408466"><title>2.2. TMM system analysis</title>
<p>A transfer matrix model for a system is created by first finding transfer matrices for each element in the system. These element transfer matrices must transfer the state vector from one end of the element to the other. Once valid transfer matrices have been found for each element, the system transfer matrix is the product of the element transfer matrices:
<disp-formula id="disp-formula20-1077546311408466"><label>(20)</label><graphic xlink:href="10.1177_1077546311408466-eq20.tif"/></disp-formula>
and the state vectors at the base and tip of the system are related by
<disp-formula id="disp-formula21-1077546311408466"><label>(21)</label><graphic xlink:href="10.1177_1077546311408466-eq21.tif"/></disp-formula>
</p>
<sec id="sec5-1077546311408466"><title>2.2.1. Augmented transfer matrices for external inputs</title>
<p>The forced responses of flexible robots can be found using augmented transfer matrices (Pestel and Leckie, <xref ref-type="bibr" rid="bibr12-1077546311408466">1963</xref>, pp. 82–89). The unactuated 4 × 4 transfer matrices will be augmented with an extra row and column that are all zeros except in the bottom right corner where there is a 1:
<disp-formula id="disp-formula22-1077546311408466"><label>(22)</label><graphic xlink:href="10.1177_1077546311408466-eq22.tif"/></disp-formula>
The corresponding augmented state vector is
<disp-formula id="disp-formula23-1077546311408466"><label>(23)</label><graphic xlink:href="10.1177_1077546311408466-eq23.tif"/></disp-formula>
The fifth column of augmented transfer matrices is used to allow external inputs in elements that represent actuators or other loading conditions. Static deflections can be found by taking the limit as the driving frequency approaches zero on Bode plots with external forces or moments as the inputs.</p>
<p>Many robots are actuated by DC motors. The transfer matrix for a DC motor is given by
<disp-formula id="disp-formula24-1077546311408466"><label>(24)</label><graphic xlink:href="10.1177_1077546311408466-eq24.tif"/></disp-formula>
where <italic>G</italic><sub>θ</sub> is the transfer function between the voltage (input) to the motor and the angular displacement (output) of the motor. Typically,
<disp-formula id="disp-formula25-1077546311408466"><label>(25)</label><graphic xlink:href="10.1177_1077546311408466-eq25.tif"/></disp-formula>
</p>
</sec>
<sec id="sec6-1077546311408466"><title>2.2.2. Example system</title>
<p>As an example, consider the SFLR shown in <xref ref-type="fig" rid="fig1-1077546311408466">Figure 1</xref>. The robot is composed of a beam driven by a DC motor. If flexibility in the shaft and drive train is considered, the system could be modeled using three elements: an actuator element for the DC motor, a torsional spring/damper (TSD) for flexibility in the shaft and gear train, and a beam element. A schematic of the system is shown in <xref ref-type="fig" rid="fig2-1077546311408466">Figure 2</xref>.
<fig id="fig1-1077546311408466" position="float"><label>Figure 1.</label><caption><p>A single-flexible-link robot used as an example of TMM modeling.</p></caption><graphic xlink:href="10.1177_1077546311408466-fig1.tif"/></fig>
<fig id="fig2-1077546311408466" position="float"><label>Figure 2.</label><caption><p>A schematic of the SFLR shown in <xref ref-type="fig" rid="fig1-1077546311408466">Figure 1</xref>. The system is modeled here as being composed of three elements: the actuator (a DC motor), a torsional spring/damper, and a beam. <bold>z</bold><sub>base</sub>, <bold>z</bold><sub>1</sub>, <bold>z</bold><sub>encoder</sub>, and <bold>z</bold><sub>tip</sub> are state vectors at various physical locations in the model.</p></caption><graphic xlink:href="10.1177_1077546311408466-fig2.tif"/></fig></p>
<p>The system transfer matrix would be
<disp-formula id="disp-formula26-1077546311408466"><label>(26)</label><graphic xlink:href="10.1177_1077546311408466-eq26.tif"/></disp-formula>
Lateral and angular displacement must be zero at the base of the robot and moment and shear force must be zero at the tip. These system boundary conditions can be substituted into the overall system model:
<disp-formula id="disp-formula27-1077546311408466"><label>(27)</label><graphic xlink:href="10.1177_1077546311408466-eq27.tif"/></disp-formula>
The third and fourth rows of Equation (<xref ref-type="disp-formula" rid="disp-formula27-1077546311408466">27</xref>) give
<disp-formula id="disp-formula28-1077546311408466"><label>(28)</label><graphic xlink:href="10.1177_1077546311408466-eq28.tif"/></disp-formula>
or
<disp-formula id="disp-formula29-1077546311408466"><label>(29)</label><graphic xlink:href="10.1177_1077546311408466-eq29.tif"/></disp-formula>
Once <italic>M</italic><sub>base</sub> and <italic>V</italic><sub>base</sub> are known, the state vector at the base <bold>z</bold><sub>base</sub> is known and the state vectors at any location in the model can be found by multiplying by as many element transfer matrices as necessary to get from the base to the sensor location.</p>
<p>For example, the SFLR of <xref ref-type="fig" rid="fig1-1077546311408466">Figure 1</xref> has two sensors: an encoder that is after the torsional spring element and an accelerometer at the tip of the beam. The state vector at the encoder location will be
<disp-formula id="disp-formula30-1077546311408466"><label>(30)</label><graphic xlink:href="10.1177_1077546311408466-eq30.tif"/></disp-formula>
and the encoder angle will simply be the second element of <bold>z</bold><sub>encoder</sub>.</p>
<p>The state vector for the accelerometer will be
<disp-formula id="disp-formula31-1077546311408466"><label>(31)</label><graphic xlink:href="10.1177_1077546311408466-eq31.tif"/></disp-formula>
or
<disp-formula id="disp-formula32-1077546311408466"><label>(32)</label><graphic xlink:href="10.1177_1077546311408466-eq32.tif"/></disp-formula>
and the accelerometer signal will be <italic>s</italic><sup>2</sup> times the first element of <bold>z</bold><sub>accel</sub>.</p>
</sec>
</sec>
<sec id="sec7-1077546311408466"><title>2.3. Comments on the capabilities of the TMM</title>
<p>The TMM as presented by Pestel and Leckie and used in this paper is explicitly linked to the Laplace transform, limiting it to linear systems. The beam transfer matrix derived in <xref ref-type="sec" rid="sec3-1077546311408466">Section 2.1</xref> is valid only for small-amplitude oscillations. While many robots are serial connections of elements, the TMM is capable of modeling closed-kinematic chains and branched systems (Pestel and Leckie, <xref ref-type="bibr" rid="bibr12-1077546311408466">1963</xref>, <xref ref-type="sec" rid="sec8-1077546311408466">sections 3</xref>–<xref ref-type="sec" rid="sec19-1077546311408466">6</xref> and chapter 6, respectively).</p>
<p>The combination of the TMM and a numerical integration procedure in (Kumar and Sankar, <xref ref-type="bibr" rid="bibr9-1077546311408466">1986</xref>) and (Rui et al., <xref ref-type="bibr" rid="bibr14-1077546311408466">2005</xref>) allows nonlinear systems to be analyzed. (He et al., <xref ref-type="bibr" rid="bibr8-1077546311408466">2007</xref>) present an approach for TMM analysis of systems with large deformations. In exchange for being able to analyze nonlinear systems or large-amplitude deformations, these approaches sacrifice the ability to model continuous elements without spatial discretization.</p>
</sec>
</sec>
<sec id="sec8-1077546311408466"><title>3. Computationally efficient analysis</title>
<p>The TMM analysis described in <xref ref-type="sec" rid="sec4-1077546311408466">Section 2.2</xref> can be carried out in at least two ways: purely numerically or symbolically. Numerical TMM analysis lends itself to finding Bode plots for the transfer functions between the inputs to the robot and the outputs of whatever sensors are used. In order to find the frequency responses for these Bode plots, an <italic>s</italic> vector must be created over the frequency range of interest: <italic>s</italic> = 2π <italic>j f</italic>.</p>
<p>For each value of <italic>s</italic> in the vector, numeric expressions for the element transfer matrices must be found (i.e. <bold>U</bold><sub>beam</sub>, <bold>U</bold><sub>spring</sub>, and <bold>U</bold><sub>actuator</sub> from Equation (<xref ref-type="disp-formula" rid="disp-formula26-1077546311408466">26</xref>) for the SFLR). These matrices depend on <italic>s</italic> and the parameters of the elements and must be evaluated at each value of <italic>s</italic>. The element transfer matrices must then be multiplied together to find <bold>U</bold><sub>sys</sub>, the sub-matrix of Equation (<xref ref-type="disp-formula" rid="disp-formula29-1077546311408466">29</xref>) must be inverted to find the state vector at the base of the system (<bold>z</bold><sub>base</sub>), and then the state vectors at each sensor location must be found by multiplying <bold>z</bold><sub>base</sub> by appropriate element transfer matrices. Each of these steps must be repeated for each value of <italic>s</italic> in the <italic>s</italic> vector.</p>
<p>These same steps can also be carried out symbolically using a computer algebra package that has linear algebra capabilities. This work used SymPy (SymPy Development Team, <xref ref-type="bibr" rid="bibr16-1077546311408466">2009</xref>) to perform the symbolic matrix multiplication and to invert the matrix of Equation (<xref ref-type="disp-formula" rid="disp-formula29-1077546311408466">29</xref>). This symbolic TMM analysis leads to closed-form expressions for the transfer functions between the system inputs and sensor outputs for the robot under open- or closed-loop control. If the robot involves continuous elements such as flexible links, these transfer functions will be infinite dimensional and involve sinh(<italic>s</italic>), cosh(<italic>s</italic>), sin(<italic>s</italic>), and cos(<italic>s</italic>). The transfer functions are found without spatial discretization.</p>
<p>Symbolic TMM analysis leads to computationally efficient models, especially for robots with continuous elements such as flexible links. The output of the symbolic analysis is used to auto-generate code for evaluating the transfer functions at any value of <italic>s</italic>. These functions can be used to generate the Bode plots for the robot sensors. This auto-generated code can calculate the Bode plots for the SFLR roughly 30 times faster than performing the TMM analysis in a purely numeric fashion.</p>
<p>The transfer function code from the symbolic analysis is faster than the purely numeric approach for two reasons. First, the matrix multiplication and inversion is all done once symbolically and only the calculations necessary to find the sensor states are performed in the final transfer function code. Second, the SymPy module includes a function called <monospace>cse</monospace> to collect common sub-expressions so that they are computed only once. The symbolic transfer functions for most practical systems that include continuous elements will be quite complicated, so the reduction in calculation time from pulling out the common sub-expressions can be substantial. To increase speed further, the Python code from <monospace>sympy.cse</monospace> can be automatically converted to FORTRAN, compiled, and then called from Python using <monospace>f2py</monospace>.</p>
</sec>
<sec id="sec9-1077546311408466"><title>4. A case study: system identification and model refinement for the SFLR</title>
<p>As a case study, consider the development of a model that accurately captures the dynamics of the SFLR of <xref ref-type="fig" rid="fig1-1077546311408466">Figure 1</xref>. Many parameters of the elements of the system are unknown. The goal of this section of the paper is to use an optimization algorithm to find values for these system parameters that minimize the error between the experimental Bode plots and those from symbolic TMM analysis.</p>
<p>The open-loop system could be thought of in two ways as represented by the block diagrams in <xref ref-type="fig" rid="fig3-1077546311408466">Figures 3</xref> and <xref ref-type="fig" rid="fig4-1077546311408466">4</xref>. In <xref ref-type="fig" rid="fig3-1077546311408466">Figure 3</xref>, the system is modeled as two single-input, single-output subsystems connected in series. In <xref ref-type="fig" rid="fig4-1077546311408466">Figure 4</xref>, the system is modeled as one system with a single input and two outputs. The Bode plots corresponding to these block diagrams (θ<sub><italic>encoder</italic></sub>/<italic>v</italic>, <inline-formula id="ilm1-1077546311408466"><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline" id="mml-math1-1077546311408466"><mml:mrow><mml:msub><mml:mrow><mml:mover><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mi>··</mml:mi></mml:mover></mml:mrow><mml:mrow><mml:mi>tip</mml:mi></mml:mrow></mml:msub><mml:mo>/</mml:mo><mml:mi>v</mml:mi></mml:mrow></mml:math></inline-formula>, and <inline-formula id="ilm2-1077546311408466"><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline" id="mml-math2-1077546311408466"><mml:mrow><mml:msub><mml:mrow><mml:mover><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mi>··</mml:mi></mml:mover></mml:mrow><mml:mrow><mml:mi>tip</mml:mi></mml:mrow></mml:msub><mml:mo>/</mml:mo><mml:msub><mml:mrow><mml:mi>θ</mml:mi></mml:mrow><mml:mrow><mml:mi>encoder</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula>) will be used extensively throughout the remainder of this paper (starting in <xref ref-type="fig" rid="fig6-1077546311408466">Figures 6</xref>–<xref ref-type="fig" rid="fig8-1077546311408466">8</xref>) to assess the validity of various transfer matrix models.
<fig id="fig3-1077546311408466" position="float"><label>Figure 3.</label><caption><p>One block diagram representation of the SFLR of <xref ref-type="fig" rid="fig1-1077546311408466">Figure 1</xref>, modeling the robot as two single-input/single-output subsystems connected in series.</p></caption><graphic xlink:href="10.1177_1077546311408466-fig3.tif"/></fig>
<fig id="fig4-1077546311408466" position="float"><label>Figure 4.</label><caption><p>A second block diagram representation of the SFLR of <xref ref-type="fig" rid="fig1-1077546311408466">Figure 1</xref>, modeling the robot as a system with one input and two outputs.</p></caption><graphic xlink:href="10.1177_1077546311408466-fig4.tif"/></fig>
<fig id="fig5-1077546311408466" position="float"><label>Figure 5.</label><caption><p>The accelerometer mounted near the tip of the beam.</p></caption><graphic xlink:href="10.1177_1077546311408466-fig5.tif"/></fig>
<fig id="fig6-1077546311408466" position="float"><label>Figure 6.</label><caption><p>Bode plot for θ<sub><italic>encoder</italic></sub>/<italic>v</italic> comparing experimental data with a first model that uses a torsional spring/damper element to model actuator compliance. The zeros of the model at 2.5 and 18 Hz are too deep.</p></caption><graphic xlink:href="10.1177_1077546311408466-fig6.tif"/></fig>
<fig id="fig7-1077546311408466" position="float"><label>Figure 7.</label><caption><p>Bode plot for <inline-formula id="ilm3-1077546311408466"><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline" id="mml-math3-1077546311408466"><mml:mrow><mml:msub><mml:mrow><mml:mover><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mi>··</mml:mi></mml:mover></mml:mrow><mml:mrow><mml:mi>tip</mml:mi></mml:mrow></mml:msub><mml:mo>/</mml:mo><mml:mi>v</mml:mi></mml:mrow></mml:math></inline-formula> comparing experimental data with a first model that uses a torsional spring/damper element to model actuator compliance. The model predicts the first mode at too low of a frequency (2.5 rather than 3 Hz).</p></caption><graphic xlink:href="10.1177_1077546311408466-fig7.tif"/></fig>
<fig id="fig8-1077546311408466" position="float"><label>Figure 8.</label><caption><p>Bode plot for <inline-formula id="ilm4-1077546311408466"><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline" id="mml-math4-1077546311408466"><mml:mrow><mml:msub><mml:mrow><mml:mover><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mi>··</mml:mi></mml:mover></mml:mrow><mml:mrow><mml:mi>tip</mml:mi></mml:mrow></mml:msub><mml:mo>/</mml:mo><mml:msub><mml:mrow><mml:mi>θ</mml:mi></mml:mrow><mml:mrow><mml:mi>encoder</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> comparing experimental data with a first model that uses a torsional spring/damper element to model actuator compliance. The peaks of both modes are way too high; the model does not seem to have adequate damping.</p></caption><graphic xlink:href="10.1177_1077546311408466-fig8.tif"/></fig></p>
<sec id="sec10-1077546311408466"><title>4.1. Element models</title>
<p>The SFLR includes a beam that will be modeled using the transfer matrix of Equation (<xref ref-type="disp-formula" rid="disp-formula17-1077546311408466">17</xref>), where μ, <italic>EI</italic>, and <italic>L</italic> can be estimated from physical measurements but may not be known exactly. Since the system has an external input (voltage to the DC motor), the beam transfer matrix will be augmented according to Equation (<xref ref-type="disp-formula" rid="disp-formula22-1077546311408466">22</xref>). The DC motor will be modeled using the transfer matrix of Equation (<xref ref-type="disp-formula" rid="disp-formula24-1077546311408466">24</xref>) and the transfer function of Equation (<xref ref-type="disp-formula" rid="disp-formula25-1077546311408466">25</xref>), where <italic>g</italic> and <italic>p</italic> are unknown.</p>
</sec>
<sec id="sec11-1077546311408466"><title>4.2. Modeling actuator compliance</title>
<p>The experimental Bode plot for θ<sub><italic>encoder</italic></sub>/<italic>v</italic> (<xref ref-type="fig" rid="fig6-1077546311408466">Figure 6</xref>) shows interaction between the actuator and the structure. To capture this behavior, a TSD element between the DC motor and the beam will be used to model compliance in the drive train of the robot. The augmented transfer matrix for the TSD element is
<disp-formula id="disp-formula33-1077546311408466"><label>(33)</label><graphic xlink:href="10.1177_1077546311408466-eq33.tif"/></disp-formula>
where <italic>k</italic> is the torsional spring constant and <italic>c</italic> is the torsional damping coefficient, both of which are unknown and will need to be determined experimentally.</p>
<p>In the course of model refinement, it became apparent that the model needed to include not only the mass of the accelerometer, but also its location (i.e. it is not mounted exactly at the tip). The accelerometer is shown mounted near the tip of the beam in <xref ref-type="fig" rid="fig5-1077546311408466">Figure 5</xref>.</p>
<p>The system transfer matrix including the accelerometer will be
<disp-formula id="disp-formula34-1077546311408466"><label>(34)</label><graphic xlink:href="10.1177_1077546311408466-eq34.tif"/></disp-formula>
where <bold>U</bold><sub>accel</sub> is a rigid mass transfer matrix and <bold>U</bold><sub>beam2</sub> models the portion of the beam beyond the accelerometer. The augmented rigid mass transfer matrix is
<disp-formula id="disp-formula35-1077546311408466"><label>(35)</label><graphic xlink:href="10.1177_1077546311408466-eq35.tif"/></disp-formula>
where <italic>m</italic> is the mass of the rigid body, <italic>L</italic> is its length, <italic>r</italic> is the distance from the left edge to its center of gravity, and <italic>I</italic> is the second moment of inertia.</p>
<p><xref ref-type="fig" rid="fig6-1077546311408466">Figures 6</xref>–<xref ref-type="fig" rid="fig8-1077546311408466">8</xref> compare Bode plots from this model and experiments. The model seems to qualitatively capture the dynamics of the system, but there are some quantitative differences. The heights of the peaks in <xref ref-type="fig" rid="fig8-1077546311408466">Figure 8</xref> suggest that the model could be improved by including damping in the beam.</p>
</sec>
<sec id="sec12-1077546311408466"><title>4.3. Beam damping</title>
<p><xref ref-type="fig" rid="fig8-1077546311408466">Figure 8</xref> gives the impression that the model could be improved by including some form of damping in the beam transfer matrix. Transfer matrix models for beams with two different types of damping will be investigated: proportional damping based on a Kelvin–Voigt viscoelastic model and complex stiffness.</p>
<sec id="sec13-1077546311408466"><title>4.3.1. A Kelvin–Voigt model</title>
<p>According to Meirovitch (<xref ref-type="bibr" rid="bibr11-1077546311408466">1997</xref>), using a Kelvin–Voigt model for viscoelasticity leads to the relationship
<disp-formula id="disp-formula36-1077546311408466"><label>(36)</label><graphic xlink:href="10.1177_1077546311408466-eq36.tif"/></disp-formula>
For a beam in bending, this results in
<disp-formula id="disp-formula37-1077546311408466"><label>(37)</label><graphic xlink:href="10.1177_1077546311408466-eq37.tif"/></disp-formula>
This expression for bending moment <italic>M</italic>(<italic>x</italic>, <italic>t</italic>) must be incorporated into a transfer matrix model for a beam in bending. Modifying Equation (<xref ref-type="disp-formula" rid="disp-formula1-1077546311408466">1</xref>) in light of Equation (<xref ref-type="disp-formula" rid="disp-formula37-1077546311408466">37</xref>) leads to
<disp-formula id="disp-formula38-1077546311408466"><label>(38)</label><graphic xlink:href="10.1177_1077546311408466-eq38.tif"/></disp-formula>
Employing separation of variables as in Equation (<xref ref-type="disp-formula" rid="disp-formula3-1077546311408466">3</xref>) leads to
<disp-formula id="disp-formula39-1077546311408466"><label>(39)</label><graphic xlink:href="10.1177_1077546311408466-eq39.tif"/></disp-formula>
which can be re-written as
<disp-formula id="disp-formula40-1077546311408466"><label>(40)</label><graphic xlink:href="10.1177_1077546311408466-eq40.tif"/></disp-formula>
Using the Laplace transform on the differential equation involving time leads to
<disp-formula id="disp-formula41-1077546311408466"><label>(41)</label><graphic xlink:href="10.1177_1077546311408466-eq41.tif"/></disp-formula>
In order for there to be a non-trivial solution to Equation (<xref ref-type="disp-formula" rid="disp-formula41-1077546311408466">41</xref>)
<disp-formula id="disp-formula42-1077546311408466"><label>(42)</label><graphic xlink:href="10.1177_1077546311408466-eq42.tif"/></disp-formula>
Substituting for λ in the spatial differential equation of Equation (<xref ref-type="disp-formula" rid="disp-formula40-1077546311408466">40</xref>) leads to
<disp-formula id="disp-formula43-1077546311408466"><label>(43)</label><graphic xlink:href="10.1177_1077546311408466-eq43.tif"/></disp-formula>
which can be re-written in the form of Equation (<xref ref-type="disp-formula" rid="disp-formula4-1077546311408466">4</xref>) if
<disp-formula id="disp-formula44-1077546311408466"><label>(44)</label><graphic xlink:href="10.1177_1077546311408466-eq44.tif"/></disp-formula>
which is the same as Equation (<xref ref-type="disp-formula" rid="disp-formula5-1077546311408466">5</xref>) after substituting <italic>EI</italic>(<italic>cs</italic> + 1) for <italic>EI</italic>. Other than this substitution, the derivation for the transfer matrix of a damped beam is unchanged from the derivation in <xref ref-type="sec" rid="sec3-1077546311408466">Section 2.1</xref>.</p>
</sec>
<sec id="sec14-1077546311408466"><title>4.3.2. Complex stiffness</title>
<p>A TMM model for a beam with complex stiffness can be created by substituting <italic>EI</italic>(1 + <italic>cj</italic>) for <italic>EI</italic> in the equations used to created the transfer matrix for the beam in <xref ref-type="sec" rid="sec3-1077546311408466">Section 2.1</xref>. <xref ref-type="fig" rid="fig9-1077546311408466">Figures 9</xref>–<xref ref-type="fig" rid="fig11-1077546311408466">11</xref> compare Bode plots from the two beam damping models (proportional damping from a Kelvin–Voigt model and complex stiffness).
<fig id="fig9-1077546311408466" position="float"><label>Figure 9.</label><caption><p>Bode plot for θ<sub><italic>encoder</italic></sub>/<italic>v</italic> comparing experimental data with two damping models: proportional damping based on a Kelvin–Voigt viscoelasticity model and complex stiffness. The complex stiffness model better predicts the depth of the zero near 2.5 Hz.</p></caption><graphic xlink:href="10.1177_1077546311408466-fig9.tif"/></fig>
<fig id="fig10-1077546311408466" position="float"><label>Figure 10.</label><caption><p>Bode plot for <inline-formula id="ilm5-1077546311408466"><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline" id="mml-math5-1077546311408466"><mml:mrow><mml:msub><mml:mrow><mml:mover><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mi>··</mml:mi></mml:mover></mml:mrow><mml:mrow><mml:mi>tip</mml:mi></mml:mrow></mml:msub><mml:mo>/</mml:mo><mml:mi>v</mml:mi></mml:mrow></mml:math></inline-formula> comparing experimental data with two damping models: proportional damping based on a Kelvin–Voigt viscoelasticity model and complex stiffness. Both models predict the first mode at too low of a frequency (2.5 rather than 3 Hz).</p></caption><graphic xlink:href="10.1177_1077546311408466-fig10.tif"/></fig>
<fig id="fig11-1077546311408466" position="float"><label>Figure 11.</label><caption><p>Bode plot for <inline-formula id="ilm6-1077546311408466"><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline" id="mml-math6-1077546311408466"><mml:mrow><mml:msub><mml:mrow><mml:mover><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mi>··</mml:mi></mml:mover></mml:mrow><mml:mrow><mml:mi>tip</mml:mi></mml:mrow></mml:msub><mml:mo>/</mml:mo><mml:msub><mml:mrow><mml:mi>θ</mml:mi></mml:mrow><mml:mrow><mml:mi>encoder</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> comparing experimental data with two damping models: proportional damping based on a Kelvin–Voigt viscoelasticity model and complex stiffness. The complex stiffness model gives a better prediction of the height of the first peak.</p></caption><graphic xlink:href="10.1177_1077546311408466-fig11.tif"/></fig></p>
<p>The complex stiffness model gives a better prediction of the depth of the zero near 2.5 Hz on <xref ref-type="fig" rid="fig9-1077546311408466">Figure 9</xref> and the height of the peak at the same frequency on <xref ref-type="fig" rid="fig11-1077546311408466">Figure 11</xref>. Neither model predicts the <inline-formula id="ilm7-1077546311408466"><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline" id="mml-math7-1077546311408466"><mml:mrow><mml:msub><mml:mrow><mml:mover><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mi>··</mml:mi></mml:mover></mml:mrow><mml:mrow><mml:mi>tip</mml:mi></mml:mrow></mml:msub><mml:mo>/</mml:mo><mml:mi>v</mml:mi></mml:mrow></mml:math></inline-formula> Bode plot of <xref ref-type="fig" rid="fig10-1077546311408466">Figure 10</xref> accurately. The frequency of the first mode is under-predicted, as is the height of the peak for the second mode. The phase from roughly 6 Hz on is also off.</p>
</sec>
</sec>
<sec id="sec15-1077546311408466"><title>4.4. Model with base mass</title>
<p>The final refinement to the model is including the mass of the drive train at the base of the beam. In this model, the DC motor is connected to the mass at the base of the beam via a TSD element. There is a second TSD element in between the base mass and the beam which models flexibility in the clamp that holds the beam onto the base mass. The system transfer matrix for this model is
<disp-formula id="disp-formula45-1077546311408466"><label>(45)</label><graphic xlink:href="10.1177_1077546311408466-eq45.tif"/></disp-formula>
The beam for this model is undamped. This was just a matter of modeling convenience. The Bode plots did not reveal a need for an additional damping term.</p>
<p>The Bode plots in <xref ref-type="fig" rid="fig12-1077546311408466">Figure 12</xref>–<xref ref-type="fig" rid="fig14-1077546311408466">14</xref> compare the base mass model with the complex stiffness model of <xref ref-type="sec" rid="sec14-1077546311408466">Section 4.3.2</xref>. <xref ref-type="fig" rid="fig12-1077546311408466">Figure 12</xref> shows that the base mass model matches the experimental Bode plot for θ<sub><italic>encoder</italic></sub>/<italic>v</italic> more closely than the complex stiffness model from 3 to 10 Hz, but the complex stiffness model better predicts the depth of the zero at 2.5 Hz. The base mass model is the first one to accurately predict the Bode plot of <inline-formula id="ilm8-1077546311408466"><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline" id="mml-math8-1077546311408466"><mml:mrow><mml:msub><mml:mrow><mml:mover><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mi>··</mml:mi></mml:mover></mml:mrow><mml:mrow><mml:mi>tip</mml:mi></mml:mrow></mml:msub><mml:mo>/</mml:mo><mml:mi>v</mml:mi></mml:mrow></mml:math></inline-formula>. <xref ref-type="fig" rid="fig13-1077546311408466">Figure 13</xref> shows that the height and frequency of both peaks agree with the experimental data, as does the phase of the model. The base mass model over predicts the height of the first peak of <xref ref-type="fig" rid="fig14-1077546311408466">Figure 14</xref>, but it matches the second peak quite well.
<fig id="fig12-1077546311408466" position="float"><label>Figure 12.</label><caption><p>Bode plot for θ<sub><italic>encoder</italic></sub>/<italic>v</italic> comparing experimental data with two models: one that uses complex stiffness and one that includes the mass at the base of the beam. While the complex stiffness model better predicts the depth of the zero at 2.5 Hz, the model with base mass is more accurate everywhere else.</p></caption><graphic xlink:href="10.1177_1077546311408466-fig12.tif"/></fig>
<fig id="fig13-1077546311408466" position="float"><label>Figure 13.</label><caption><p>Bode plot for <inline-formula id="ilm9-1077546311408466"><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline" id="mml-math9-1077546311408466"><mml:mrow><mml:msub><mml:mrow><mml:mover><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mi>··</mml:mi></mml:mover></mml:mrow><mml:mrow><mml:mi>tip</mml:mi></mml:mrow></mml:msub><mml:mo>/</mml:mo><mml:mi>v</mml:mi></mml:mrow></mml:math></inline-formula> comparing experimental data with two models: one that uses complex stiffness and one that includes the mass at the base of the beam. The base mass model accurately predicts the frequency and height of both peaks and matches the phase quite well.</p></caption><graphic xlink:href="10.1177_1077546311408466-fig13.tif"/></fig>
<fig id="fig14-1077546311408466" position="float"><label>Figure 14.</label><caption><p>Bode plot for <inline-formula id="ilm10-1077546311408466"><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline" id="mml-math10-1077546311408466"><mml:mrow><mml:msub><mml:mrow><mml:mover><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mi>··</mml:mi></mml:mover></mml:mrow><mml:mrow><mml:mi>tip</mml:mi></mml:mrow></mml:msub><mml:mo>/</mml:mo><mml:msub><mml:mrow><mml:mi>θ</mml:mi></mml:mrow><mml:mrow><mml:mi>encoder</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> comparing experimental data with two models: one that uses complex stiffness and one that includes the mass at the base of the beam. The base mass model over-predicts the height of the first peak.</p></caption><graphic xlink:href="10.1177_1077546311408466-fig14.tif"/></fig></p>
</sec>
<sec id="sec16-1077546311408466"><title>4.5. System identification</title>
<p>Each of the models from <xref ref-type="sec" rid="sec9-1077546311408466">Section 4</xref> shown in <xref ref-type="fig" rid="fig6-1077546311408466">Figures 6</xref>–<xref ref-type="fig" rid="fig14-1077546311408466">14</xref> has been optimized to estimate unknown system parameters. A Nelder–Mead simplex algorithm is used to minimize the difference between the Bode plots from model and experiment for θ<sub><italic>encoder</italic></sub>/<italic>v</italic> and <inline-formula id="ilm11-1077546311408466"><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline" id="mml-math11-1077546311408466"><mml:mrow><mml:msub><mml:mrow><mml:mover><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mi>··</mml:mi></mml:mover></mml:mrow><mml:mrow><mml:mi>tip</mml:mi></mml:mrow></mml:msub><mml:mo>/</mml:mo><mml:mi>v</mml:mi></mml:mrow></mml:math></inline-formula> (<inline-formula id="ilm12-1077546311408466"><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline" id="mml-math12-1077546311408466"><mml:mrow><mml:msub><mml:mrow><mml:mover><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mi>··</mml:mi></mml:mover></mml:mrow><mml:mrow><mml:mi>tip</mml:mi></mml:mrow></mml:msub><mml:mo>/</mml:mo><mml:msub><mml:mrow><mml:mi>θ</mml:mi></mml:mrow><mml:mrow><mml:mi>encoder</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> is not used). The decibel magnitude of the Bode plots is used by the cost function, i.e.
<disp-formula id="disp-formula46-1077546311408466"><label>(46)</label><graphic xlink:href="10.1177_1077546311408466-eq46.tif"/></disp-formula>
where the summation is over the set of discrete frequencies from the experimental data and
<disp-formula id="disp-formula47-1077546311408466"><label>(47)</label><graphic xlink:href="10.1177_1077546311408466-eq47.tif"/></disp-formula>
Because the optimization problem showed a tendency to get stuck in local minima, it was necessary to use brute force parameter variation to find good initial guesses. The computationally efficient models from symbolic analysis greatly aided this portion of the work.</p>
<p>The optimized costs for each model are shown in <xref ref-type="table" rid="table1-1077546311408466">Table 1</xref>. Since the same cost function was used for all of the models, this cost can be used to compare the accuracy of the models. Each model is an improvement over the previous one and the model with base mass is a significant improvement over any of the others.
<table-wrap id="table1-1077546311408466" position="float"><label>Table 1.</label><caption><p>Comparison of the optimized costs of each model of Section 4</p></caption>
<graphic alternate-form-of="table1-1077546311408466" xlink:href="10.1177_1077546311408466-table1.tif"/>
<table frame="hsides">
<thead>
<tr>
<th>Model</th>
<th>Cost</th></tr></thead>
<tbody>
<tr>
<td>TSD model with the undamped beam</td>
<td>224</td></tr>
<tr>
<td>Proportionally damped beam</td>
<td>222</td></tr>
<tr>
<td>Complex stiffness</td>
<td>206</td></tr>
<tr>
<td>Base mass</td>
<td>112</td></tr>
</tbody>
</table>
</table-wrap></p>
<sec id="sec17-1077546311408466"><title>4.5.1. Comments on the optimized parameter values</title>
<p>The goal of this case study is to develop a model for the SFLR that can be justified based on the mechanical design of the robot. It seems reasonable to ask, after the optimization has completed, if the resulting parameters are physically believable. Some of the parameters were constrained in the optimization and some would be difficult to estimate based on physical measurements of the system. There are four unknown parameters whose values can be roughly estimated: the mass and mass moment of inertia of the base mass element and the torsional stiffness coefficients of the two TSD elements.</p>
<p>The optimization returned values of 0.40 kg and 1.6 × 10<sup>−3</sup> kg · m<sup>2</sup> for the mass and mass moment of inertia for the base mass element. A crude analysis including only the two largest components of the basemass estimates these values at 0.35 kg and 1.1 × 10<sup>−4</sup> kg · m<sup>2</sup>. While the optimized value for the mass moment of inertia is an order of magnitude larger than the value from the crude calculation, the optimized values seem reasonable.</p>
<p>The optimization returned values of 0.1 and 2.5 N·m/rad for the TSD spring coefficients. These values should be somewhat stiff compared with the beam model. Pestel and Leckie present a method for representing a beam as a chain of rigid masses and massless springs. Using this approach, a 1 cm portion of the SFLR's beam would have a stiffness of 0.05 N·m/rad. This indicates that the spring coefficients are not excessively small.</p>
</sec>
</sec>
</sec>
<sec id="sec18-1077546311408466"><title>5. Conclusion</title>
<p>A method for developing computationally efficient models of robots with flexible links and joints has been presented. The method uses symbolic transfer matrix analysis to auto-generate code for evaluating infinite-dimensional closed-form transfer functions. This code was used to generate Bode plots for differentmodels of a single-flexible-link robot and was incorporated into cost functions used to identify unknown parameters in the models via optimization algorithms. The derivation of transfer matrices for damped beam elements was also presented.</p>
</sec>
</body>
<back>
<sec id="sec19-1077546311408466"><title>Funding</title>
<p>This research was supported by SIUE's Funded University Research program.</p>
</sec>
<ref-list>
<title>References</title>
<ref id="bibr1-1077546311408466"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Banerjee</surname><given-names>JR</given-names></name></person-group> (<year>1997</year>) <article-title>Dynamic stiffness formulation for structural elements: a general approach</article-title>. <source>Computers &amp; Structures (UK)</source> <volume>63</volume>: <fpage>101</fpage>–<lpage>103</lpage>.</citation></ref>
<ref id="bibr2-1077546311408466"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Banerjee</surname><given-names>JR</given-names></name><name><surname>Fisher</surname><given-names>SA</given-names></name></person-group> (<year>1992</year>) <article-title>Coupled bending–torsional dynamic stiffness matrix for axially loaded beam elements</article-title>. <source>International Journal for Numerical Methods in Engineering</source> <volume>33</volume>: <fpage>739</fpage>–<lpage>751</lpage>.</citation></ref>
<ref id="bibr3-1077546311408466"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Book</surname><given-names>WJ</given-names></name></person-group> (<year>1984</year>) <article-title>Recursive lagrangian dynamics of flexible manipulator arms</article-title>. <source>The International Journal of Robotics Research</source> <volume>3</volume>: <fpage>87</fpage>–<lpage>101</lpage>.</citation></ref>
<ref id="bibr4-1077546311408466"><citation citation-type="confproc"><person-group person-group-type="author"><name><surname>Brüls</surname><given-names>O</given-names></name></person-group> (<year>2005</year>) <article-title>Integrated Simulation and Reduced-Order Modeling of Controlled Flexible Multibody Systems</article-title>. <source><italic>PhD thesis</italic></source> <publisher-loc>Belgium</publisher-loc>: <publisher-name>University of Liège</publisher-name>.</citation></ref>
<ref id="bibr5-1077546311408466"><citation citation-type="confproc"><person-group person-group-type="author"><name><surname>Brüls</surname><given-names>O</given-names></name><name><surname>Duysinx</surname><given-names>P</given-names></name><name><surname>Golinval</surname><given-names>J</given-names></name></person-group> (<year>2005</year>) <article-title>A unified finite element framework for the dynamic analysis of controlled flexible mechanisms</article-title>. In <conf-name>Proceedings of the ECCOMAS Conference on Advances in Computational Multibody Dynamics</conf-name>, <publisher-loc>Madrid, Spain</publisher-loc>.</citation></ref>
<ref id="bibr6-1077546311408466"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Brüls</surname><given-names>O</given-names></name><name><surname>Duysinx</surname><given-names>P</given-names></name><name><surname>Golinval</surname><given-names>J</given-names></name></person-group> (<year>2007</year>) <article-title>The global modal parameterization for non-linear model-order reduction in flexible multibody dynamics</article-title>. <source>International Journal for Numerical Methods in Engineering</source> <volume>69</volume>: <fpage>948</fpage>–<lpage>977</lpage>.</citation></ref>
<ref id="bibr7-1077546311408466"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Hallauer</surname><given-names>WL</given-names></name><name><surname>Liu</surname><given-names>RYL</given-names></name></person-group> (<year>1982</year>) <article-title>Beam bending–torsion dynamic stiffness method for calculation of exact vibration modes</article-title>. <source>Journal of Sound and Vibration</source> <volume>85</volume>: <fpage>105</fpage>–<lpage>113</lpage>.</citation></ref>
<ref id="bibr8-1077546311408466"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>He</surname><given-names>B</given-names></name><name><surname>Rui</surname><given-names>X</given-names></name><name><surname>Wang</surname><given-names>G</given-names></name></person-group> (<year>2007</year>) <article-title>Riccati discrete time transfer matrix method for elastic beam undergoing large overall motion</article-title>. <source>Multibody System Dynamics</source> <volume>18</volume>: <fpage>579</fpage>–<lpage>598</lpage>.</citation></ref>
<ref id="bibr9-1077546311408466"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Kumar</surname><given-names>A</given-names></name><name><surname>Sankar</surname><given-names>T</given-names></name></person-group> (<year>1986</year>) <article-title>A new transfer matrix method for response analysis of large dynamic systems</article-title>. <source>Computers and Structures</source> <volume>23</volume>: <fpage>545</fpage>–<lpage>552</lpage>.</citation></ref>
<ref id="bibr10-1077546311408466"><citation citation-type="book"><person-group person-group-type="author"><name><surname>Meirovitch</surname><given-names>L</given-names></name></person-group> (<year>1986</year>) <source>Elements of Vibration Analysis</source>, <edition>2nd ed</edition>. <publisher-loc>New York</publisher-loc>: <publisher-name>McGraw-Hill</publisher-name>.</citation></ref>
<ref id="bibr11-1077546311408466"><citation citation-type="book"><person-group person-group-type="author"><name><surname>Meirovitch</surname><given-names>L</given-names></name></person-group> (<year>1997</year>) <source>Principles and Techniques of Vibrations</source>. <publisher-loc>Englewood Cliffs, NJ</publisher-loc>: <publisher-name>Prentice-Hall</publisher-name>.</citation></ref>
<ref id="bibr12-1077546311408466"><citation citation-type="book"><person-group person-group-type="author"><name><surname>Pestel</surname><given-names>EC</given-names></name><name><surname>Leckie</surname><given-names>FA</given-names></name></person-group> (<year>1963</year>) <source>Matrix Methods in Elastomechanics</source>. <publisher-loc>New York</publisher-loc>: <publisher-name>McGraw-Hill</publisher-name>.</citation></ref>
<ref id="bibr13-1077546311408466"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Rong</surname><given-names>B</given-names></name><name><surname>Rui</surname><given-names>X</given-names></name><name><surname>Wang</surname><given-names>G</given-names></name><name><surname>Yang</surname><given-names>F</given-names></name></person-group> (<year>2010</year>) <article-title>Discrete time transfer matrix method for dynamics of multibody system with real-time control</article-title>. <source>Journal of Sound and Vibration</source> <volume>329</volume>: <fpage>627</fpage>–<lpage>643</lpage>.</citation></ref>
<ref id="bibr14-1077546311408466"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Rui</surname><given-names>X</given-names></name><name><surname>He</surname><given-names>B</given-names></name><name><surname>Lu</surname><given-names>Y</given-names></name><name><surname>Lu</surname><given-names>W</given-names></name><name><surname>Wang</surname><given-names>G</given-names></name></person-group> (<year>2005</year>) <article-title>Discrete time transfer matrix method for multibody system dynamics</article-title>. <source>Multibody System Dynamics</source> <volume>14</volume>: <fpage>317</fpage>–<lpage>344</lpage>.</citation></ref>
<ref id="bibr15-1077546311408466"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Rui</surname><given-names>X</given-names></name><name><surname>He</surname><given-names>B</given-names></name><name><surname>Rong</surname><given-names>B</given-names></name><name><surname>Wang</surname><given-names>G</given-names></name><name><surname>Lu</surname><given-names>Y</given-names></name></person-group> (<year>2009</year>) <article-title>Discrete time transfer matrix method for dynamics of a multi-rigid-flexible-body system moving in plane</article-title>. <source>Proceedings of the Institution of Mechanical Engineers, Part K: Journal of Multi-body Dynamics</source> <volume>223</volume>: <fpage>23</fpage>–<lpage>42</lpage>.</citation></ref>
<ref id="bibr16-1077546311408466"><citation citation-type="web"><collab>SymPy Development Team</collab> (<year>2009</year>) <source>SymPy: Python library for symbolic mathematics</source>. <comment>Available at: <ext-link ext-link-type="uri" xlink:href="http://www.sympy.org">http://www.sympy.org</ext-link></comment>.</citation></ref>
<ref id="bibr17-1077546311408466"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Yu</surname><given-names>J</given-names></name><name><surname>Lien</surname><given-names>H</given-names></name><name><surname>Wang</surname><given-names>B</given-names></name></person-group> (<year>2004</year>) <article-title>Exact dynamic analysis of space structures using Timoshenko beam theory</article-title>. <source>AIAA Journal</source> <volume>42</volume>: <fpage>833</fpage>–<lpage>839</lpage>.</citation></ref>
</ref-list>
</back>
</article>