<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article
  PUBLIC "-//NLM//DTD Journal Publishing DTD v2.3 20070202//EN" "journalpublishing.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" article-type="other">
<front>
<journal-meta>
<journal-id journal-id-type="publisher-id">HPC</journal-id>
<journal-id journal-id-type="hwp">sphpc</journal-id>
<journal-title>The International Journal of High Performance Computing Applications</journal-title>
<issn pub-type="ppub">1094-3420</issn>
<issn pub-type="epub">1741-2846</issn>
<publisher>
<publisher-name>SAGE Publications</publisher-name>
<publisher-loc>Sage UK: London, England</publisher-loc>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="doi">10.1177/1094342012442457</article-id>
<article-id pub-id-type="publisher-id">10.1177_1094342012442457</article-id>
<article-categories>
<subj-group subj-group-type="heading">
<subject>Preface</subject>
</subj-group>
</article-categories>
<title-group>
<article-title>Applications for the Heterogeneous Computing Era</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author" corresp="yes">
<name>
<surname>Balaji</surname>
<given-names>Pavan</given-names>
</name>
<xref ref-type="aff" rid="aff1-1094342012442457"/>
<xref ref-type="corresp" rid="corresp1-1094342012442457"/>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Meng</surname>
<given-names>Jiayuan</given-names>
</name>
<xref ref-type="aff" rid="aff1-1094342012442457"/>
</contrib>
</contrib-group>
<aff id="aff1-1094342012442457">Argonne National Laboratory, Argonne, IL, USA</aff>
<author-notes>
<corresp id="corresp1-1094342012442457">Pavan Balaji, Argonne National Laboratory, 9700 South Cass Avenue, Argonne, IL 60439-4844, USA Email: <email>balaji@mcs.anl.gov</email> </corresp>
<fn fn-type="other" id="fn1-1094342012442457">
<p>
<italic>Pavan Balaji</italic> is an scientist in the Mathematics and Computer Science Division at Argonne National Laboratory. His research focuses on high-performance computing, with specific interests in parallel programming models, high-end computing architectures powering the largest systems in the world, multi-core and many-core scheduling, and high-speed networks. He received his PhD in computer science and engineering from the Ohio State University.</p>
</fn>
<fn fn-type="other" id="fn2-1094342012442457">
<p>
<italic>Jiayuan Meng</italic> is an Argonne scholar in the Leadership Computing Facility division at Argonne National Laboratory. His research focus is performance modeling and architecture design for accelerator-based high-performance computing systems. He received his PhD in computer science from the University of Virginia. </p>
</fn>
</author-notes>
<pub-date pub-type="epub-ppub">
<month>5</month>
<year>2012</year>
</pub-date>
<volume>26</volume>
<issue>2</issue>
<issue-title>Issues in Large Scale Computing Environments: Heterogeneous Computing and Operating Systems - two subjects, one special issue</issue-title>
<fpage>146</fpage>
<lpage>147</lpage>
<permissions>
<copyright-statement>© The Author(s) 2012</copyright-statement>
<copyright-year>2012</copyright-year>
<copyright-holder content-type="sage">SAGE Publications</copyright-holder>
</permissions>
</article-meta>
</front>
<body>
<p>As we look forward to the exascale era, heterogeneous parallel machines with accelerators, such as graphics processing units (GPUs) and field programmable gate arrays (FPGAs), and upcoming on-chip accelerator cores are expected to play a major role in the largest systems in the world. While there exists significant interest in accelerator-based architectures, much of this interest is an artifact of the hype associated with them. Without understanding the behavior of detailed kernels or even entire applications on these architectures, it is unclear how future systems would be designed based on these architectures.</p>
<p>For accelerator-based heterogeneous systems to truly be successful high-performance computing platforms, we need to obtain a complete picture of HPC applications and identify both the opportunities and the challenges these architectures raise. We need to learn the characteristics of computational kernels and applications and the way different software stacks impact them, in order to guide future accelerator-based high-performance computing (HPC) system designs.</p>
<sec id="section1-1094342012442457">
<title>In this issue</title>
<p>In this special issue, we present case studies on accelerating representative kernels and applications on accelerator-based HPC systems. The articles present cutting-edge software techniques to improve the performance of applications using large-scale fast Fourier transforms (FFTs) on accelerators, GPU performance improvements with unstructured control flow, and characterization and classification of applications’ runtime behavior, all of which can provide useful information in designing future heterogeneous HPC systems. </p>
<p>In ‘Large-scale fast Fourier transform on heterogeneous multi-core systems’, Li et al. describe a parallel implementation of the Cooley–Tucky algorithm to compute large-scale FFTs on Cell BE processor-based parallel systems. In particular, the paper introduces a FFT library that can solve one-dimensional FFTs larger than what fits in a single accelerator. The authors explore many possible designs for each major component of the algorithm and analyze tradeoffs of various implementation strategies, including data transfer topology, factorization of problem size, synchronization schemes, and buffer allocation. As a result, the vector units are efficiently used, and a good communication pattern that leverages the unique DMA mechanism in Cell is achieved.  The overall performance gain of this implementation is 67% compared with FFTW on average.</p>
<p>In ‘Characterization and transformation of unstructured control flow in bulk synchronous applications’, Wu et al. present schemes to handle divergent control flows on single instruction multiple data (SIMD) architectures. The authors identify important classes of program control flows and characterize their presence in real workloads. They find that while structured control flow is handled efficiently using existing techniques, unstructured control flow remains a challenge. The paper proposes compiler transformations that convert unstructured control flow into structured control flow in the intermediate representation level. The technique can be used as a just in time (JIT) compiler prior to executing programs with unstructured control flows on GPUs that do not support unstructured control flow.  </p>
<p>In ‘Network-theoretic classification of parallel computation patterns’, Whalen et al. describe a scheme to classify parallel applications based on their MPI communication behavior. The authors develop a new classification method based on statistical hypothesis testing using the extracted communication patterns. Two approaches are used to characterize the patterns: motif distribution and call distribution. The two-sample Kolmogorov–Smirnov test for statistical hypotheses testing is applied to those patterns. The proposed classifiers are evaluated by their true-positive and false-positive rates using 14 applications running at different scales (from 32 to 2048 ranks). The researchers conclude that the proposed classifiers are faster and better than previous classification methods such as subgraph isomorphism.  This classification technique can be useful in understanding application behavior and designing software and hardware for accelerator-based clusters.</p>
</sec>
</body>
<back/>
</article>