<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article
  PUBLIC "-//NLM//DTD Journal Publishing DTD v2.3 20070202//EN" "journalpublishing.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink" article-type="research-article">
<front>
<journal-meta>
<journal-id journal-id-type="publisher-id">PIG</journal-id>
<journal-id journal-id-type="hwp">sppig</journal-id>
<journal-title>Proceedings of the Institution of Mechanical Engineers, Part G: Journal of Aerospace Engineering</journal-title>
<issn pub-type="ppub">0954-4100</issn>
<issn pub-type="epub">2041-3025</issn>
<publisher>
<publisher-name>SAGE Publications</publisher-name>
<publisher-loc>Sage UK: London, England</publisher-loc>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="doi">10.1177/0954410011410151</article-id>
<article-id pub-id-type="publisher-id">10.1177_0954410011410151</article-id>
<article-categories>
<subj-group subj-group-type="heading">
<subject>Articles</subject>
</subj-group>
</article-categories>
<title-group>
<article-title>Developing an effective algorithm for dynamic UAV path planning with incomplete threat information</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author" corresp="yes">
<name><surname>Gao</surname><given-names>X</given-names></name>
<xref ref-type="corresp" rid="corresp1-0954410011410151">*</xref>
<xref ref-type="aff" rid="aff1-0954410011410151">1</xref>
</contrib>
<contrib contrib-type="author">
<name><surname>Ren</surname><given-names>J</given-names></name>
<xref ref-type="aff" rid="aff1-0954410011410151">1</xref>
</contrib>
<contrib contrib-type="author">
<name><surname>Chen</surname><given-names>D</given-names></name>
<xref ref-type="aff" rid="aff2-0954410011410151">2</xref>
</contrib>
</contrib-group>
<aff id="aff1-0954410011410151"><label>1</label>School of Electronics and Information, Northwestern Polytechnical University, Xi’an, China</aff>
<aff id="aff2-0954410011410151"><label>2</label>Department of Informatics, London South Bank University, London, UK</aff>
<author-notes>
<corresp id="corresp1-0954410011410151"><label>*</label>School of Electronics and Information, Northwestern Polytechnical University, Xi’an 710072, China. email: <email>xggao@nwpu.edu.cn</email></corresp>
</author-notes>
<pub-date pub-type="epub-ppub">
<month>4</month>
<year>2012</year>
</pub-date>
<volume>226</volume>
<issue>4</issue>
<fpage>413</fpage>
<lpage>421</lpage>
<history>
<date date-type="received"><day>28</day><month>7</month><year>2010</year></date>
<date date-type="accepted"><day>20</day><month>4</month><year>2011</year></date>
</history>
<permissions>
<copyright-statement>© IMechE 2011</copyright-statement>
<copyright-year>2011</copyright-year>
<copyright-holder content-type="society">Institution of Mechanical Engineers</copyright-holder>
</permissions>
<abstract>
<p>In this paper the problem of online dynamic UAV path planning is studied for the situation where a manoeuvring pop-up threat exists and information about this threat is incomplete. The problem is addressed by integrating a structure-varying discrete dynamic Bayesian network (SVDDBN) into the model prediction control (MPC) algorithm. The SVDDBN is used to construct online a dynamic threat assessment model by estimating and predicting the states of the manoeuvring pop-up threat. The output of this model is then fed into the MPC algorithm for effective path planning. The results obtained in the performed simulation studies demonstrate the excellent performance of the proposed algorithm.</p>
</abstract>
<kwd-group>
<kwd>model predictive control</kwd>
<kwd>structure-varying discrete dynamic Bayesian network</kwd>
<kwd>manoeuvring pop-up threat</kwd>
<kwd>dynamic threat assessment model</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="sec1-0954410011410151"><title>1 INTRODUCTION</title>
<p>Dynamic path planning for unmanned aerial vehicles (UAVs) is receiving a great deal of research attention. Numerous intelligent information processing-based methods have been applied to UAV path planning, including an evolutionary algorithm-based approach [<bold><xref ref-type="bibr" rid="bibr1-0954410011410151">1</xref></bold>], an artificial potential field approach [<bold><xref ref-type="bibr" rid="bibr2-0954410011410151">2</xref></bold>], a particle swarm optimization algorithm-based approach [<bold><xref ref-type="bibr" rid="bibr3-0954410011410151">3</xref></bold>], and model predictive control (MPC) [<bold><xref ref-type="bibr" rid="bibr4-0954410011410151">4</xref>, <xref ref-type="bibr" rid="bibr5-0954410011410151">5</xref></bold>].</p>
<p>In this paper the problem of online dynamic UAV path planning is addressed for the circumstances that manoeuvrable pop-up threats are present, such as aircraft/helicopters or ground-based defence systems, and that the information about these threats is incomplete (only partially available or not fully known). This work is of practical importance because when performing dynamic UAV path planning in real-world situations target information can be incomplete for various reasons. The problem is tackled by integrating a structure-varying discrete dynamic Bayesian network (SVDDBN) into a MPC algorithm. SVDDBN is a special paradigm of discrete dynamic Bayesian networks, and in essence it is a statistical model for modelling and inferencing with uncertainty [<bold><xref ref-type="bibr" rid="bibr6-0954410011410151">6</xref></bold>–<bold><xref ref-type="bibr" rid="bibr9-0954410011410151">9</xref></bold>]. The basic idea in the present study is that SVDDBN is used to construct an online dynamic threat assessment model by estimating and predicting the states ofthe pop-up threats, and the output of this model is then fed into a MPC algorithm for path planning. The SVDDBN approach has the following advantages.
<list id="list1-0954410011410151" list-type="order">
<list-item><p>The network has a powerful estimation and prediction capability, which makes it highly suitable forthe state estimation and prediction of fast changing pop-up threats.</p></list-item>
<list-item><p>The network can accommodate more uncertain factors to be considered than, for instance, theprobability map-based algorithm [<bold><xref ref-type="bibr" rid="bibr10-0954410011410151">10</xref></bold>] and the four-dimensional MPC algorithm [<bold><xref ref-type="bibr" rid="bibr11-0954410011410151">11</xref></bold>]. Using the proposed network allows both the uncertainties about the time and location at which a pop-up threat appears and also its dynamic behaviour to be considered.</p></list-item>
<list-item><p>The network is capable of dealing with estimation and inference when some data is missing or incomplete, such as in the situation where a pop-up threat randomly appears or disappears.</p></list-item>
<list-item><p>In essence, the MPC algorithm is more suitable for static path planning with complete information about threats. The algorithm alone cannot be used for UAV path planning when fast changing pop-up threats exist.</p></list-item>
</list></p>
<p>The rest of this paper is organized as follows. In section 2 the mission and problem of the UAV path planning under consideration are defined and specified. In section 3 the path planning problem is formalized as an optimal process control problem, and the threat assessment model is established and analysed in detail based on SVDDBN. This model is then integrated into the MPC algorithm to generate desired control rules for path planning. In section 4 several relevant simulation experiments are conducted including path planning for changing pop-up threats with incomplete threat information. Adetailed comparison on the simulation results in different situations is given, which demonstrates the excellent performance of the proposed algorithm. Finally, conclusions are drawn in Section 5.</p></sec>
<sec id="sec2-0954410011410151"><title>2 MISSION AND PROBLEM DESCRIPTION</title>
<p>The mission of the UAV considered in this paper is to fly through, as safely as possible, a high-threat area where a manoeuvring pop-up threat exist. Attention is confined to a two-dimensional (2D) representation of the situation. It is assumed that at any given time during the flight the high-threat area is a circular area with a pop-up threat at the centre of the circle. As such a set of associated, dynamically changeable threat circles exists when the pop-up threat changes in nature. In addition, information about the threat can be missing or incomplete. Therefore, the problem under consideration is to online generate a trajectory with incomplete threat information for a UAV to follow so as to efficiently avoid these changing pop-up threats.</p>
<p>In order to make the UAV perceive the threat and control itself automatically and intelligently in accordance with the requirements of the mission, an SVDDBN-based online path planning system is proposed as shown in <xref ref-type="fig" rid="fig1-0954410011410151">Fig. 1</xref>. Essentially the system integrates the SVDDBN model and MPC algorithm for effective UAV path planning as described in the following section.
<fig id="fig1-0954410011410151" position="float"><label>Fig.1</label><caption><p>The online path planning system</p></caption><graphic xlink:href="10.1177_0954410011410151-fig1.tif"/></fig></p></sec>
<sec id="sec3-0954410011410151"><title>3 PROBLEM FORMULATION</title>
<p>The online dynamic UAV path planning problem under consideration can be formulated as an optimal process control problem, and the following models are adopted: an SVDDBN-based model for threat assessment, which is then integrated into an objective function for the optimal control problem, and an MPC algorithm that optimizes the objective function in order to generate an optimal path.</p>
<p>In addition, a converted measurement Kalman filter (CMKF) algorithm is integrated into the Bayesian network to allow estimation of the missing data about the threats.</p>
<sec id="sec4-0954410011410151"><title>3.1 Threat assessment model based on SVDDBN</title>
<p>The flexibility and ability to describe complex relationships between various variables in a system offered by Bayesian networks mean that they have become a popular tool for analysing uncertain relationships involved in a random systems. A Bayesian network was used in [<bold><xref ref-type="bibr" rid="bibr12-0954410011410151">12</xref></bold>] to construct an assessment model for the threats posed by aerial and ground targets; integrating the multiple features of the threat the network enabled the threat level posed by a specific target to be obtained.</p>
<p>For dynamic UAV path planning with incomplete threat information in the presence of changing pop-up threats considered in this paper it is proposed to use time-varying dynamic Bayesian networks [<bold><xref ref-type="bibr" rid="bibr13-0954410011410151">13</xref>, <xref ref-type="bibr" rid="bibr14-0954410011410151">14</xref></bold>] to model the non-stationary states of the observation information about the threats. The nature of the structure variance of such networks makes them very useful in capturing and describing the dynamic casual dependencies and influences among various variables. In particular in this study the concept of an SVDDBN, which is a type of time-varying network, is considered.</p>
<sec id="sec5-0954410011410151"><title>3.1.1 The SVDDBN</title>
<p>Consider a discrete dynamic Bayesian network. If the variables of the network to be estimated between time slices remain unchanged while the structure or parameters of the node and its descendants can change, then the discrete dynamic Bayesian network is called an SVDDBN.</p>
<p>In comparison to using a standard discrete dynamic Bayesian network for threat estimation and prediction the SVDDBN has the following significant advantages.
<list id="list2-0954410011410151" list-type="order">
<list-item><p>The SVDDBN can be used to model time-varying structures of non-stationary processes which standard discrete dynamic Bayesian network find difficult to model.</p></list-item>
<list-item><p>The standard discrete dynamic Bayesian network is a special case of SVDDBN in the sense that it represents a time-invariant reasoning process and algorithm. Obviously, in the situation where the observation information on a threat is available and complete at all times during the whole path planning process, a threat assessment model based on a standard discrete dynamic Bayesian network can work well; if, however, the observation information is incomplete and missing, or becomes alternately complete or incomplete in the path planning process, the network has to be reconstructed or ‘shift’ to a new threat assessment model accordingly and abandons (or loses ‘memory’ of) all knowledge and information known about the threat in order to cope with the situation. This is impractical and cannot meet the real-time requirement for threat assessment, in particular if fast changing pop-up threats exist.</p></list-item>
</list></p>
<p>The SVDDBN used for threat probability prediction is shown in <xref ref-type="fig" rid="fig2-0954410011410151">Fig. 2</xref>. The model involves the following factors: <italic>Z<sub>t</sub></italic> which is the threat probability at time slice <italic>t</italic>; <italic>L<sub>t</sub></italic> which is the distance between the UAV and the threat centre at time slice <italic>t</italic>; <italic>O<sub>t</sub></italic> which is an indicator of the completeness of information at time slice <italic>t</italic>; <italic>M<sub>t</sub></italic> which is an indicator of the probability that UAV could meet a threat if it flies along the movement direction at time slice <italic>t</italic>; <italic>D<sub>t</sub></italic> which is an indicator of whether the distance between the UAV and a threat has changed at time slice <italic>t</italic>, i.e. if the distance has increased, decreased, or remains unchanged; <italic>R<sub>t-</sub></italic><sub>1</sub> which is the radius of the threat circle at time slice <italic>t-</italic>1; <italic>E<sub>t-</sub></italic><sub>1</sub> which is the angle between the movement directions of the threat and UAV at time slice <italic>t-</italic>1; and <italic>S<sub>t</sub></italic> which is the estimated threat state (i.e. missing data) at time slice <italic>t</italic>, which mainly involves the position, speed, acceleration, and the movement direction of the threat.
<fig id="fig2-0954410011410151" position="float"><label>Fig. 2</label><caption><p>The SVDDBN at previous and current time slices</p></caption><graphic xlink:href="10.1177_0954410011410151-fig2.tif"/></fig></p>
<p>The probability inference process of the SVDDBN is now discussed.</p>
<p><italic>Step 1</italic>: Probability inference at previous time slices.</p>
<p>After having obtained the observational data of the previous time slices, we have that
<disp-formula id="disp1-0954410011410151"><label>(1)</label><graphic xlink:href="10.1177_0954410011410151-eq1.tif"/></disp-formula>
where <italic>C</italic> is a normalizing constant and
<disp-formula id="disp2-0954410011410151"><label>(2)</label><graphic xlink:href="10.1177_0954410011410151-eq2.tif"/></disp-formula>
<disp-formula id="disp3-0954410011410151"><label>(3)</label><graphic xlink:href="10.1177_0954410011410151-eq3.tif"/></disp-formula>
</p>
<p><italic>Step 2</italic>: Probability inference at current time slices. A forward algorithm is used to predict the prior probability of <italic>Z<sub>t</sub></italic> and <italic>D<sub>t</sub></italic>, respectively, as
<disp-formula id="disp4-0954410011410151"><label>(4)</label><graphic xlink:href="10.1177_0954410011410151-eq4.tif"/></disp-formula>
Furthermore, the posterior probability can be obtained as
<disp-formula id="disp5-0954410011410151"><label>(5)</label><graphic xlink:href="10.1177_0954410011410151-eq5.tif"/></disp-formula>
<disp-formula id="disp6-0954410011410151"><label>(6)</label><graphic xlink:href="10.1177_0954410011410151-eq6.tif"/></disp-formula>
where <inline-formula id="ilm1-0954410011410151">
<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline" id="mml-math1-0954410011410151"><mml:mrow><mml:mi>Pa</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> and <inline-formula id="ilm2-0954410011410151">
<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline" id="mml-math2-0954410011410151"><mml:mrow><mml:mi>Pa</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>D</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> are the parent nodes of <italic>S<sub>t</sub></italic> and <italic>D<sub>t</sub></italic>.</p></sec></sec>
<sec id="sec6-0954410011410151"><title>3.2 The estimation of the missing data</title>
<p>The CMKF algorithm is involved in missing data estimation and prediction. In general, the algorithm converts an observed measurement in a polar coordinate system to the Cartesian coordinate system via a set of coordinate transformation equations. Furthermore, the algorithm derives the mean and variance of the error of the converted measurement and the actual measurement to be used in the estimation is the converted measurement minus the mean of the error. Finally, the estimation is performed using a standard Kalman filtering algorithm. Compared with the extended Kalman filter algorithm, CMKF does not require the linearization of any state equations or observation equations in the filtering process; however, in extended Kalman filtering such a linearization process is unavoidable, which always causes filter errors, and in some cases, results in the filtering process becoming diverged. Therefore, converted measurement Kalman filtering can have higher estimation accuracy [<bold><xref ref-type="bibr" rid="bibr15-0954410011410151">15</xref></bold>].</p>
<p>The value of missing data at time slice <italic>t</italic> can be estimated by using the CMKF algorithm along with the estimated data obtained at time slice <italic>t-</italic>1, which is then fed into node <italic>S<sub>t</sub></italic> in the SVDDBN-based threat assessment model. Suppose the manoeuvring pop-up threat is a point particle, and accordingly the state equation and observation equation for the threat may be described as
<disp-formula id="disp7-0954410011410151"><label>(7)</label><graphic xlink:href="10.1177_0954410011410151-eq7.tif"/></disp-formula>
<disp-formula id="disp8-0954410011410151"><label>(8)</label><graphic xlink:href="10.1177_0954410011410151-eq8.tif"/></disp-formula>
where <italic>S</italic>(<italic>t</italic>) indicates the actual state of the threat, <italic>X</italic>(<italic>t</italic>) indicates the observed state of the threat, <bold>A</bold> is a state transition matrix, <bold>H</bold>(<italic>t</italic>) is the observation matrix, <italic>w</italic>(<italic>t</italic>)is observation noise, and <italic>Q</italic>(<italic>t</italic>) is driving noise. Note that <italic>S</italic>(<italic>t</italic>) and <italic>S<sub>t</sub></italic> are interchangeable in this paper.</p></sec>
<sec id="sec7-0954410011410151"><title>3.3 Implementation of MPC integrated with SVDDBN</title>
<p>In general the MPC algorithm [<bold><xref ref-type="bibr" rid="bibr4-0954410011410151">4</xref></bold>] consists of three main components: prediction model, objective function, and obtaining the control law. In the context of the UAV path planning problem considered in this paper, these components can be described as follows.</p>
<p>In 2D space the UAV state equation can be expressed as
<disp-formula id="disp9-0954410011410151"><label>(9)</label><graphic xlink:href="10.1177_0954410011410151-eq9.tif"/></disp-formula>
<disp-formula id="disp10-0954410011410151"><label>(10)</label><graphic xlink:href="10.1177_0954410011410151-eq10.tif"/></disp-formula>
<disp-formula id="disp11-0954410011410151"><label>(11)</label><graphic xlink:href="10.1177_0954410011410151-eq11.tif"/></disp-formula>
where <italic>x</italic> and <italic>y</italic> denote the Cartesian coordinate of UAV, <italic>v</italic> denotes the UAV’s velocity, ψ is the heading angle, <italic>u</italic> is the lateral acceleration with the maximumboundary of an allowable lateral acceleration <italic>U</italic>, <italic>step\_t</italic> is the control interval, and <inline-formula id="ilm5-0954410011410151">
<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline" id="mml-math5-0954410011410151"><mml:mrow><mml:mi>s</mml:mi><mml:mo>=</mml:mo><mml:mi>v</mml:mi><mml:mo>×</mml:mo><mml:mi>step</mml:mi><mml:mi>_</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:math></inline-formula> isthe distance between two neighbouring points onthe UAV’s flight path. Note that <italic>u</italic> is a control variable.</p>
<p>The objective function to be optimized in the path planning problem mainly involves three terms: path length cost, threat cost, and the control variable, which can be described as
<disp-formula id="disp12-0954410011410151"><label>(12)</label><graphic xlink:href="10.1177_0954410011410151-eq12.tif"/></disp-formula>
</p>
<p>The MPC algorithm minimizes the objective function over the predictive horizon at the current point on the flight path at time <italic>t</italic> so as to find an optimal control <inline-formula id="ilm6-0954410011410151">
<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline" id="mml-math6-0954410011410151"><mml:mrow><mml:mi>u</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>. In this representation <italic>N</italic> is the number of points of the flight path in the predictive horizon, <italic>M</italic> is the number of points of the flight path in the control horizon <inline-formula id="ilm7-0954410011410151">
<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline" id="mml-math7-0954410011410151"><mml:mrow><mml:msub><mml:mi>C</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>j</mml:mi><mml:mo>|</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:mrow><mml:mi>x</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>j</mml:mi><mml:mo>|</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>−</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>r</mml:mi></mml:msub></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mi>y</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>j</mml:mi><mml:mo>|</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>−</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mi>r</mml:mi></mml:msub></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>denotes the length cost from the current waypoint to the destination, <inline-formula id="ilm8-0954410011410151">
<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline" id="mml-math8-0954410011410151"><mml:mrow><mml:msub><mml:mrow><mml:mi>X</mml:mi></mml:mrow><mml:mrow><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mtext>r</mml:mtext></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mtext>r</mml:mtext></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:msup><mml:mi/><mml:mrow><mml:mtext>T</mml:mtext></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula> denotes the reference trajectory, <italic>C</italic><sub>1</sub> is the path length price-weighted matrix, <italic>P<sub>Z</sub></italic> denotes threat cost posed to UAV, and γ and η are weighting coefficients. The threat cost is calculated by using (<italic>Z<sub>t</sub>, Z<sub>t+</sub></italic><sub>1</sub>, …, <italic>Z<sub>t+N</sub></italic>) obtained from the SVDDBN-based threat assessment model.</p></sec></sec>
<sec id="sec8-0954410011410151"><title>4 SIMULATION STUDIES AND DISCUSSION</title>
<p>This section details the simulation experiments conducted with the presented algorithm. The relevant simulation conditions and parameters are specified as follows.
<list id="list3-0954410011410151" list-type="order">
<list-item><p>The manoeuvring pop-up threat begins at (26.0, 30.0) km, and disappears at (32.4, 31.0) km. The minimum and maximum speeds of the threat are set to 50 and 100 m/s, respectively. At any given time the radius of threat circle is set to 5 km. The motion equation of the manoeuvring pop-up threat is
<disp-formula id="disp13-0954410011410151"><label>(13)</label><graphic xlink:href="10.1177_0954410011410151-eq13.tif"/></disp-formula>
where [<italic>x</italic>(<italic>t</italic>), <italic>y</italic>(<italic>t</italic>)], <inline-formula id="ilm13-0954410011410151">
<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline" id="mml-math13-0954410011410151"><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>x</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>y</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula>, and <inline-formula id="ilm14-0954410011410151">
<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline" id="mml-math14-0954410011410151"><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mrow><mml:mi>a</mml:mi></mml:mrow><mml:mrow><mml:mi>x</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>a</mml:mi></mml:mrow><mml:mrow><mml:mi>y</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula> are the position, velocity, and acceleration vectors of the threat at time <italic>t</italic>; and Δ is the time interval.</p></list-item>
<list-item><p>The start and destination coordinates of the path planning are (23.0, 25.0) and (34.0, 38.0) km, respectively. The speed and maximum lateral acceleration of the UAV are set to 80 and 35 m/s<sup>2</sup>, respectively.</p></list-item>
<list-item><p>The control interval is set to 1.5 s, i.e. the time interval between each two neighbouring points on the flight path during the flight. The number of waypoints in the predictive horizon is set to be five. A single-step control strategy is adopted to control the UAV. The state transition probability in the SVDDBN-based threat assessment model isgiven according to domain expertise and knowledge.</p></list-item>
<list-item><p>The path planning terminates when the distance between the destination and the current UAV position is no more than 3 km.</p></list-item>
</list></p>
<p>For comparison purposes, five path planning cases were considered in the simulations, and the results are shown in <xref ref-type="fig" rid="fig3-0954410011410151">Figs 3</xref> to <xref ref-type="fig" rid="fig6-0954410011410151">6</xref>, where ‘□’and ‘◊’ represent the start and destination of the path planning, respectively; ‘+’and ‘○’ represent the initial and the last position of the threat before it disappears, respectively; and ‘☆’ indicates the waypoints on a planned path. Five cases were considered in the simulations.
<list id="list4-0954410011410151" list-type="order">
<list-item><p>Case 1: path planning using the MPC algorithm with complete threat information. In the objective function, the length cost is determined by the distance between the current UAV position and its destination, and at any given time the threat cost is determined by the distance between the UAV and the threat. The results are shown in <xref ref-type="fig" rid="fig3-0954410011410151">Fig. 3</xref>.</p></list-item>
<list-item><p>Case 2: path planning using the MPC algorithm along with SVDDBN which was used to estimate the threat probability with complete threat information and different levels of threat manoeuvring. The objective function takes the same form as in case 1, and the output of SVDDBN is used to determine the threat cost in the objective function. The results are given in <xref ref-type="fig" rid="fig4-0954410011410151">Figs 4(a)</xref> and (<xref ref-type="fig" rid="fig4-0954410011410151">b</xref>).</p></list-item>
<list-item><p>Case 3: path planning using the MPC algorithm along with SVDDBN which was used to estimate the threat probability with incomplete threat information (10 per cent random data loss) and different levels of threat manoeuvring. The objective function takes the same form as in case 1, and the output of SVDDBN is used to determine the threat cost in the objective function. The results are shown in <xref ref-type="fig" rid="fig4-0954410011410151">Figs 4(c)</xref> and (<xref ref-type="fig" rid="fig4-0954410011410151">d</xref>).</p></list-item>
<list-item><p>Case 4: as a comparison, in this example path planning was conducted using the MPC algorithm along with a standard discrete dynamic Bayesian network which was used to estimate the threat probability with incomplete threat information (10 per cent random data loss). The objective function takes the same form as in case 1, and the output of the standard discrete dynamic Bayesian network is employed to determine the threat cost in the objective function. The results are shown in <xref ref-type="fig" rid="fig5-0954410011410151">Fig. 5</xref>.</p></list-item>
<list-item><p>Case 5: assume that the manoeuvring pop-up threat makes a circular motion. The threat begins at (26.0, 36.00) km and ends at (26.0, 36.00) km. Path planning using the MPC algorithm along with SVDDBN which was used to estimate the threat probability with incomplete threat information (10 per cent random data loss). The results are shown in <xref ref-type="fig" rid="fig6-0954410011410151">Fig. 6</xref>.</p></list-item>
</list>
<fig id="fig3-0954410011410151" position="float"><label>Fig. 3</label><caption><p>Case 1: dynamic path planning using MPC with complete threat information</p></caption><graphic xlink:href="10.1177_0954410011410151-fig3.tif"/></fig>
<fig id="fig4-0954410011410151" position="float"><label>Fig. 4</label><caption><p>(a) and (b) Case 2: path planning using MPC integrated with SVDDBN with complete threat information and (c) and (d) Case 3: path planning using MPC integrated with SVDDBN with incomplete threat information</p></caption><graphic xlink:href="10.1177_0954410011410151-fig4.tif"/></fig>
<fig id="fig5-0954410011410151" position="float"><label>Fig. 5</label><caption><p>Case 4: path planning using MPC and standard discrete dynamic Bayesian network with incomplete threat information</p></caption><graphic xlink:href="10.1177_0954410011410151-fig5.tif"/></fig>
<fig id="fig6-0954410011410151" position="float"><label>Fig. 6</label><caption><p>(a) and (b) Case 5: when the manoeuvring pop-up threat makes a circular motion, path planning using MPC integrated with SVDDBN with incomplete threat information</p></caption><graphic xlink:href="10.1177_0954410011410151-fig6.tif"/></fig></p>
<p>A discussion on the performance of the proposed algorithm for dynamic path planning will now be presented based on the presented simulation results.</p>
<p>In case 1, the UAV was unable to respond promptly to the threat’s manoeuvring when only the MPC algorithm was used, and it even entered the threat area (<xref ref-type="fig" rid="fig3-0954410011410151">Figs 3(a)</xref> and (<xref ref-type="fig" rid="fig3-0954410011410151">b</xref>)). Moreover, the UAV simply flew ‘parallel’ to the target and immediately moved towards the destination when the threat disappeared (<xref ref-type="fig" rid="fig3-0954410011410151">Figs 3(c)</xref> and (<xref ref-type="fig" rid="fig3-0954410011410151">d</xref>)). The total path length was 26.12 km.</p>
<p>In case 2, the UAV was able to manoeuvre agilely following the path generated by integrating SVDDBN with the MPC algorithm for threat estimation, and flew directly toward the destination when the threat disappeared, resulting in a total path length of 19.56 km (<xref ref-type="fig" rid="fig4-0954410011410151">Figs 4(a)</xref> and (<xref ref-type="fig" rid="fig4-0954410011410151">b</xref>)).</p>
<p>In case 3, the path generated by the proposed algorithm is similar to the path in case 2. The UAV successfully avoided the threat and the total path length is 20.993 km (<xref ref-type="fig" rid="fig4-0954410011410151">Figs 4(c)</xref> and (<xref ref-type="fig" rid="fig4-0954410011410151">d</xref>)), which clearly shows the excellent performance of the proposed algorithm. It should be pointed out that, at each point in the flight path in case 3, the time required to predict the next position of the UAV was between 0.0781 and 0.2031 s, and the flying time between these points was 1.5 s. Apparently, the time required to generate the required position is much shorter than the flying time, and this satisfies the requirement for generating UAV control and command in real-time.</p>
<p>In case 4, the standard discrete dynamic Bayesian network failed to produce a reliable threat estimation when missing data occurred, and, consequently, this made the UAV enter the threat area as shown in <xref ref-type="fig" rid="fig5-0954410011410151">Fig. 5</xref>. In other words, a threat assessment model generated by a time-invariant network is not applicable to the situation where the observational data is incomplete or only partially known during the path planning process.</p>
<p>In case 5, the UAV successfully avoided the pop-up threat by following the path generated by the proposed algorithm even though the threat was moving in a circle and the observational data about the threats was incomplete. As shown in <xref ref-type="fig" rid="fig6-0954410011410151">Fig. 6(a)</xref>, when the threat approached the UAV from either the left or right, the UAV manoeuvred accordingly in order to avoid the threat. When the threat approached the UAV from its rear the UAV simply moved directly towards the destination as shown in <xref ref-type="fig" rid="fig6-0954410011410151">Fig 6(b)</xref>. This has again shown the effectiveness of the proposed algorithm.</p>
<p>It should be noted that in the simulation the control horizon of the path always uses single-step control, i.e. <italic>M</italic> = 1. The main purpose for doing so is to reduce the number of candidate routes and therefore reduce the computation time for path optimization. If multi-step control is adopted, the computation time will increase exponentially with the number of steps <italic>M</italic>, and the algorithm may not be able to meet the requirement for real-time path planning. When <italic>M</italic> = 2, for example, the time require to calculate the next point on the flight path ranges between 38.4 and 56.3 s,</p>
<p>On the other hand, when <italic>M</italic> is fixed to a value of one, different values of <italic>N</italic> may lead to unsatisfactory results. For instance, when <italic>N</italic> &lt; 3, the domain of the prediction is small and this may make it difficult to predict the state of a manoeuvring threat, especially when the threat is in a process of turning, as shown in <xref ref-type="fig" rid="fig7-0954410011410151">Fig. 7(a)</xref>. However, since SVDDBN is a linear prediction algorithm, increasing the domain of the prediction does not help improve prediction accuracy, and even worse, it results in a longer planned paths. For example, for <italic>N</italic> &gt; 6 the planned path has the ridiculous length of 2980 km, as shown in <xref ref-type="fig" rid="fig7-0954410011410151">Fig. 7(b)</xref>.
<fig id="fig7-0954410011410151" position="float"><label>Fig. 7</label><caption><p>(a) Case 3: when <italic>M</italic> = 1, <italic>N</italic> = 2, path planning using MPC integrated with SVDDBN with incomplete threat information and (b) case 3: <italic>M</italic> = 1, <italic>N</italic> = 8, path planning using MPC integrated with SVDDBN with incomplete threat information</p></caption><graphic xlink:href="10.1177_0954410011410151-fig7.tif"/></fig></p></sec>
<sec id="sec9-0954410011410151"><title>5 CONCLUSIONS</title>
<p>This paper has focused on the problem of dynamic UAV path planning in the presence of a manoeuvring pop-up threat for the situation where there is incomplete threat information. The problem was tackled by integrating the SVDDBN into the MPC algorithm.</p>
<p>A threat assessment model was created using SVDDBN and the CMKF algorithm which was used to estimate the missing information on the threat level. The threat probability was predicted using the threat assessment model and the forward algorithm. The results of the predicted threat probability and the length of the planned path were used to establish an objective function that was optimized so as to obtain a series of online controlled variables that could be used to complete the path planning.</p>
<p>The relevant path planning simulation results have demonstrated that the paths generated by the proposed algorithm can effectively avoid a manoeuvring pop-up threat even in the case where some of the information about the threat is missing. The ability of the algorithm to dynamically estimate missing data about the threat can greatly improve the operational efficiency of UAVs.</p></sec>
</body>
<back><ack>
<title>ACKNOWLEDGEMENT</title>
<p>This work was supported by the National Nature Science Foundation of China under grant 60774064.</p></ack>
<ref-list>
<title>REFERENCES</title>
<ref id="bibr1-0954410011410151"><label>1</label><citation citation-type="other"><comment><bold>Nikolos, F. I. K., Zografos, E. S.,</bold> and <bold>Brintaki, A. N.</bold> UAV path planning using evolutionary algorithms. In <italic>Studies in computational intelligence</italic>, 2007 (Springer-Verlag, Berlin, Germany) Vol. 70, pp. 77–111</comment>.</citation></ref>
<ref id="bibr2-0954410011410151"><label>2</label><citation citation-type="other"><comment><bold>McLain, T. W.</bold> and <bold>Beard, R. W.</bold> Trajectory planning for coordinated rendezvous of unmanned air vehicles. In Proceedings of the AIAA Guidance, Navigation, and Control Conference and Exhibit, Denver, Colorado, August 2000, pp. 1–8</comment>.</citation></ref>
<ref id="bibr3-0954410011410151"><label>3</label><citation citation-type="other"><comment><bold>Foo, J. L., Knutzon, J. S., Oliver, J. H.,</bold> and <bold>Winer, E. H.</bold> Three-dimensional multi-objective path planning of unmanned aerial vehicles using particle swarm optimization. In Proceedings of 48th AIAA/ASME/ASCE/AHS/ASC Conference on <italic>Structures, structural dynamics, and materials</italic>, Honolulu, Hawaii, 2007, pp. 1–10</comment>.</citation></ref>
<ref id="bibr4-0954410011410151"><label>4</label><citation citation-type="other"><comment><bold>Sjanic Z.</bold> On-line mission planning based on model predictive control. Master thesis, Sweden, Linkoping University, 2001</comment>.</citation></ref>
<ref id="bibr5-0954410011410151"><label>5</label><citation citation-type="other"><comment><bold>Shim, D. H., Chung, H., Kim, H. J.,</bold> and <bold>Sastry, S.</bold> Autonomous exploration in unknown urban environments for unmanned aerial vehicles. In Proceedings of American Institute of Aeronautics and Astronautics Conference on <italic>Guidance, navigation, and control</italic>, San Francisco, California, 15–18 August 2005, AIAA 2005-6478</comment>.</citation></ref>
<ref id="bibr6-0954410011410151"><label>6</label><citation citation-type="other"><comment><bold>Dean, T.,</bold> and <bold>Kanazawa, K.</bold> A model for reasoning about persistence and causation. <italic>Comput. Intell.</italic>, 1989, <bold>5</bold>(3), 142–150</comment>.</citation></ref>
<ref id="bibr7-0954410011410151"><label>7</label><citation citation-type="other"><comment><bold>Friedman, N., Murphy, K.,</bold> and <bold>Russell, S.</bold> Learning the structure of dynamic probabilistic networks. In Proceedings of the 14th Conference on <italic>Uncertainty in artificial intelligence</italic>, Madison, Wisconsin, 1998, (Morgan Kaufmann, Waltham, Massachusetts) 24–26 July 1998, pp. 139–142</comment>.</citation></ref>
<ref id="bibr8-0954410011410151"><label>8</label><citation citation-type="other"><comment><bold>Xiao, Q., Gao, X.,</bold> and <bold>Gao, S.</bold> Local path re-planning for UCAV based on mix-state dynamic Bayesian networks. <italic>J. Syst. Simul</italic>., 2008, <bold>18</bold>(5), 1302–1306</comment>.</citation></ref>
<ref id="bibr9-0954410011410151"><label>9</label><citation citation-type="other"><comment><bold>Gao, X.-G.</bold> and <bold>Shi, J.-G.</bold> Structure varied discrete dynamic Bayesian network and its inference algorithm. <italic>J. Syst. Engng</italic>, 2007, <bold>22</bold>(1), 9–14</comment>.</citation></ref>
<ref id="bibr10-0954410011410151"><label>10</label><citation citation-type="other"><comment><bold>Zengin, U.</bold> and <bold>Dogan, A.</bold> Probabilistic trajectory planning for UAVs in dynamic environments. In Proceedings of the 3rd AIAA Unmanned Unlimited Technical Conference, Workshop and Exhibit, Chicago, Illinois, 2004</comment>.</citation></ref>
<ref id="bibr11-0954410011410151"><label>11</label><citation citation-type="other"><comment><bold>Gao, X.-G., Zhang, Y.,</bold> and <bold>Chen, D.-Q.</bold> 4D flight planning for multiple UAVs. In Proceedings of the 22nd International Conference on <italic>Unmanned aerial vehicles and systems</italic>, Bristol, UK, 16–18 April 2007</comment>.</citation></ref>
<ref id="bibr12-0954410011410151"><label>12</label><citation citation-type="other"><comment><bold>Pei, C., Zongji, C.,</bold> and <bold>Rui, Z.</bold> Autonomous decisionmaking of UAV based on extended situation assessment. In Proceedings of the American Institute of Aeronautics and Astronautics Conference on <italic>Guidance, navigation, and control</italic>, Keystone, Colorado</comment>.</citation></ref>
<ref id="bibr13-0954410011410151"><label>13</label><citation citation-type="other"><comment><bold>Ahmed, A.</bold> and <bold>Xing, E. P.</bold> Tesla: recovering timevarying networks of dependencies in social and biological studies. <italic>Proc. Natl Acad. Sci. USA</italic>, 2009, <bold>106</bold>(29), 11878–11883</comment>.</citation></ref>
<ref id="bibr14-0954410011410151"><label>14</label><citation citation-type="other"><comment><bold>Song, L., Kolar, M.,</bold> and <bold>Xing, E.</bold> Time-varying dynamic Bayesian networks. In Proceedings of the 22nd Annual Conference on <italic>Neural information processing systems</italic>, Pittsburgh, Pennsylvania, 2009</comment>.</citation></ref>
<ref id="bibr15-0954410011410151"><label>15</label><citation citation-type="other"><comment><bold>Yang, C., Liu, G.,</bold> and <bold>Zheng, Q.</bold> Converted measurement KF for radar target tracking. <italic>Acta Electron. Sin.</italic>, 1999, <bold>27</bold>(3), 121–123</comment>.</citation></ref>
</ref-list>
</back>
</article>