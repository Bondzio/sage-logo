<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article
  PUBLIC "-//NLM//DTD Journal Publishing DTD v2.3 20070202//EN" "journalpublishing.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink" article-type="research-article" xml:lang="en">
<front>
<journal-meta>
<journal-id journal-id-type="publisher-id">CER</journal-id>
<journal-id journal-id-type="hwp">spcer</journal-id>
<journal-title>Concurrent Engineering</journal-title>
<issn pub-type="ppub">1063-293X</issn>
<issn pub-type="epub">1531-2003</issn>
<publisher>
<publisher-name>SAGE Publications</publisher-name>
<publisher-loc>Sage UK: London, England</publisher-loc>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="doi">10.1177/1063293X12469216</article-id>
<article-id pub-id-type="publisher-id">10.1177_1063293X12469216</article-id>
<article-categories>
<subj-group subj-group-type="heading">
<subject>Articles</subject>
</subj-group>
</article-categories>
<title-group>
<article-title>Design rationale and system description aspects in product platform design: Focusing reuse in the design lifecycle phase</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author" corresp="yes">
<name><surname>Gedell</surname><given-names>Stellan</given-names></name>
</contrib>
<contrib contrib-type="author">
<name><surname>Johannesson</surname><given-names>Hans</given-names></name>
</contrib>
<aff id="aff1-1063293X12469216">Department of Product and Production Development, Chalmers University of Technology, Gothenburg, Sweden</aff>
</contrib-group>
<author-notes>
<corresp id="corresp1-1063293X12469216">Stellan Gedell, Department of Product and Production Development, Chalmers University of Technology, SE-41296 Göteborg, Sweden. Email: <email>stellan.gedell@chalmers.se</email>
</corresp>
</author-notes>
<pub-date pub-type="epub-ppub">
<month>3</month>
<year>2013</year>
</pub-date>
<volume>21</volume>
<issue>1</issue>
<fpage>39</fpage>
<lpage>53</lpage>
<permissions>
<copyright-statement>© The Author(s) 2012</copyright-statement>
<copyright-year>2012</copyright-year>
<copyright-holder content-type="sage">SAGE Publications</copyright-holder>
</permissions>
<abstract>
<p>One key to efficient and effective reuse in product-developing companies is platform-based design. Future platforms need to more efficiently deal with: concurrency, information-rich designs and fast realization of design derivates. This calls for new ways to describe platform-based designs. The configurable component framework is intended to support concurrent, complex, and variant-rich system design considering the complete product life cycle. This article presents case studies where an extended function-means model, acting as a design rationale, is incorporated into the configurable component concept. This includes an adaptation to handle design bandwidth, a more transparent and explicit constraint handling, and the composition of a system design rationale based on multiple function-means models. This approach enables the description of complex, encapsulated configurable systems composed using multiple (sub) systems and supports concurrent engineering in a supply chain.</p>
</abstract>
<kwd-group>
<kwd>Design rationale</kwd>
<kwd>product modeling</kwd>
<kwd>platform-based design</kwd>
<kwd>concurrent engineering</kwd>
<kwd>configurable component</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="section1-1063293X12469216" sec-type="intro">
<title>Introduction</title>
<p>One of the main drivers for platform-based development and manufacturing is the possibility to combine customization with economies of scale. The reuse of common resources in multiple customized design variants is one way of achieving this combination. When implemented, it is often referred to as carryover or commonality. Using one part in multiple products opens up for economy of scale in production. In other words, the <italic>reuse of parts promotes efficient manufacturing</italic>.</p>
<p>The possibility to carryover a number of unchanged parts, from a set of quality-assured product parts (a physical or traditional platform) to another design context is influenced by the desired design differentiation. A relatively small design differentiation may lead to a relatively large number of parts having to be modified. Consequently, the economic benefits in manufacturing may be significantly reduced or lost.</p>
<p>However, the <italic>reuse of design information promotes efficient and effective product development</italic>. <xref ref-type="bibr" rid="bibr10-1063293X12469216">Claesson (2006)</xref> presented a product description that supports reuse on a higher level of abstraction (a more abstract type of platform definition) to achieve the economy of scale within product development. In this article, problems identified in industrial case studies (as well as problems discussed in literature) have been addressed by proposing a more abstract approach to describing configurable design platforms. This approach is based on systems theory principles (e.g. <xref ref-type="bibr" rid="bibr16-1063293X12469216">Hitchins, 2003</xref>) and design theory (<xref ref-type="bibr" rid="bibr6-1063293X12469216">Andreasen, 1998</xref>; <xref ref-type="bibr" rid="bibr17-1063293X12469216">Hubka, 1997</xref>).</p>
<p>A platform formed in this way consists of design solutions (DSs) in various degrees of granularity, from overall concepts all the way to very detailed solutions, while being abstract. Physical parts are not <italic>primarily</italic> part of the platform but more a consequence of the abstract content.</p>
<sec id="section2-1063293X12469216">
<title>Limitations using platform-based development</title>
<p>Researchers who have recognized the potential advantages of platform-based approaches have described and proposed different frameworks, methods, and mathematical tools to define and make use of such approaches in different industrial settings (<xref ref-type="bibr" rid="bibr20-1063293X12469216">Jose and Tollenaere, 2005</xref>; <xref ref-type="bibr" rid="bibr28-1063293X12469216">Simpson, 2004</xref>; <xref ref-type="bibr" rid="bibr29-1063293X12469216">Simpson et al., 2006</xref>). One advantage already mentioned and closely related to standardization and modularization is the increased reuse of resources aimed at economies of scale. A number of publications (e.g. <xref ref-type="bibr" rid="bibr7-1063293X12469216">Baldwin and Clark, 2000</xref>; <xref ref-type="bibr" rid="bibr13-1063293X12469216">Ericsson and Erixon, 1999</xref>) discuss different techniques for standardization and modularization in this context.</p>
<p>Platform implementation strategies to enhance economy of scale have been described, for example, by <xref ref-type="bibr" rid="bibr29-1063293X12469216">Simpson et al. (2006)</xref>. A well-known industrial example reported in the literature is from Black and Decker (<xref ref-type="bibr" rid="bibr23-1063293X12469216">Meyer and Lehnerd, 1997</xref>; <xref ref-type="bibr" rid="bibr27-1063293X12469216">Simpson, 1998</xref>). Another industrial example, described by, for example, <xref ref-type="bibr" rid="bibr24-1063293X12469216">Prencipe (1998)</xref>, is from Rolls Royce.</p>
<p>The content of the platform and how this content is developed and described are crucial for the simultaneous optimization of both reuse and design variety. A platform based on parts already designed has severe shortcomings regarding flexibility. More abstract and easily configurable platform descriptions have therefore been proposed. <xref ref-type="bibr" rid="bibr33-1063293X12469216">Van Veen (1991)</xref> proposed a generic bill-of-material (BOM) to provide the possibilities for the description of large varieties of product types and structures. The idea is to define product data on a level of <italic>sets of product types</italic>, rather than defining <italic>individual product types</italic>. <xref ref-type="bibr" rid="bibr12-1063293X12469216">Erens (1996)</xref> applied and explored this concept further when developing product families and synthesizing product variants. <xref ref-type="bibr" rid="bibr14-1063293X12469216">Gedell (2011)</xref> generalizes the definition further and also includes a life cycle perspective by the following definition: “A platform is a set of resources that contains the design solutions that will reduce the total design effort without limiting the identified and estimated derivate designs.”</p>
<p>Reuse is more than a matter of maximizing the degree of commonality. Too much commonality threatens the products’ differentiation within a product offer. With platform development support as a goal, it is important that product architectures can provide the means of identifying and defining how variability (and, with it, product distinction) is achieved (<xref ref-type="bibr" rid="bibr8-1063293X12469216">Berglund and Claesson, 2005</xref>).</p>
<p>Reuse can benefit from product descriptions that are information rich, that is, descriptions that contain additional explicit information besides the resulting design (<xref ref-type="bibr" rid="bibr22-1063293X12469216">McKerlie and MacLean, 1994</xref>). With information describing the reasoning behind the design and issues considered (in this article referred to as “<italic>why-</italic>information”), it is more likely that the design can be used and reused in accordance with what it was designed for.</p>
<p>The “<italic>why</italic>-information” that includes the design intent contributes with an understanding of how to modify the design without accidentally losing desired behavior and, more fundamentally, how to dare to make any changes at all, instead of having to remake the complete design. Another use is to support application in multiple contexts (i.e. use in another product than the one primarily intended). These uses are independent regardless of whether they occur simultaneously or sequentially.</p>
</sec>
</sec>
<sec id="section3-1063293X12469216">
<title>Research approach</title>
<sec id="section4-1063293X12469216">
<title>Research questions</title>
<p>The aim of the research presented in this article is to incorporate “<italic>why</italic>-information” in the product description, as an extension to the existing configurable component modeling framework. The idea is to adopt function-means (F-M) models to fulfill this purpose. According to design theory (<xref ref-type="bibr" rid="bibr17-1063293X12469216">Hubka, 1997</xref>) an F-M tree is a hierarchical model of <italic>one particular system</italic> decomposed into subordinate subsystems. According to <xref ref-type="bibr" rid="bibr10-1063293X12469216">Claesson (2006)</xref>, a configurable component is an autonomous <italic>configurable system</italic> model of encapsulated combined systems. This difference in scope needs to be overcome before the F-M model can be fully utilized within the configurable component framework.</p>
<p>The research questions formulated to address these issues are as follows:</p>
<list id="list1-1063293X12469216" list-type="bullet">
<list-item><p>How could F-M trees be used as carriers of “why-information” within product platforms with platform elements defined by configurable components?</p></list-item>
<list-item><p>How could configurable components carrying “why-information” support platform design reasoning, and thereby designing?</p></list-item>
</list>
</sec>
<sec id="section5-1063293X12469216">
<title>Research methodology</title>
<p>The research in this article has mainly taken a constructivistic approach. Theory-based solutions are proposed to the identified problems and needs. Data models are used to illustrate key modeling aspects. Those models define what information can be handled and how this information is structured. In that sense, they are strongly prescriptive. However, the approach has been to define a data model with significant freedom and opportunities and not to define the process of how it should be used.</p>
<p>The conducted research includes aspects of action research within industrial settings. The findings and proposals have been used in cooperative projects within industry with two goals in mind: to verify and validate the configurable component concept model with its design rationale (DR) and to improve the companies’ understanding of their own products.</p>
<p>The research approach in this work is based on the method proposed by <xref ref-type="bibr" rid="bibr19-1063293X12469216">Jørgensen (1992)</xref>. Following the approach proposed by <xref ref-type="bibr" rid="bibr19-1063293X12469216">Jørgensen (1992)</xref>, the method’s dual starting points in this work are (a) a problem base that is found in cooperation with the industrial partners and (b) a theoretical foundation based on systems theory principles and design theory.</p>
<p>The research presented here focuses on what information is handled during product platform development and how that information should describe a “reality” represented by models. Besides delivering scientific contributions, there is also an explicit goal to deliver results relevant to industry. Such relevance is met if it is possible to implement parts of the proposed models in a computer-based software application. <xref ref-type="bibr" rid="bibr11-1063293X12469216">Duffy and Andreasen (1995)</xref> have used three different modeling steps to illustrate this. In order to describe <italic>Reality</italic>, they claim that <italic>Phenomena models, Information models, and Computer models/tools</italic> are needed. To be meaningful and to support the design work, all models are to represent reality while gradually increasing their level of detail, as well as the level of concretization. A phenomenon model describes basic constructs identified when observing and analyzing reality. The phenomenon model can be further refined, or detailed, into an information model where each piece of information is structured using, for example, classes and attributes. Such a model can then be implemented in software.</p>
<p>The case studies presented are handled by using a software tool. The research focus is on phenomena and information models, and the software tool is just used to verify the models as well as to handle the case studies’ information content. Consequently, the software implementation is just briefly mentioned.</p>
</sec>
<sec id="section6-1063293X12469216">
<title>Studying real-life industrial examples</title>
<p>The real-life industrial examples are taken from the automotive industry. A subset of a car is used to illustrate the proposed methodology. The examples are focused on how to describe the design’s depth rather than its width, in order to illustrate how a system is formed by subsystems, which in turn are formed by subsystems and so on. More precisely, the example includes front seats, delimited to seat heating, which is further delimited to seat heat element, and finally the heating wire. This approach will include a number of company boundaries, thereby visualizing the ability of the methods to support.</p>
<p>Included in the example is support for various product life cycle phases, illustrated as follows:</p>
<list id="list2-1063293X12469216" list-type="bullet">
<list-item><p>The design phase, when the design and its description is created;</p></list-item>
<list-item><p>During production, when the description is used as a source for logistic operations.</p></list-item>
</list>
</sec>
</sec>
<sec id="section7-1063293X12469216">
<title>Frame of reference</title>
<p>This chapter introduces the two main elements in the theory base of this article, namely, systems theory in general and the configurable component framework, which has a focus on applied modeling of systems.</p>
<sec id="section8-1063293X12469216">
<title>Systems theory</title>
<p>Systems theory is a theory designed to study unified whole systems. It has some key features: its ability to represent anything of interest, so-called systems, and the fact that each system <italic>is a whole</italic> that is more than the sum of its parts.</p>
<p>An organism is an example of an entity where the whole is more than the sum of its parts. More specifically speaking, the behavior of a system depends on its subsystems and their relationships. This additional contribution, the so-called emergent properties (<xref ref-type="bibr" rid="bibr9-1063293X12469216">Checkland, 1981</xref>), cannot be attributed to any specific part of the system. Rather, they emerge only when the system as a whole is considered. <xref ref-type="bibr" rid="bibr16-1063293X12469216">Hitchins (2003)</xref> expresses this clearly when he states: “The properties, capabilities, and behaviors of a system derive from its parts, from interactions between those parts, and from interactions with other systems.”</p>
<p>A key factor in successfully handling complex systems is to sometimes deal with a limited number of a system’s parts at a time, instead of with the complete system. Decomposition is a way of limiting the task; however, it has its own drawbacks. <xref ref-type="bibr" rid="bibr16-1063293X12469216">Hitchins (2003)</xref> describes how decomposition will make the parts lose their interactions, thereby losing their context. Elaboration and encapsulation, however, look at the parts in situ and in context, thus maintaining their interactions. In <xref ref-type="fig" rid="fig1-1063293X12469216">Figure 1</xref>, it is illustrated how encapsulation can be compared to placing containers around sets of entities, and the perceived complexity of the system is reduced when unnecessary details are hidden, whereas elaboration can be compared with magnifying glasses, where more details become visible when magnification is increased.</p>
<fig id="fig1-1063293X12469216" position="float">
<label>Figure 1.</label>
<caption>
<p>Two alternative elaborations and encapsulations.</p>
<p>Source: <xref ref-type="bibr" rid="bibr16-1063293X12469216">Hitchins (2003)</xref>.</p>
</caption>
<graphic xlink:href="10.1177_1063293X12469216-fig1.tif"/>
</fig>
</sec>
<sec id="section9-1063293X12469216">
<title>The configurable component concept</title>
<p>The configurable component concept is a means of representing systems and their subsystems using a generic building block, the configurable component (<xref ref-type="bibr" rid="bibr10-1063293X12469216">Claesson, 2006</xref>). The original purpose of the concept is to handle data, information and knowledge sharing, as well as managing the conflict between commonality and reuse, while having the ability to represent variant-rich and complex products and, more generally, entire product platforms.</p>
<p>A configurable component represents a system, which can be elaborated and represented by a set of subsystems. In other words, the initial system is composed of a number of subsystems, which in their turn can be composed of others and so on. The model can support a decentralized setup where a designer is responsible for his/her level of granularity of the design.</p>
<p>A configurable component may be referred to by multiple compositions. Such references may cross product, as well as company boundaries. This requires that each configurable component should be as self-contained as possible. It also requires that parameters that describe variability should be expressed in a terminology relevant for the configurable component itself. A number of successive compositions can be perceived as a structure. For such a structure to exist, there must be a method capable of traversing a number of configurable components and presenting them as a structure. Such a traverse may start with any configurable component.</p>
<p>The configurable component has some constructs that can be regarded as basic—<italic>encapsulation, DS, variability</italic>, and <italic>composition</italic>.</p>
<list id="list3-1063293X12469216" list-type="bullet">
<list-item><p>Encapsulation will conceal the internal structure of the configurable component from the outside environment. Access is gained through interfaces, which make selected parts of the internal content available.</p></list-item>
<list-item><p>The DSs are the elements within a configurable component that describes the design. A DS can represent anything from an overall concept to the smallest detail.</p></list-item>
<list-item><p>Variability, the ability to represent a number of similar designs as one configurable component, is achieved by parameters. A specific variant, a configuration, is achieved by giving values to the parameters of the configurable component.</p></list-item>
<list-item><p>Composition is a feature in systems design where a system has the ability to compose itself using other systems to fulfill its purpose. Because both the parent system and its composition elements (CEs) (i.e. used systems) may be configurable, methods are needed to select the correct configuration of the used systems depending on the parent’s configuration.</p></list-item>
</list>
<p>Encapsulation is an enabler for decoupled design work, as the internal structure may be refined without affecting the outside. The various actors who together create a complete design by contributing with subdesigns can refine their designs with a reduced risk for locking or being locked up by other designs that are depending on their design. The designs’ interdependencies are however not neglected but represented by interactions via interfaces, with the intention to be stable over time. With these mechanisms in place, designing can be made concurrently, that is, <italic>Concurrent Engineering</italic>. <xref ref-type="bibr" rid="bibr15-1063293X12469216">Gedell and Michaelis (2011)</xref> applied the configurable component framework to describe concurrency between product development and manufacturing preparations. In this article, the framework will be applied for concurrent engineering between multiple actors in a supplier chain (e.g. the OEM and their subsuppliers).</p>
</sec>
<sec id="section10-1063293X12469216">
<title>The kernel of the design problem</title>
<p>In general, designing comprises a number of different activities, where each activity contributes to the creation of design information. The main activities are as follows:</p>
<list id="list4-1063293X12469216" list-type="bullet">
<list-item><p>Defining the design problem to be solved;</p></list-item>
<list-item><p>Finding a DS to the problem;</p></list-item>
<list-item><p>Designing a production process that can materialize the design as parts.</p></list-item>
</list>
<p>According to <xref ref-type="bibr" rid="bibr25-1063293X12469216">Roozenburg and Eekels (1995)</xref>, a design’s function is a consequence of its <italic>form</italic> and its <italic>mode and condition of use</italic>, and the core of designing is the transition of a functional description of a product to the description of its form. <xref ref-type="fig" rid="fig2-1063293X12469216">Figure 2</xref> can illustrate this, where designing is going from right to left (in other words, in the opposite direction of the arrows). The starting point is an idea of what the design shall deliver expressed as intended <italic>function, needs</italic> to fulfill, and <italic>values</italic> to match (often referred to as requirements).</p>
<fig id="fig2-1063293X12469216" position="float">
<label>Figure 2.</label>
<caption>
<p>Function as a combination of form and mode and condition of use.</p>
<p>Source: <xref ref-type="bibr" rid="bibr25-1063293X12469216">Roozenburg and Eekels (1995)</xref>.</p>
</caption>
<graphic xlink:href="10.1177_1063293X12469216-fig2.tif"/>
</fig>
<p>Normally, neither the design nor how it is to be used is known. When reasoning from function to form very little is given and very much is asked. It is an open process with many possible solutions. Such activity is inherently nondeductive; hence, it <italic>cannot be grasped in an equation</italic>. The designer’s skills and knowledge play a central role during the reasoning.</p>
<p>The designers’ reasoning depends on an understanding of the design problem, which is a driver for including the design problem in the product description. The result of this reasoning, that is, the DSs as well as the reasoning itself, is also described in the product description thereby forming a DR comprising the requirements, DS, and reasoning, which this article aims to support.</p>
</sec>
<sec id="section11-1063293X12469216">
<title>DR</title>
<p>Models containing more information than just the resulting design are fundamental in any product development that has reached at least some degree of complexity. DR is an approach to design, which emphasizes working with explicit representations not only of possible DSs but also of the reasons and processes behind them (<xref ref-type="bibr" rid="bibr22-1063293X12469216">McKerlie and MacLean, 1994</xref>). In other words, a DR is composed of the following:</p>
<list id="list5-1063293X12469216" list-type="bullet">
<list-item><p>The design intent that is the underlying reason why a certain artifact exists. It is the dreams, visions, objectives, goals, and intended behavior of the product. It describes the intentions behind the idea and the idea of the products, answering the question “why things are.”</p></list-item>
<list-item><p>The justifications for the design, the other alternatives considered, the trade-offs evaluated, and the argumentation that led to that decision (<xref ref-type="bibr" rid="bibr21-1063293X12469216">Lee, 1997</xref>).</p></list-item>
</list>
<p>Thus, DR, in a postdecisional perspective, answers the question, <italic>why things are</italic> and <italic>why things are the way they are</italic>.</p>
<p>A DR that completely contains the reasons and answers is not possible to reach. <xref ref-type="bibr" rid="bibr3-1063293X12469216">Andersson (2003)</xref> claims that the complete rationale for a product cannot be elicited and represented, as it is not a finite task. The completeness is also limited (<xref ref-type="bibr" rid="bibr2-1063293X12469216">Almefelt, 2005</xref>) for two reasons: requirements are in practice often incomplete and conflicting, and individual requirements are not static throughout a development project (rather, they change in one or more steps).</p>
</sec>
<sec id="section12-1063293X12469216">
<title>F-M model as a carrier of the DR</title>
<p>The basic idea of this article is to use an F-M model to represent the DR. The F-M method is a systematic way of finding DSs that fulfill functional requirements (FRs). The F-M model (or F-M tree) describes both requirements and solutions supporting a systematic design approach as shown in <xref ref-type="fig" rid="fig3-1063293X12469216">Figure 3</xref>.</p>
<fig id="fig3-1063293X12469216" position="float">
<label>Figure 3.</label>
<caption>
<p>Extended function-means tree.</p>
<p>Source: <xref ref-type="bibr" rid="bibr26-1063293X12469216">Schachinger and Johannesson (2000)</xref>.</p>
<p>FR: functional requirement; DS: design solution.</p>
</caption>
<graphic xlink:href="10.1177_1063293X12469216-fig3.tif"/>
</fig>
<p>The F-M tree is also a representation of Hubka’s law, which states, “The primary functions of a machine system are supported by a hierarchy of subordinate functions, which are determined by the chosen means.” It has evolved over time, having originally been developed by <xref ref-type="bibr" rid="bibr31-1063293X12469216">Tjalve (1976)</xref> and <xref ref-type="bibr" rid="bibr4-1063293X12469216">Andreasen (1980)</xref>. <xref ref-type="bibr" rid="bibr26-1063293X12469216">Schachinger and Johannesson (2000)</xref> contributed with constraints decomposition in the F-M tree. In an analogy to the F-M tree, axiomatic design (<xref ref-type="bibr" rid="bibr30-1063293X12469216">Suh, 1990</xref>) describes the zigzagging between FR and design parameter (DP). The zigzagging points out the fact that a requirement cannot be decomposed into other requirements without identifying intermediate solutions.</p>
<p>A <italic>function</italic> in a system or in any of its elements is here defined as the effects, created by the elements or by the interactions between the elements, which result in the behavior of the system or the environments’ perception of it. <italic>DSs</italic> are defined as the designed technical artifacts that have the ability to create those effects. These definitions are in accordance with how a <italic>function</italic> and a function realizing <italic>organ</italic> are defined in the theory of domains and the related chromosome model proposed by <xref ref-type="bibr" rid="bibr5-1063293X12469216">Andreasen (1992)</xref>. Note especially that a <italic>DS/means/organ</italic> is an abstraction of a design artifact that is chosen to realize a <italic>function</italic>. This means that there is an important difference between a <italic>DS/means/organ structure</italic> and a <italic>physical component structure</italic> (or BOM) and that special mappings between those two types of structures are needed. This mapping is not addressed in this work.</p>
<p>The term “FR” should be interpreted as a requirement to design the artifact <italic>and</italic> define the mode and condition of use that will make the design deliver the required function. FRs motivate the downright existence of a specific solution. The means, DSs,<sup><xref ref-type="fn" rid="fn1-1063293X12469216">1</xref></sup> are the physical (e.g. components or features) or nonphysical (e.g. service or software) entities that can possibly fulfill a specific FR. The role of the non-FRs (referred to here as constraints) is to delimit the allowed solution space for the FR-driven DSs. In contrast to FRs, constraints do not have specifically allocated DSs.</p>
</sec>
</sec>
<sec id="section13-1063293X12469216" sec-type="results">
<title>Results</title>
<sec id="section14-1063293X12469216">
<title>Applying DR in platform development</title>
<p>The creation of a platform description that is composed of a number of cooperative configurable components gains from a built-in DR in the following two ways:</p>
<list id="list6-1063293X12469216" list-type="bullet">
<list-item><p>To describe the rationale behind the design (the previously discussed “why-information”);</p></list-item>
<list-item><p>To identify which subsystems to use when the system is composed of a number of subsystems, which is to be discussed here.</p></list-item>
</list>
<p>A description of a system can be formed in different ways according to what is considered feasible in the specific situation. However, two major alternative ways can be used when describing the system: (a) as composed by a number of subsystems or (b) autonomously (sometimes referred to as a leaf in a structure). The former gains from DR where the expectations on subsystem functionality can be matched with the potential subsystems presented functionality when subsystems are to be chosen as illustrated by <xref ref-type="fig" rid="fig4-1063293X12469216">Figure 4</xref>.</p>
<fig id="fig4-1063293X12469216" position="float">
<label>Figure 4.</label>
<caption>
<p>Matching of design rationale (FR–DS in CC1 vs. CC2) to support concurrent development of cooperative designs, for example, within a supply chain.</p>
<p>FR: functional requirement; DS: design solution.</p>
</caption>
<graphic xlink:href="10.1177_1063293X12469216-fig4.tif"/>
</fig>
<p>In this figure, CC1 represents a system that implements multiple functions, where each FR and DS, with required subrequirements and corresponding subsolutions (i.e. an F-M (here, an FR–DS structure), is developed. All such FR–DS structures, enhanced with decomposed system constraints, together constitute the DR of the system modeled as a configurable component. Instead of being an F-M tree with one FR-root, the DR is seen as a collection of F-M models with multiple starting points. The top DS, which is the configurable component itself, represents the complete design with a low level of detail (see <xref ref-type="fig" rid="fig4-1063293X12469216">Figure 4</xref>).</p>
<p>The subrequirements and subsolutions are useful when a designer is to define the configurable component’s composition. When a design is composed of other designs, this is described by a composition set (CS). A CS consists of a number of CEs where each describes a “wished” subsystem and a reference (CC_Reference) to the actual subsystem identified to meet this “wish.” In <xref ref-type="fig" rid="fig4-1063293X12469216">Figure 4</xref>, only a limited composition is presented. The first CE in CC1’s CS has an arrow to CC<sub>2</sub>, representing its CC_Reference, to illustrate how other configurable components are used in a composition. If a set of subrequirements and subsolutions <italic>matches</italic> corresponding items in the DR of an existing composition candidate (see <xref ref-type="fig" rid="fig4-1063293X12469216">Figure 4</xref>), it is a perfect choice. If no such candidate can be found, the identified subrequirements and subsolutions can constitute a plea for further development.</p>
<p>Matching between FR and DS couples in the DRs of different CCs is the basis for supply chain development collaboration between partners using CC models to describe their system designs. It aids, for example, an OEM to more efficiently and effectively incorporate a subsuppliers subsystem in its own hosting system. Note that it is sufficient for the FR–DS couple on system and subsystem levels to only “<italic>match</italic>.” It cannot be expected that the designers at the OEM and the subsupplier companies will formulate their DRs in the same way even if what they describe in fact is identical. Instead, when an engineering assessment says that two rationales are consistent, they can be said to match each other.</p>
</sec>
<sec id="section15-1063293X12469216">
<title>Enhancements and modifications of the F-M model</title>
<p>A <italic>configurable component</italic> is a model of an autonomous configurable system family encapsulating combined system families with different purposes (i.e. it has multifunctionality—like a Swiss army knife). A product platform, carrying a number of product variants (e.g. a sedan, coupé, and wagon car), can thus be achieved by a number of such configurable components. The different members (or possible system variants) that can be carried by the platform are determined by the bandwidths (parameter values’ ranges) of the involved configurable components. In order for a configurable component to benefit from the F-M model’s advantages, the latter must be adapted and applied in such a way that it can represent multiple similar designs realized by combined systems with different purposes.</p>
<sec id="section16-1063293X12469216">
<title>Ability to represent multiple variants by one object</title>
<p>Variability is achieved by the configurable component by using parameters in its different internal objects. When a fraction of an F-M tree is used within a configurable component, it also becomes an internal object and is parameterized in a similar way. An F-M model (<xref ref-type="bibr" rid="bibr18-1063293X12469216">Johannesson and Gedell, 2009</xref>) has three building blocks: <italic>FRs, Constraints</italic>, and <italic>DSs</italic>. The parameters and parameter values can be associated with each of those building blocks. With these parameters and parameter values of the designs, a variability range is defined. The F-M model is also extended with methods to relate these variability ranges to each other. For instance, a DS may be restricted by a constraint expressed by an “is_constrained_by” relation. The DS will then define the constraint that restricts it. It will also define how its variability range, for each and every value, is restricted by the constraint’s variability range.</p>
</sec>
<sec id="section17-1063293X12469216">
<title>Ability to represent multiple functions by one object</title>
<p>The F-M model’s traditional approach is to start with one FR and successively elaborate the design based on that. That approach may fit a complete design with one over-all function, that is, designs that, within their scope, deliver functions that do not seem to relate to each other.</p>
<p>In <xref ref-type="fig" rid="fig5-1063293X12469216">Figure 5</xref>, an example from the automotive industry is used to illustrate this. A windscreen (CC1) on a car shall fulfill two functional requirements and one constraint; <italic>separate the interior climate from the outside climate</italic> (FR21), while <italic>maintaining visibility</italic> (C1), and to <italic>accommodate the rear view mirror</italic> (FR22). Traditionally, the left of <xref ref-type="fig" rid="fig5-1063293X12469216">Figure 5</xref> is to be used where FR1 as well as DS1 is to be identified. Instead, the windscreen system, modeled as CC1 in the right figure, is given the role that DS1 has in the left figure. The functional requirement FR1, which is to be fulfilled by DS1, is then to be found in another CC that will be using CC1 for its realization. Consequently both FRs in the right part of Figure 5 are starting-points for separate F-M models. Such multiple F-M models in <xref ref-type="fig" rid="fig4-1063293X12469216">Figure 4</xref> are illustrated as multiple sheets stacked on each other.</p>
<fig id="fig5-1063293X12469216" position="float">
<label>Figure 5.</label>
<caption>
<p>A traditional function-means model (left), modified with multiple starting points (right).</p>
<p>FR: functional requirement; DS: design solution.</p>
</caption>
<graphic xlink:href="10.1177_1063293X12469216-fig5.tif"/>
</fig>
<p>The ability to exclude FR1 and DS1 does not limit the designer to include FR and DS on a higher, super-system level, or on a lower sublevel, if that is considered useful.</p>
</sec>
<sec id="section18-1063293X12469216">
<title>Improving the transparency of how constraints are met</title>
<p>A constraint can have two types of relationships in an F-M model as follows (see <xref ref-type="fig" rid="fig3-1063293X12469216">Figure 3</xref>):</p>
<list id="list7-1063293X12469216" list-type="bullet">
<list-item><p>A DS has the relationship “is_constrained_by” to a constraint on the same hierarchical level;</p></list-item>
<list-item><p>A constraint has the relationship “is_partly_ met_by” to a DS on a lower hierarchical level.</p></list-item>
</list>
<p>These relationships do however not contain information as to what extent the DS on the lower level meets the constraint on the higher level. An example from the case study concerns a design’s flammability. To meet the requirement placed on the design as a whole, the flammability of most CEs is far below the overall constraint. This is a choice made to compensate for the very high flammability of one of the CEs. A special object, “constraint allocation” (see <xref ref-type="fig" rid="fig6-1063293X12469216">Figure 6</xref>), is added to the F-M model to describe such decisions. In addition to the relationship to the constraint to be allocated, constraint allocation contains a number of relationship pairs (DS and constraint) as shown in <xref ref-type="fig" rid="fig6-1063293X12469216">Figure 6</xref>.</p>
<fig id="fig6-1063293X12469216" position="float">
<label>Figure 6.</label>
<caption>
<p>A constraint allocation object where a constraint (limit burn rate to 75 mm/min) is differently allocated to lower level constraints and DSs (screen dump from the AKM application, see the “Seat system to illustrate a DR that supports composition” section).</p>
<p>DS: design solution; AKM: Active Knowledge Modeling; DR: design rationale.</p>
</caption>
<graphic xlink:href="10.1177_1063293X12469216-fig6.tif"/>
</fig>
</sec>
<sec id="section19-1063293X12469216">
<title>Relations between objects represented as explicit objects</title>
<p>The introduction of the constraint allocation indicates the usefulness of an object when describing the reasoning behind a relationship. Similarly, an object is used to represent every relationship (one object type for each relationship type) within the embedded F-M model.</p>
<p>The “is_solved_by” relation that relates an FR and a DS is used to illustrate this explicit way of modeling relations (see <xref ref-type="fig" rid="fig7-1063293X12469216">Figure 7</xref>). In this figure, the vaguely defined arrow is replaced by an object. That object can contain the reasoning why the DS is considered a good solution to the FR (an essential part of a DR). The object also holds the relation to the FR that it meets (Meets_FR) and the DS that is used to solve the problem (Uses_DS), as well as a potential mapping of their parameters. The black diamonds at the start of the arrows are a <xref ref-type="bibr" rid="bibr32-1063293X12469216">UML (2012)</xref> syntax that defines that the relations are an integrated part of the is_solved_by object.</p>
<fig id="fig7-1063293X12469216" position="float">
<label>Figure 7.</label>
<caption>
<p>The relation in the left figure is described more explicitly in the right figure.</p>
<p>FR: functional requirement; DS: design solution.</p>
</caption>
<graphic xlink:href="10.1177_1063293X12469216-fig7.tif"/>
</fig>
<p>The explicit relation object encourages an understanding of requirements and DSs as persistent objects that exist independently of each other and of contexts. The designing includes identifying the design’s relevant requirements in the almost infinite “sea of requirements” and similarly—the solutions.</p>
</sec>
</sec>
<sec id="section20-1063293X12469216">
<title>Support during design and production life cycles</title>
<p>An information-rich product description has the ability to support a number of activities during a design’s life cycles. The following sections will present some examples of how product development can take advantage of a product description as presented in previous sections.</p>
<list id="list8-1063293X12469216" list-type="bullet">
<list-item><p>To define which variants that shall be included in the product program (or product offer) is facilitated by a method that presents the set of variants in a user-friendly way. The configurable component’s ability to represent multiple variants as a parameterized one gives an easy accessible overview of the design.</p></list-item>
<list-item><p>Extending the parameters with new parameter values, which increase the design’s scalability, can create new design variants. Design rules and evaluation models included in the product description improve the designer’s ability and can be used to either create and evaluate more ideas or reduce the development time;</p></list-item>
<list-item><p>Classical use of the product description as an information carrier to both prototype and series production is a given usage.</p></list-item>
</list>
<p>To use a product description both as a source for production and as a design tool raises issues. They can be seen as each other’s antipodes, both from a perspective of causality between input and output and from a perspective of business. When a configurable component model is used to configure predefined instantiated variants, the deductive causal relationships between input and output are used. This contrasts to designing, which is a divergent search for DSs. Still, the product description will support the design activities, when it is used as a source for design proposals that are derived based on deduction.</p>
<p>Company knowledge, for example, found in handbooks and reports as well as skilled personnel, can be used as a base to formulate equations (causal dependencies) that are incorporated into the configurable component model in order to propose DSs. These generated design proposals are then to be evaluated by the designer. A product platform with configurable components will then contain descriptions of design variants and rules that may be used to create further variants.</p>
</sec>
</sec>
<sec id="section21-1063293X12469216">
<title>Real-life industrial examples</title>
<p>The cases presented here are used both to show the applicability of the framework on various “levels” in the supply chain and to exemplify collaborative concurrent design in the supply chain. The examples presented are from the automotive industry (one automotive company and one of their tier-2 suppliers) and are chosen to illustrate a subset of a car while focusing on the vertical collaboration between OEM and subsuppliers as well as how a system is formed using subsystems. Each of the examples has its specific focus while they together form an integrated model even if only a subset of a design is modeled. The systems described are as follows: car, interior, seats, seat heating, heating element, and wire. These systems are described in a variable degree of details, and other systems (e.g. seat structure and seat foam) that interact with these listed systems are only represented as stubs, if represented at all.</p>
<p>The work is divided into three work packages to evaluate the presented methodologies applicability to represent reasoning behind design choices and how to support designing. The examples focus on the following:</p>
<list id="list9-1063293X12469216" list-type="bullet">
<list-item><p>Describe an OEM’s platform including a DR, or to be more precise, to describe a subset of the automaker’s seat system and how it is composed of subsystems.</p></list-item>
<list-item><p>Describe a subsupplier’s platform including a DR, where one of the aims is to evaluate similarities and differences compared to modeling on the OEM level.</p></list-item>
<list-item><p>Extend the subsupplier’s platform description with an ability to propose (or generate) new DSs based on a DR that include the company’s design rules and guidelines, in order to meet a new set of requests from customers, for example, OEMs.</p></list-item>
</list>
<sec id="section22-1063293X12469216">
<title>Seat system to illustrate a DR that supports composition</title>
<p>The scientific aim for this case study is to make initial verification and validation when implementing a DR using the F-M method. The company’s aim is to be introduced to a method new to the company.</p>
<p>A car seat is chosen as a modeling object. A seat is an example of a design that evolves over time, where new DSs are being introduced between seat generations, while others are maintained over time. Additionally, the studied companies’ product program includes a huge number of variants. Together, this makes it an interesting modeling example to illustrate a DR. The sketches in <xref ref-type="fig" rid="fig8-1063293X12469216">Figure 8</xref> illustrate the variability aspects such as different seat foam and under seat mechanics.</p>
<fig id="fig8-1063293X12469216" position="float">
<label>Figure 8.</label>
<caption>
<p>Two seat variants illustrating differences in foam shape and maneuverability (under seat structure and lumbar support adjustment knob).</p>
</caption>
<graphic xlink:href="10.1177_1063293X12469216-fig8.tif"/>
</fig>
<p>Before looking into modeling details, the issue of the models’ completeness is to be considered. The model of the seat system is created to meet the needs and purpose relevant for the creators and users of that model. The information included in the description, and more specifically in the DR, is based on how the design is perceived in its context. The description content is formulated with a focus on the questions and issues that arise on the “level” <italic>complete seat unit</italic>. In other words, the description shall not be completely exhaustive. Consequently, the seat system description is considered completed when (1) enough details are included in the DR to identify which subsystems to use and (2) the CS and the CEs have been referenced to the subsystems. To summarize, completeness is a relative term that is related to expectations.</p>
<p>The data collection, on which the model is based, is performed, as a series of interactive workshops where the main tool used is whiteboard, pen, and paper. The researcher and a highly skilled designer from the car company meet for an hour or 2 on several occasions. Data collected as notes and sketches were, after each meeting, fed into a software application (<xref ref-type="bibr" rid="bibr1-1063293X12469216">Active Knowledge Modeling (AKM), 2012</xref>) and presented as printouts at the following meeting. The AKM tool’s way to enable the user to define the data model, on which the modeling is based, is a valuable feature when developing and evaluating the data model.</p>
<p>The result from these work sessions is a description of the seat system on a rather high level of abstraction. A number of requirements and concepts are identified to, for example, handle comfort, maneuverability, safety, and esthetic aspects. A subset of the seat’s DR, chosen due to its impact on the seat heat element, is presented in <xref ref-type="fig" rid="fig9-1063293X12469216">Figure 9</xref> as two F-M branches (a chain of parameterized FR and parameterized DS).</p>
<fig id="fig9-1063293X12469216" position="float">
<label>Figure 9.</label>
<caption>
<p>Two branches of the seat’s design rationale describing the reasons for the existence of the system and one interacting DS that restricts the heat element’s shape (both are underlined).</p>
<p>FR: functional requirement; DS: design solution.</p>
</caption>
<graphic xlink:href="10.1177_1063293X12469216-fig9.tif"/>
</fig>
<p>On the left of <xref ref-type="fig" rid="fig9-1063293X12469216">Figure 9</xref>, the reasoning for the existence of the heat element is described. On the right of <xref ref-type="fig" rid="fig9-1063293X12469216">Figure 9</xref>, the reasoning behind the seat shape is described, which limits the size and shape of the heat element. From parametric point of view, the two branches differ. In the right of <xref ref-type="fig" rid="fig9-1063293X12469216">Figure 9</xref>, the DS “DS: Seat shape” has a number of parameter values (“Standard,” “Sport”) that meet the requirement to offer different styling themes, that is, the seat shape’s parameter is chosen based on the meet styling theme’s parameter set. In the left of <xref ref-type="fig" rid="fig9-1063293X12469216">Figure 9</xref>, the parameter set of avoid cooling/provide heat is both used in the same way and also used to control a conditional use on the relation between “FR: Avoid cooling/Provide Heat” and “DS: Electrically heated seat.” In other words, some sets of requirement are met by including a seat heat function, whereas others are met without it.</p>
<p>It shall be noted that the identified DSs (electrically heated seat and seat shape) are not further elaborated here. Instead, they are used to identify feasible subsystems (Seat Heat) as further discussed in the next section. The different wording, which might be perceived as a mismatch or error, is an example of terminology adequate within each context as discussed in the last paragraph in the “Support during design and production life cycles” section.</p>
</sec>
<sec id="section23-1063293X12469216">
<title>Applying DR on a subsupplier’s platform</title>
<p>The scientific aim for this case study is to evaluate the applicability of the method at a subsupplier and, more specifically, to compare the applicability of the method when applied at an OEM company compared with a subsupplier company. The company’s goal is to evaluate the method as well as learn more about their designs by using the method.</p>
<p>The setup for this case study is similar to the one previously presented, although experiences gained contribute to the setup of this case study. Besides the obvious change of focus to their company’s products, they engaged more engineers, probably to be able to validate the usefulness of the method in their design process in a better way.</p>
<p>The main activities involved were workshops in which representatives from Chalmers and tier-2 company together created a heat element model. The modeling sessions/workshops can be described as reversed engineering. The Chalmers representatives, who were unfamiliar with the design, asked questions like <italic>what is that, why is it there</italic>, or <italic>what does it do</italic> while pointing at a detail (a DS) on a heat element. The design experts explained the design, and the answers were successively transferred to model elements and fed into the model using the software application AKM. The work progressed in the following three major steps:</p>
<list id="list10-1063293X12469216" list-type="bullet">
<list-item><p>Instantiation of the system (the configurable component) itself and major structure elements within it, such as CS and CE;</p></list-item>
<list-item><p>Creation of an unparameterized (i.e. single variant) DR, using the procedure described above;</p></list-item>
<list-item><p>Generalization of the DR to describe multiple variants, thereby forming a configurable platform description.</p></list-item>
</list>
<p>The last step required quite a lot of considerations. When comparing two design variants, the designs could use different DSs. Was it an intentional variation as a consequence of different requirements (and if so, what were the requirements), or was it accidental? The best practice may change over time, and equally the designs, even though the requirements are unchanged. Different designers have created designs over many years, which may be a reasonable explanation. However, there might have been some requirements that were overseen. To figure this out requires engineers with deep knowledge and preferably long experience of the product. Although time-consuming, the discussion about different DS alternatives increased the amount of details in the model. Details that might otherwise have been overlooked were identified and documented. Besides the reverse engineering, a top-down approach was applied for the customer requirements, which were especially useful to identify constraints.</p>
<p>During the modeling sessions, when the DRs were identified and documented, information was found that could not be handled with the previous methodology. The identified needs initiated parallel activities to generalize the methodology based on the initial models and theories (exemplified in the “Enhancements and modifications of the F-M model” section). The findings were then applied in the continued modeling, and the results were verified and validated together with company’s engineers.</p>
</sec>
<sec id="section24-1063293X12469216">
<title>DR to support engineer-to-order</title>
<p>The third and last case study aims at exemplifying how a DR can be used as a knowledge source capable of generating new designs based on a new parameter value set of requirements. The company needs ability to make rather rough estimation on their capability to meet a new request, and more specifically, if their existing part library can be used to produce the new design. Even though this need has arisen from the company’s sales support, it is not a configuration task (or sales-to-order) but instead an engineer-to-order activity as it includes designing of completely new design variants.</p>
<p>The DR is extended with equations based on knowledge found in the company’s quick reference guides and handbooks that relates a design’s characteristics to the DSs. Additionally, the software application that is used to describe and present the DR in the previous presented case studies (AKM) is extended with an ability to calculate new DP values based on these equations in combination with a new set of values of the requirement parameters. With these extensions in place, the product description has two modes of operation: (a) a storage of existing designs, which can be retrieved by a configuration expression, and (b) an ability to create new design variant proposals. A mix between these modes is also possible even though it is not a seamless transit between the modes of operation.</p>
<p><xref ref-type="fig" rid="fig10-1063293X12469216">Figure 10</xref> presents an overview of the case study. Before discussing how to generate designs based on the model, just let us recap how designs can be retrieved.</p>
<fig id="fig10-1063293X12469216" position="float">
<label>Figure 10.</label>
<caption>
<p>Schematic overview of the information flow during configuration and generation.</p>
</caption>
<graphic xlink:href="10.1177_1063293X12469216-fig10.tif"/>
</fig>
<p>By applying a configuration expression to the control interface, the system (including its composition) is configured, which means that its subsystems also will be assigned values on their control interface and so on, until the model is completely configured. In more detail, the configuration expression is used to configure the “Seat” and its internal elements using composition mechanisms (CS, CE, and CC-reference (CCR)) as discussed in the “Applying DR in platform development” section). This will apply configuration expressions to the systems that the seat is composed of (see Arrow A in <xref ref-type="fig" rid="fig10-1063293X12469216">Figure 10</xref>). “Seat Heat” will configure “Heat Element” in a similar way (see Arrow B in <xref ref-type="fig" rid="fig10-1063293X12469216">Figure 10</xref>). The DR is not directly used in this mode of operation but indirectly used as the composition decisions that have previously been made (and documented in the composition) are based on the DR.</p>
<p>In this case study, the seat description includes both an ability to configure a number of seat variants as requests for subsystems and also some seat variants that are not possible to configure as the design is under construction (it is incomplete). In other words, the chain seat–seat heat–heat element–wire layout is broken at some place because the requested design variant is not yet defined.</p>
<p>In <xref ref-type="fig" rid="fig10-1063293X12469216">Figure 10</xref>, it is illustrated how, in the absence of previous decisions of which heat element to chose, design data are passed over to the heat element in order to, in return, receive a design and some of its key design characteristics. Most of the seat heat’s control interface parameters are given values selected from their parameter value sets, for example, system voltage and heat regulation principle. However, the shape of the foam, on which the seat heat element is to be assembled, is given as a three-dimensional (3D) model as it is a new shape.</p>
<p>In order to answer the question whether a heat element can be produced from the parts already in use in the production facility, and still meet the request, a rough wire layout design is made in the following way:</p>
<list id="list11-1063293X12469216" list-type="bullet">
<list-item><p>The information flow in <xref ref-type="fig" rid="fig10-1063293X12469216">Figure 10</xref> is initiated by assigning values to the seat’s control interface. Along with the selected parameters values, the 3D model for the seat is passed to seat heat (Arrow A).</p></list-item>
<list-item><p>Seat heat has two similar compositions of heat element: one for the seat element and the other for the backrest element, which means that heat element will be instantiated twice, both represented by Arrow B.</p></list-item>
<list-item><p>The heat element is a rather thin and flat part that during assembly of the seat, it is stretched and mounted on the nonflat seat shape. First step toward finding a design is to approximate the 3D seat shape to a two-dimensional (2D) shape in accordance with the stretch limitations described in the heat element’s DR, which is implemented by a software application (represented in <xref ref-type="fig" rid="fig10-1063293X12469216">Figure 10</xref> by Arrow C).</p></list-item>
<list-item><p>Heat element calls the wire layout’s DR for the design rules that limits the wire layout. A center wire length is calculated, based on the previous calculated 2D area, which is returned to the heat element (Arrow D). This knowledge is in the study implemented as an Excel spreadsheet, to indicate that this implementation of the configurable component concept is an open system that allows for communication with other systems but also from more practical reasons—it is quite easy to integrate Excel and use it to write equations.</p>
</list-item>
<list-item><p>The heat element’s DR knowledge of the production process includes knowledge of the limitation between center wire length and the real wire length (the production process does not put wire straight on the centerline but sick-sacks wire following the centerline). With the contribution from the wire’s DR (set of wire dimensions), the equations in heat element are used to find a wire type and wire length that meets the requirements (if a solution can be found).</p></list-item>
</list>
</sec>
</sec>
<sec id="section25-1063293X12469216">
<title>Summary of results</title>
<p>The research presented answers the research questions and contributes to the configurable component framework as follows:</p>
<list id="list12-1063293X12469216" list-type="simple">
<list-item><p>RQ1: How could F-M trees be used as carriers of “why-information” within product platforms with platform elements defined by configurable components?</p></list-item>
</list>
<list id="list13-1063293X12469216" list-type="bullet">
<list-item><p>The configurable component is extended with elements to achieve an ability to represent a design’s DR as an integrated part of the design description.</p></list-item>
<list-item><p>It is described how to apply these elements when a design is to be described by creating a DR.</p></list-item>
</list>
<list id="list14-1063293X12469216" list-type="simple">
<list-item><p>RQ2: How could configurable components carrying “why-information” support platform design reasoning, and thereby designing?</p></list-item>
</list>
<list id="list15-1063293X12469216" list-type="bullet">
<list-item><p>The DR supports design composition and thereby the creation of product structures.</p></list-item>
<list-item><p>The modeling method is applicable to describe any design and on any “level” in a supply chain, that is, supports platforms independent of position in the supply chain.</p></list-item>
<list-item><p>It is exemplified how the DR can contribute to generating new designs being, an information source.</p></list-item>
</list>
</sec>
<sec id="section26-1063293X12469216" sec-type="conclusions">
<title>Discussion and conclusions</title>
<p>The approach used to solve the problems, expressed as research questions, is to extend the data model’s ability to represent a system, or more precisely, an ability for the model to represent not only the system itself (including possible modes or internal states) but also what its purpose is and the environment or context it is intended to interact with. By incorporating a DR in the configurable component model, the model has been given ability to include answers to the question “Why is the design as it is.”</p>
<p>The F-M tree, proposed to act as a DR within a configurable component, has been adapted and applied to comply with the scope of the configurable component concept (in other words, to describe an encapsulated configurable system family composed of combined system families).</p>
<p>In order to ensure the applicability of the proposed solution, the proposed model has been implemented in a tool to form a demonstrator. The demonstrator has also been extended to be able to generate new design variants based on the DR and implemented rules that describe the relation between the DS and the design’s characteristics. Using the demonstrator, real cases from the automotive industry have been described. The demonstrator has been used both to evaluate the applicability of the method in companies on different levels in the supply chain and to explore the possibility to use the DR more actively when creating new designs.</p>
<p>The results are verified by applicability and verification by acceptance. The proposed modeling approach has been able to model the case studies, thus, meeting the research applicability criterion. Verification by acceptance is to some extent met, as the participating industrial partners appreciated the approach and the outcome of the modeling work sessions performed in collaboration with the researcher. The participants gained further knowledge about their own products when they described the reasoning behind the design decisions, which was found to be very valuable for future design work. Indeed, when describing his company’s products as a configurable component, one of the industrial participants discovered a potential product combination currently missing in the product program.</p>
<p>To summarize the results, the first research question—how an F-M tree can be used as a carrier of “<italic>why</italic>-information” within a configurable component—can be answered with: “Yes it can,” but to effectively handle the case studies it needs to be adapted and applied appropriately as shown in this article. The second research question—how configurable components carrying “<italic>why</italic>-information” could support platform design reasoning—is exemplified both by the case studies where the DR part of the product description formed an arena for design discussion, thereby supporting the design activities, and by the semiautomated example presented in the third case study.</p>
<p>The first two case studies show a similar applicability of the method for both the subsupplier and the OEM. Each description (the OEM’s and the supplier’s) is based on issues relevant for their context. As a consequence, the descriptions will differ in their wording and level of detail even though the descriptions are partly describing the same thing, or to be more correct, when the designs have converged (the design is set and done) some configuration of the seat and the subsystems composing it will have the same meaning. In other words, the statements made in the “The configurable component concept” section concerning the framework’s ability to support concurrent engineering in the supply chain have been confirmed by the case studies.</p>
<p>Monolithic and centralized design descriptions tend to become obsolete due to difficulties to maintain them. The approach presented here, a decentralized design description that was created by organizations describing their design according to their context, will be easier to overview and maintain compared to a centralized one. Even though this is an important driver for the framework, it is still only partly verified and will require future research to be confirmed.</p>
</sec>
</body>
<back>
<fn-group>
<fn fn-type="financial-disclosure">
<label>Funding</label>
<p>This work was carried out within the Wingquist Laboratory VINN Excellence Centre at Chalmers University of Technology. It was supported by the Swedish Governmental Agency for Innovation Systems.</p>
</fn>
</fn-group>
<notes>
<fn-group>
<fn fn-type="other" id="fn1-1063293X12469216">
<label>1.</label>
<p>Means are renamed from “design parameter (DP)” to “design solution (DS).” One reason is to make the word <italic>parameter</italic> free, usable in parameterized designs.</p>
</fn>
</fn-group>
</notes>
<bio>
<title>Author Biographies</title>
<p><bold>Dr. Stellan Gedell</bold> is currently part time engaged by Chalmers, Sweden, while running his own business within Product Development Methodology. He received his PhD in Product and Production Development at Chalmers in 2011, which was partly based on experiences received from the automotive industry during the preceding decades.</p>
<p><bold>Dr. Hans Johannesson</bold> is chair professor in engineering design at Chalmers University of Technology in Gothenburg, Sweden where he is heading the Product development division. His research is carried out in close cooperation with Swedish automotive and aerospace industry within the framework of the Wingquist Laboratory.</p>
</bio>
<ref-list>
<title>References</title>
<ref id="bibr1-1063293X12469216">
<citation citation-type="web">
<collab>Active Knowledge Modeling (AKM)</collab> (<year>2012</year>) <article-title>Active knowledge modeling</article-title>. Available at: <ext-link ext-link-type="uri" xlink:href="http://www.activeknowledgemodeling.com">http://www.activeknowledgemodeling.com</ext-link> (<access-date>accessed 1 May 2012</access-date>).</citation>
</ref>
<ref id="bibr2-1063293X12469216">
<citation citation-type="thesis">
<person-group person-group-type="author">
<name><surname>Almefelt</surname><given-names>L</given-names></name>
</person-group> (<year>2005</year>) <source>Requirements-driven product innovation, methods and tools reflecting industrial needs</source>. Doctoral Thesis, <publisher-name>Chalmers University of Technology</publisher-name>, <publisher-loc>Sweden</publisher-loc>.</citation>
</ref>
<ref id="bibr3-1063293X12469216">
<citation citation-type="thesis">
<person-group person-group-type="author">
<name><surname>Andersson</surname><given-names>F</given-names></name>
</person-group> (<year>2003</year>) <source>The dynamics of requirements and product concept management</source>. Doctoral Thesis, <publisher-name>Chalmers University of Technology</publisher-name>, <publisher-loc>Sweden</publisher-loc>.</citation>
</ref>
<ref id="bibr4-1063293X12469216">
<citation citation-type="thesis">
<person-group person-group-type="author">
<name><surname>Andreasen</surname><given-names>MM</given-names></name>
</person-group> (<year>1980</year>) <source>Syntesemetoder på Systemgrundlag—Bidrag till konstruktionsteori</source> (in Danish). Dissertation, <publisher-name>Lund University</publisher-name>, <publisher-loc>Sweden</publisher-loc>.</citation>
</ref>
<ref id="bibr5-1063293X12469216">
<citation citation-type="confproc">
<person-group person-group-type="author">
<name><surname>Andreasen</surname><given-names>MM</given-names></name>
</person-group> (<year>1992</year>) <source>Designing on a “Designer’s Workbench” (DWB)</source>. <conf-name>Proceedings of the 9th WDK Workshop</conf-name>, <conf-loc>Rigi, Switzerland</conf-loc>.</citation>
</ref>
<ref id="bibr6-1063293X12469216">
<citation citation-type="book">
<person-group person-group-type="author">
<name><surname>Andreasen</surname><given-names>MM</given-names></name>
</person-group> <article-title><italic>The Theory of Domains</italic>, Understandingfunction and function-to-form evolution: report from a workshop</article-title>. <person-group person-group-type="editor">
<name><surname>Ullman</surname><given-names>D.G.</given-names></name>
<name><surname>Blessing</surname><given-names>L.T.M.</given-names></name>
<name><surname>Wallace</surname><given-names>K.M.</given-names></name>
</person-group> (eds), <publisher-name>University of Cambridge, Engineering Department</publisher-name>, <publisher-loc>Cambridge, England</publisher-loc>, CUED/C-EDC/TR12, <month>June</month> <year>1992</year>, pp <fpage>21</fpage>–<lpage>47</lpage>.</citation>
</ref>
<ref id="bibr7-1063293X12469216">
<citation citation-type="book">
<person-group person-group-type="author">
<name><surname>Baldwin</surname><given-names>CY</given-names></name>
<name><surname>Clark</surname><given-names>KB</given-names></name>
</person-group> (<year>2000</year>) <source>Design Rules: The Power of Modularity</source>. <publisher-loc>Cambridge, MA</publisher-loc>: <publisher-name>MIT Press</publisher-name>.</citation>
</ref>
<ref id="bibr8-1063293X12469216">
<citation citation-type="confproc">
<person-group person-group-type="author">
<name><surname>Berglund</surname><given-names>F</given-names></name>
<name><surname>Claesson</surname><given-names>A</given-names></name>
</person-group> (<year>2005</year>) <article-title>Utilising the concept of a design’s bandwidth to achieve product platform effectiveness</article-title>. In: <conf-name>International conference on engineering design (ICED)</conf-name>, <conf-loc>Melbourne, VIC, Australia</conf-loc>.</citation>
</ref>
<ref id="bibr9-1063293X12469216">
<citation citation-type="book">
<person-group person-group-type="author">
<name><surname>Checkland</surname><given-names>P</given-names></name>
</person-group> (<year>1981</year>) <source>Systems Thinking, Systems Practice</source>. <publisher-loc>Chichester</publisher-loc>: <publisher-name>John Wiley &amp; Sons</publisher-name>.</citation>
</ref>
<ref id="bibr10-1063293X12469216">
<citation citation-type="thesis">
<person-group person-group-type="author">
<name><surname>Claesson</surname><given-names>A</given-names></name>
</person-group> (<year>2006</year>) <source>A configurable component framework supporting platform-based product development</source>. PhD Thesis, <publisher-name>Chalmers University of Technology</publisher-name>, <publisher-loc>Sweden</publisher-loc>.</citation>
</ref>
<ref id="bibr11-1063293X12469216">
<citation citation-type="confproc">
<person-group person-group-type="author">
<name><surname>Duffy</surname><given-names>AHB</given-names></name>
<name><surname>Andreasen</surname><given-names>MM</given-names></name>
</person-group> (<year>1995</year>) <article-title>Enhancing the evolution of design science</article-title>. In: <conf-name>Proceedings of ICED’95</conf-name>, <conf-loc>Prague, Czech Republic</conf-loc>.</citation>
</ref>
<ref id="bibr12-1063293X12469216">
<citation citation-type="thesis">
<person-group person-group-type="author">
<name><surname>Erens</surname><given-names>FJ</given-names></name>
</person-group> (<year>1996</year>) <source>The synthesis of variety: developing product families</source>. PhD Thesis, <publisher-name>Eindhoven University of Technology</publisher-name>, <publisher-loc>The Netherlands</publisher-loc>.</citation>
</ref>
<ref id="bibr13-1063293X12469216">
<citation citation-type="book">
<person-group person-group-type="author">
<name><surname>Ericsson</surname><given-names>A</given-names></name>
<name><surname>Erixon</surname><given-names>G</given-names></name>
</person-group> (<year>1999</year>) <source>Controlling Design Variants: Modular Product Platforms</source>. <publisher-loc>Dearborn, MI</publisher-loc>: <publisher-name>Society of Manufacturing Engineers</publisher-name>.</citation>
</ref>
<ref id="bibr14-1063293X12469216">
<citation citation-type="thesis">
<person-group person-group-type="author">
<name><surname>Gedell</surname><given-names>S</given-names></name>
</person-group> (<year>2011</year>) <source>Efficient means for platform-based development—emphasizing integrated, information-rich system models</source>. PhD Thesis, <publisher-name>Chalmers University of Technology</publisher-name>, <publisher-loc>Sweden</publisher-loc>.</citation>
</ref>
<ref id="bibr15-1063293X12469216">
<citation citation-type="journal">
<person-group person-group-type="author">
<name><surname>Gedell</surname><given-names>S</given-names></name>
<name><surname>Michaelis</surname><given-names>MT</given-names></name>
<name><surname>Johannesson</surname><given-names>H</given-names></name>
</person-group> (<year>2011</year>) <article-title>Integrated model for co-development of products and production systems—a systems theory approach</article-title>. <source>Concurrent Engineering: Research and Applications</source> <volume>19</volume>(<issue>2</issue>): <fpage>139</fpage>–<lpage>156</lpage>.</citation>
</ref>
<ref id="bibr16-1063293X12469216">
<citation citation-type="book">
<person-group person-group-type="author">
<name><surname>Hitchins</surname><given-names>DK</given-names></name>
</person-group> (<year>2003</year>) <source>Advanced Systems—Thinking, Engineering, and Management</source>. <publisher-loc>Norwood, MA</publisher-loc>: <publisher-name>Artech House, Inc</publisher-name>.</citation>
</ref>
<ref id="bibr17-1063293X12469216">
<citation citation-type="book">
<person-group person-group-type="author">
<name><surname>Hubka</surname><given-names>V</given-names></name>
</person-group> (<year>1997</year>) <source>Principles of Engineering Design</source>. <publisher-loc>Zurich</publisher-loc>: <publisher-name>Heurista</publisher-name>.</citation>
</ref>
<ref id="bibr18-1063293X12469216">
<citation citation-type="book">
<person-group person-group-type="author">
<name><surname>Johannesson</surname><given-names>H</given-names></name>
<name><surname>Gedell</surname><given-names>S</given-names></name>
</person-group> (<year>2009</year>) <article-title>Knowledge Based Configurable Product Platform Models</article-title>. Book chapter in <source>Handbook of Research in Mass customization and personalization</source>, <volume>Vol. 1</volume>, pp. <fpage>357</fpage>–<lpage>375</lpage>. Editors <person-group person-group-type="editor">
<name><surname>Piller</surname><given-names>F.</given-names></name>
<name><surname>Tseng</surname><given-names>M.</given-names></name>
</person-group>, <publisher-name>World Scientific Press</publisher-name>, <year>2009</year>.</citation>
</ref>
<ref id="bibr19-1063293X12469216">
<citation citation-type="book">
<person-group person-group-type="author">
<name><surname>Jørgensen</surname><given-names>KA</given-names></name>
</person-group> (<year>1992</year>) <source>Paradigms for Research Work</source>. <publisher-loc>Aalborg</publisher-loc>: <publisher-name>Instituttet for Produktion, Aalborg Universitets Center</publisher-name>.</citation>
</ref>
<ref id="bibr20-1063293X12469216">
<citation citation-type="journal">
<person-group person-group-type="author">
<name><surname>Jose</surname><given-names>A</given-names></name>
<name><surname>Tollenaere</surname><given-names>M</given-names></name>
</person-group> (<year>2005</year>) <article-title>Modular and platform methods for product family design: literature analysis</article-title>. <source>Journal of Intelligent Manufacturing</source> <volume>16</volume>: <fpage>371</fpage>–<lpage>390</lpage>.</citation>
</ref>
<ref id="bibr21-1063293X12469216">
<citation citation-type="journal">
<person-group person-group-type="author">
<name><surname>Lee</surname><given-names>J</given-names></name>
</person-group> (<year>1997</year>) <article-title>Design rationale systems: understanding the issues</article-title>. <source>IEEE Expert: Intelligent Systems &amp; Their Applications</source> <volume>12</volume>(<issue>3</issue>): <fpage>78</fpage>–<lpage>85</lpage>.</citation>
</ref>
<ref id="bibr22-1063293X12469216">
<citation citation-type="journal">
<person-group person-group-type="author">
<name><surname>McKerlie</surname><given-names>D</given-names></name>
<name><surname>MacLean</surname><given-names>A</given-names></name>
</person-group> (<year>1994</year>) <article-title>Reasoning with design rationale: practical experience with design space analysis</article-title>. <source>Design Studies</source> <volume>15</volume>(<issue>2</issue>): <fpage>214</fpage>–<lpage>226</lpage>.</citation>
</ref>
<ref id="bibr23-1063293X12469216">
<citation citation-type="book">
<person-group person-group-type="author">
<name><surname>Meyer</surname><given-names>MH</given-names></name>
<name><surname>Lehnerd</surname><given-names>AP</given-names></name>
</person-group> (<year>1997</year>) <source>The Power of Product Platforms: Building Value and Cost Leadership</source>. <publisher-loc>New York</publisher-loc>: <publisher-name>The Free Press</publisher-name>.</citation>
</ref>
<ref id="bibr24-1063293X12469216">
<citation citation-type="web">
<person-group person-group-type="author">
<name><surname>Prencipe</surname><given-names>A</given-names></name>
</person-group> (<year>1998</year>) <article-title>Modular design and complex product systems: facts, promises and questions</article-title>. Technical Report. CoPS Publication No. 47, <month>May</month> <year>1998</year>, available at <ext-link ext-link-type="uri" xlink:href="http://www.cops.ac.uk/pdf/cpn47.pdf">http://www.cops.ac.uk/pdf/cpn47.pdf</ext-link></citation>
</ref>
<ref id="bibr25-1063293X12469216">
<citation citation-type="book">
<person-group person-group-type="author">
<name><surname>Roozenburg</surname><given-names>NFM</given-names></name>
<name><surname>Eekels</surname><given-names>J</given-names></name>
</person-group> (<year>1995</year>) <source>Product Design: Fundamentals and Methods</source>. <publisher-loc>Delft</publisher-loc>: <publisher-name>Delft University of Technology</publisher-name>.</citation>
</ref>
<ref id="bibr26-1063293X12469216">
<citation citation-type="journal">
<person-group person-group-type="author">
<name><surname>Schachinger</surname><given-names>P</given-names></name>
<name><surname>Johannesson</surname><given-names>H</given-names></name>
</person-group> (<year>2000</year>) <article-title>Computer modelling of design specifications</article-title>. <source>Journal of Engineering Design</source> <volume>11</volume>(<issue>4</issue>): <fpage>317</fpage>–<lpage>329</lpage>.</citation>
</ref>
<ref id="bibr27-1063293X12469216">
<citation citation-type="thesis">
<person-group person-group-type="author">
<name><surname>Simpson</surname><given-names>TW</given-names></name>
</person-group> (<year>1998</year>) <source>A concept exploration method for product family design</source>. PhD Thesis, <publisher-name>Georgia Institute of Technology</publisher-name>, <publisher-loc>Atlanta, GA</publisher-loc>.</citation>
</ref>
<ref id="bibr28-1063293X12469216">
<citation citation-type="journal">
<person-group person-group-type="author">
<name><surname>Simpson</surname><given-names>TW</given-names></name>
</person-group> (<year>2004</year>) <article-title>Product platform design and customization: status and promise, artificial intelligence for engineering design</article-title>. <source>AI EDAM: Artificial Intelligence for Engineering Design Analysis and Manufacturing</source> <volume>18</volume>(<issue>1</issue>): <fpage>3</fpage>–<lpage>20</lpage>.</citation>
</ref>
<ref id="bibr29-1063293X12469216">
<citation citation-type="book">
<person-group person-group-type="author">
<name><surname>Simpson</surname><given-names>TW</given-names></name>
<name><surname>Siddique</surname><given-names>Z</given-names></name>
<name><surname>Jiao</surname><given-names>RJ</given-names></name>
</person-group> (<year>2006</year>) <source>Product Platform and Product Family Design: Methods and Application</source>. <publisher-name>Springer</publisher-name>, <publisher-loc>New York, NY, USA</publisher-loc>.</citation>
</ref>
<ref id="bibr30-1063293X12469216">
<citation citation-type="book">
<person-group person-group-type="author">
<name><surname>Suh</surname><given-names>PN</given-names></name>
</person-group> (<year>1990</year>) <source>The Principles of Design</source>. <publisher-loc>New York</publisher-loc>: <publisher-name>Oxford University Press</publisher-name>.</citation>
</ref>
<ref id="bibr31-1063293X12469216">
<citation citation-type="book">
<person-group person-group-type="author">
<name><surname>Tjalve</surname><given-names>E</given-names></name>
</person-group> (<year>1976</year>) <source>Systematisk Udformning af Industriprodukter—Værktøjer for konstruktøren</source> [<trans-source>Systematic Design of Industrial Products—Tools for the Design Engineer</trans-source>]. <publisher-name>Akademiskforlag, Køpenhavn</publisher-name>, <publisher-loc>Denmark</publisher-loc>.</citation>
</ref>
<ref id="bibr32-1063293X12469216">
<citation citation-type="web">
<collab>UML</collab> (<year>2012</year>) <article-title>Object management group</article-title>. Available at: <ext-link ext-link-type="uri" xlink:href="http://www.uml.org">http://www.uml.org</ext-link> (<access-date>accessed 1 May 2012</access-date>).</citation>
</ref>
<ref id="bibr33-1063293X12469216">
<citation citation-type="thesis">
<person-group person-group-type="author">
<name><surname>Van Veen</surname><given-names>EA</given-names></name>
</person-group> (<year>1991</year>) <source>Modeling product structures by Generic Bills-of-Material</source>. PhD Thesis, <publisher-name>Eindhoven University of Technology</publisher-name>, <publisher-loc>The Netherlands</publisher-loc>.</citation>
</ref>
</ref-list>
</back>
</article>