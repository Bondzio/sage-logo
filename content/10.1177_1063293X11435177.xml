<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article
  PUBLIC "-//NLM//DTD Journal Publishing DTD v2.3 20070202//EN" "journalpublishing.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" article-type="research-article">
<front>
<journal-meta>
<journal-id journal-id-type="publisher-id">CER</journal-id>
<journal-id journal-id-type="hwp">spcer</journal-id>
<journal-title>Concurrent Engineering</journal-title>
<issn pub-type="ppub">1063-293X</issn>
<issn pub-type="epub">1531-2003</issn>
<publisher>
<publisher-name>SAGE Publications</publisher-name>
<publisher-loc>Sage UK: London, England</publisher-loc>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="doi">10.1177/1063293X11435177</article-id>
<article-id pub-id-type="publisher-id">10.1177_1063293X11435177</article-id>
<article-categories>
<subj-group subj-group-type="heading">
<subject>Articles</subject>
</subj-group>
</article-categories>
<title-group>
<article-title>Impacts of concurrency, iteration, design review, and problem complexity on design project lead time and error generation</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author" corresp="yes">
<name><surname>Le</surname><given-names>H Nam</given-names></name>
</contrib>
<contrib contrib-type="author">
<name><surname>Wynn</surname><given-names>David C</given-names></name>
</contrib>
<contrib contrib-type="author">
<name><surname>Clarkson</surname><given-names>P John</given-names></name>
</contrib>
<aff id="aff1-1063293X11435177">Engineering Design Centre, Department of Engineering, University of Cambridge, Trumpington Street, Cambridge, UK</aff>
</contrib-group>
<author-notes>
<corresp id="corresp1-1063293X11435177">H Nam Le, Engineering Design Centre, University of Cambridge, Department of Engineering, University of Cambridge, Trumpington Street, Cambridge, CB2 1PZ, UK Email: <email>hnl24@cam.ac.uk</email></corresp>
<fn fn-type="other" id="bio1-1063293X11435177">
<p>H Nam Le received a “Diplom-Ingenieur” degree in Industrial Engineering and Management from the Hamburg University of Technology in 2008 and joined the Engineering Design Centre in January 2009. As member of the Design Processes and Systems group, he investigates the impact of iteration on process behaviour and explores ways to support iteration management through process modelling and simulation.</p>
</fn>
<fn fn-type="other" id="bio2-1063293X11435177">
<p>David C Wynn is a Senior Research Associate at the Cambridge University Engineering Department. He has a PhD in Engineering from the University of Cambridge and an MEng in Engineering and Computing Science from the University of Oxford. His research focuses on computer-based modelling of complex collaborative processes. He has authored or co-authored over 50 publications on aspects of product development.</p>
</fn>
<fn fn-type="other" id="bio3-1063293X11435177">
<p>P John Clarkson is director of the Engineering Design Centre and Professor at the Cambridge University Engineering Department. His research interests are in the general area of engineering design, particularly the development of design methodologies to address specific design issues, for example, process management, change management, healthcare design and inclusive design. As well as publishing over 450 papers, he has written and edited a number of books on medical equipment design and inclusive design.</p>
</fn>
</author-notes>
<pub-date pub-type="epub-ppub">
<month>3</month>
<year>2012</year>
</pub-date>
<volume>20</volume>
<issue>1</issue>
<fpage>55</fpage>
<lpage>67</lpage>
<permissions>
<copyright-statement>© The Author(s) 2012</copyright-statement>
<copyright-year>2012</copyright-year>
<copyright-holder content-type="sage">SAGE Publications</copyright-holder>
</permissions>
<abstract>
<p>A case study of an aircraft engine manufacturer is used to analyze the effects of management levers on the lead time and design errors generated in an iteration-intensive concurrent engineering process. The levers considered are amount of design-space exploration iteration, degree of process concurrency, and timing of design reviews. Simulation is used to show how the ideal combination of these levers can vary with changes in design problem complexity, which can increase, for instance, when novel technology is incorporated in a design. Results confirm that it is important to consider multiple iteration-influencing factors and their interdependencies to understand concurrent processes, because the factors can interact with confounding effects. The article also demonstrates a new approach to derive a system dynamics model from a process task network. The new approach could be applied to analyze other concurrent engineering scenarios.</p>
</abstract>
<kwd-group>
<kwd>product development</kwd>
<kwd>iteration</kwd>
<kwd>concurrency</kwd>
<kwd>design review</kwd>
<kwd>process simulation</kwd>
<kwd>system dynamics</kwd>
<kwd>task network</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="section1-1063293X11435177" sec-type="intro">
<title>Introduction</title>
<p>Planning and managing the development of complex, large-scale products are challenging tasks. This is because of the size, concurrency, and inherent uncertainties of development projects. Project managers could benefit from support in evaluating different levers and policies that can influence process outcomes. This article draws on a case study to consider interactions between management levers and their influences on project lead time and design error generation. The case study is based on ongoing work carried out in the authors’ research group to help model and improve the development process at an aircraft engine manufacturer. A system dynamics (SD) simulation model of this situation is developed by transforming a task network (TN) model of the development process. The TN model was originally generated to capture the process, support project scheduling, and analyze the impact of uncertainty. It represents many details of the development process but cannot be used to analyze the interactions between factors such as iteration and process concurrency, and their influence on lead time and error generation. This is because TN models have very limited capability to capture process dynamics and policy issues.</p>
<p>Three management levers were chosen for analysis: the amount of time dedicated to iterations to explore the design space; the amount of concurrency (overlapping) between phases in the project; and the timing of design reviews. These issues were selected because both the case study and the literature suggest that they could have significant impact on iteration behavior, and thus project lead time and design error generation. They are important not only in this case study, but also for other large-scale engineering projects that are based on high technology and that are subject to rigorous safety requirements.</p>
<p>The following basic interactions are considered. Iteration to explore the design space (both problems and solutions) contributes to the decision on the design concept chosen to take forward from preliminary design. More iteration can significantly improve the quality of the final design (<xref ref-type="bibr" rid="bibr16-1063293X11435177">Jarrett et al., 2007</xref>), though at the cost of more development time and resource (<xref ref-type="bibr" rid="bibr36-1063293X11435177">Wynn et al., 2011</xref>). The degree of process concurrency can be increased to reduce development lead time (<xref ref-type="bibr" rid="bibr19-1063293X11435177">Krishnan et al., 1997</xref>). However, it can also cause design errors and thus iteration to correct them (<xref ref-type="bibr" rid="bibr31-1063293X11435177">Sandberg et al., 2005</xref>). More design reviews, in turn, can discover those errors quickly and thus avoid potential knock-on impacts at a later stage (<xref ref-type="bibr" rid="bibr2-1063293X11435177">Ahmadi and Wang, 1999</xref>). However, design reviews require resource and time, just like the rework they can help avoid (<xref ref-type="bibr" rid="bibr13-1063293X11435177">Ha and Porteus, 1995</xref>). Changes in design problem complexity were also considered, to explore how this variable affects the choice of policy.</p>
<p>The analysis considers both project lead time and design error generation because the case study is based on the development of an engineering product that is subject to rigorous safety requirements. In this environment, design errors are a main driver of iteration and hence project lead time. Unlike, for instance, software engineering, it is critical that all design errors are found and corrected prior to project completion. Therefore, reducing errors during design could help reduce overall project lead time.</p>
</sec>
<sec id="section2-1063293X11435177">
<title>Background</title>
<p>As mentioned previously, iteration is a major aspect of a complex design project. Iteration is well documented in the product development (PD) literature and has been differentiated according to its planned or unplanned nature (<xref ref-type="bibr" rid="bibr32-1063293X11435177">Smith and Eppinger, 1995</xref>). Planned iteration usually takes place to explore design problems and the possible solution space (<xref ref-type="bibr" rid="bibr21-1063293X11435177">Loch et al., 2001</xref>), to converge on a design concept (<xref ref-type="bibr" rid="bibr8-1063293X11435177">Denker et al., 2001</xref>), or to refine a solution. Results from a survey by <xref ref-type="bibr" rid="bibr9-1063293X11435177">Eisenhardt and Tabrizi (1995)</xref> suggest that development processes with “more design iterations” tend to require less time. They argue that “design iteration” increases the quality of the design and, hence, minimizes design errors. Another purpose of planned iteration is to incorporate finalized design input that was not previously available, for instance, if process phases or tasks are overlapped to reduce lead time (<xref ref-type="bibr" rid="bibr19-1063293X11435177">Krishnan et al., 1997</xref>; <xref ref-type="bibr" rid="bibr30-1063293X11435177">Roemer et al., 2000</xref>). Planned iteration is ubiquitous in designing large-scale products that involves solving sets of complex and coupled problems with conflicting objectives (<xref ref-type="bibr" rid="bibr5-1063293X11435177">Clarkson et al., 2004</xref>; <xref ref-type="bibr" rid="bibr25-1063293X11435177">Prasad, 1997</xref>). A satisfactory result may not be reached until many cycles of design exploration and convergence are complete. The main negative side effect of planned iteration is the time and resource requirement of each iteration cycle (<xref ref-type="bibr" rid="bibr36-1063293X11435177">Wynn et al., 2011</xref>).</p>
<p>Unplanned iteration occurs when it becomes apparent that evolving design cannot meet requirements. This may be due to changed requirements (<xref ref-type="bibr" rid="bibr33-1063293X11435177">Smith and Eppinger, 1997</xref>) or due to design errors (<xref ref-type="bibr" rid="bibr13-1063293X11435177">Ha and Porteus, 1995</xref>) and incompatibility of subsystems that are revealed by design reviews later in the process (<xref ref-type="bibr" rid="bibr15-1063293X11435177">Hoedemaker et al., 1999</xref>). Unplanned iteration takes place to correct design errors rather than to “add quality” to the design (<xref ref-type="bibr" rid="bibr7-1063293X11435177">Costa and Sobek, 2003</xref>). In general, engineering design of large-scale products is complex, and thus, these errors and mistakes cannot be avoided entirely (<xref ref-type="bibr" rid="bibr4-1063293X11435177">Cho and Eppinger, 2005</xref>). Unplanned iteration is undesirable because it often entails additional cost and delays project completion (<xref ref-type="bibr" rid="bibr22-1063293X11435177">Osborne, 1993</xref>).</p>
<p>The complexity of design problems in jet engine development causes many iteration cycles and puts companies under pressure to keep development lead time under control to stay competitive. One strategy to reduce lead time is process concurrency (overlapping) (<xref ref-type="bibr" rid="bibr27-1063293X11435177">Prasad, 2000</xref>). A number of researchers have explored how concurrency can be employed and studied its knock-on effects. <xref ref-type="bibr" rid="bibr19-1063293X11435177">Krishnan et al. (1997)</xref> propose a framework where the evolution and sensitivity properties related to information exchanged between two activities determine the optimal degree of overlapping between them, with the objective of minimizing rework effort. They analyze four combinations of the evolution and sensitivity properties and derive an overlapping strategy for each case. Building on Krishnan et al.’s (1997) work, <xref ref-type="bibr" rid="bibr34-1063293X11435177">Terwiesch et al. (2002)</xref> add the influence of design uncertainty and dependency. These factors make overlapping less attractive because the time saving gained through overlapping decreases. <xref ref-type="bibr" rid="bibr30-1063293X11435177">Roemer et al. (2000)</xref> map the trade-off between time reduction and additional cost through overlapping of activities and develop a plot of Pareto-optimal overlapping strategies. <xref ref-type="bibr" rid="bibr11-1063293X11435177">Ford and Sterman (2003a)</xref> use SD modeling to show how process concurrency may cause “delays in the discovery of rework needs.” They show that such delays can lead to more unplanned iteration, and that more process concurrency increases the fraction of work to be repeated. This can be counter-productive for reducing project lead time and maintaining quality standards.</p>
<p>Considering design error, <xref ref-type="bibr" rid="bibr13-1063293X11435177">Ha and Porteus (1995)</xref> apply an analytical model to estimate the optimal review period for different degrees of concurrent design. They argue that it is more beneficial to conduct frequent reviews if parallel development can be facilitated or the probability of design flaws is high. They also show that if design reviews are held too frequently or too infrequently, total development time can increase. Similarly, <xref ref-type="bibr" rid="bibr2-1063293X11435177">Ahmadi and Wang (1999)</xref> conclude that requiring either too high or too low confidence levels at reviews in an early development stage can extend overall lead time. In their model, a Markov chain is applied to find the review path with the lowest cost while meeting the specified confidence level. <xref ref-type="bibr" rid="bibr8-1063293X11435177">Denker et al. (2001)</xref> use Dependency Structure Matrix (DSM) modeling to map task dependencies. They propose that design reviews should be planned according to “the structure of information dependencies” between tasks, rather than having generic reviews at the end of each phase. They argue that this leads to “fewer, simpler reviews” that are more “problem specific” and can reduce cycle time.</p>
<p>In summary, in the light of both planned and unplanned iteration, as well as technical uncertainty, the effects of design-space exploration iteration (DEI), process concurrency, and design review timing on process behavior are difficult to estimate due to their dynamic interactions. SD modeling was pioneered by Forrester in the early 1960s and has been increasingly applied to consider questions related to dynamic interactions in PD project management. SD models of development processes employ stock-and-flow constructs (SFCs) to capture process structures. In each construct, flows represent development activities that connect stocks representing the states of development tasks. Conceptually, development tasks are assumed to be identical and interchangeable units of the development work. Each task in the SFC is assumed to require the same effort. Within each SFC, the development tasks are processed by different activities. An activity applied to a task causes that task to obtain a different state, that is, flow from one stock to another. Some tasks may need to be reattempted, that is, reworked, before they can finally be released. The structure of SFCs is complemented in an SD project model with a project environment that includes influencing factors such as project resources, scope, and targets. This separation facilitates the modeling of dynamic interactions between process and project levels (<xref ref-type="bibr" rid="bibr10-1063293X11435177">Ford and Sterman, 1998</xref>).</p>
<p>SD models have been used to model the effect of unknown rework on development processes and to investigate how different resource management policies may influence work quality, thus rework behavior (<xref ref-type="bibr" rid="bibr6-1063293X11435177">Cooper et al., 2002</xref>) SD has also been applied to analyze different rework management policies used to cope with work quality problems and externally triggered changes (<xref ref-type="bibr" rid="bibr24-1063293X11435177">Park and Peña-Mora, 2003</xref>). Other researchers explore how management policies, such as quality assurance policy (<xref ref-type="bibr" rid="bibr1-1063293X11435177">Abdel-Hamid, 1996</xref>), resource allocation policy (<xref ref-type="bibr" rid="bibr17-1063293X11435177">Joglekar and Ford, 2005</xref>), or process concurrency (<xref ref-type="bibr" rid="bibr11-1063293X11435177">Ford and Sterman, 2003a</xref>), may put conditions in place to achieve high work quality. The strength of an iteration-oriented SD model lies in its capability to capture the causal dynamics related to high-level project issues and human aspects that influence iteration behavior.</p>
</sec>
<sec id="section3-1063293X11435177">
<title>Hybrid simulation model of the jet engine design process</title>
<sec id="section4-1063293X11435177">
<title>Model development</title>
<p>Jet engine design was used as a case study to explore the impact of concurrency, exploration iteration, design review, and design problem complexity on design project lead time and error generation. A TN model of the design process was created based on 32 interviews with 27 designers in a major aero-engine manufacturer (see <xref ref-type="bibr" rid="bibr35-1063293X11435177">Wynn, 2007</xref>). Approximately 430 tasks and their interactions were represented using the applied signposting model (<xref ref-type="fig" rid="fig1-1063293X11435177">Figure 1</xref>). The TN model captures many details of the process, including the degree of concurrency in each phase of the design process and the possibilities for iteration. It allows simulation of the process using a discrete-event algorithm to determine the probability distribution of lead time. However, exploring the issues explained in the previous section requires a more dynamic model capturing policies, interactions, and effects, and does not require a detailed task-by-task process description. To perform the analysis, an approach was thus developed to transform essential attributes of the TN model into an SD model similar to that used by <xref ref-type="bibr" rid="bibr10-1063293X11435177">Ford and Sterman (1998)</xref>. The steps that were used to create the SD model are explained in the following.</p>
<fig id="fig1-1063293X11435177" position="float">
<label>Figure 1.</label>
<caption>
<p>TN model of the jet engine development process.</p>
</caption>
<graphic xlink:href="10.1177_1063293X11435177-fig1.tif"/>
</fig>
<list id="list1-1063293X11435177" list-type="simple">
<list-item><p>Step 1: Select construct</p></list-item>
</list>
<p>The basic element of an SD project model is the SFC around which the skeletal structure of a process is built. In this case, the SFC was adopted from <xref ref-type="bibr" rid="bibr10-1063293X11435177">Ford and Sterman (1998)</xref>, with the difference that no “approve task” rate and hence no “tasks approved” stock was included. The rationale for this change is that when TN model tasks are converted into SD model development tasks, they become generic “work packages” (WPs) of uniform size. These tasks are processed by development activities that require resources. Therefore, the first time at which an SD task enters the <italic>Completion stock</italic> corresponds to the first time the equivalent task is completed in the TN model. The time at which an SD task enters a <italic>rework</italic> stock corresponds to the time at which the equivalent task in the TN model begins an iteration. However, the “approve task” structures in <xref ref-type="bibr" rid="bibr10-1063293X11435177">Ford and Sterman (1998)</xref> do not directly correspond to any event in the lifecycle of a TN model task. Therefore, the model discussed here does not include these structures.</p>
<list id="list2-1063293X11435177" list-type="simple">
<list-item><p>Step 2: Create structure of constructs</p></list-item>
</list>
<p>In <xref ref-type="bibr" rid="bibr10-1063293X11435177">Ford and Sterman’s (1998)</xref> model, each SFC represents a specific process phase. In this model, each of the four phases of the case study process shown in the TN model of <xref ref-type="fig" rid="fig1-1063293X11435177">Figure 1</xref> was modeled as an SFC. This structure is shown in <xref ref-type="fig" rid="fig2-1063293X11435177">Figure 2</xref>.</p>
<fig id="fig2-1063293X11435177" position="float">
<label>Figure 2.</label>
<caption>
<p>Four-phase SD model of the jet engine development process.</p>
</caption>
<graphic xlink:href="10.1177_1063293X11435177-fig2.tif"/>
</fig>
<list id="list3-1063293X11435177" list-type="simple">
<list-item><p>Step 3: Define process variables and policies</p></list-item>
</list>
<p>Having built the SFC structure, the next step was to define relevant variables and management policies. According to <xref ref-type="bibr" rid="bibr10-1063293X11435177">Ford and Sterman (1998)</xref>, the essential variables in an iterative project encompass resource quantity and efficiency, and phase and project scopes. Essential management policies may feature resource management, work scheduling and deadlines, quality, and budget target setting. In this case study, the essential process variables included, among others, <italic>design complexity</italic>, <italic>total resource</italic>, and <italic>quality requirement</italic>. The three management levers discussed in section “Introduction” could then be assigned different values in order to analyze their potential influences on iteration behavior. One of the main mechanisms regulating a phase’s progress is the <italic>progress rate</italic>. In the SD model, this flow was identified as the bottleneck. Thus, the rate was modeled to be influenced by the elements <italic>internal process concurrence relationship (IPCR)</italic>, <italic>allocated resource</italic>, and <italic>work efficiency</italic> or <italic>schedule pressure</italic>.</p>
<list id="list4-1063293X11435177" list-type="simple">
<list-item><p>Step 4: Create influence structures</p></list-item>
</list>
<p>The mapping of relationships between process variables, the course of progress and management policies, work productivity and quality is the basic aspect of modeling project dynamics in SD . Influence structures were therefore created to link the variables and policies with SFC elements. Based on the understanding of the PD process that was developed through creation and study of the TN model, the influences of DEI, process concurrency, and design review timing on <italic>work quality</italic>, thus <italic>error generation</italic> and iteration behavior of the process were modeled. These influence structures are shown in the SD model of <xref ref-type="fig" rid="fig2-1063293X11435177">Figure 2</xref>. For instance, the <italic>number of planned iteration 1</italic> determines the number of <italic>design review 1</italic>, which, with each review, increases <italic>design confidence 1</italic> and thus <italic>work quality 2</italic>, leading to lower <italic>error generation 2</italic>. Each phase was modeled similarly, except for phase 1. Because this phase represents conceptual design, a learning effect to cause improved work efficiency as the concept is built up was incorporated. This does not occur in later phases of the model.</p>
<p>The equations used to model interactions in the influence structure are shown in <xref ref-type="table" rid="table1-1063293X11435177">Table 1</xref>.</p>
<table-wrap id="table1-1063293X11435177" position="float">
<label>Table 1</label>
<caption>
<p>Influences on work quality and iteration behavior</p>
</caption>
<graphic alternate-form-of="table1-1063293X11435177" xlink:href="10.1177_1063293X11435177-table1.tif"/>
<table>
<colgroup>
<col align="left"/>
<col align="left"/>
<col align="left"/>
</colgroup>
<thead>
<tr>
<th align="left">Model element</th>
<th align="left">Interaction(s) modeled</th>
<th align="left">Mathematical function</th>
</tr>
</thead>
<tbody>
<tr>
<td>Design Confidence</td>
<td>Confidence increases with design reviews completed;<break/>Design complexity slows down confidence build-up</td>
<td>= <inline-formula id="inline-formula1-1063293X11435177">
<mml:math display="inline" id="math1-1063293X11435177">
<mml:mn>1</mml:mn>
<mml:mo>−</mml:mo>
<mml:msup>
<mml:mi>e</mml:mi>
<mml:mrow>
<mml:mo>−</mml:mo>
<mml:mo stretchy="false">(</mml:mo>
<mml:mfrac>
<mml:mrow>
<mml:mi>D</mml:mi>
<mml:mi>e</mml:mi>
<mml:mi>s</mml:mi>
<mml:mi>i</mml:mi>
<mml:mi>g</mml:mi>
<mml:mi>n</mml:mi>
<mml:mi>R</mml:mi>
<mml:mi>e</mml:mi>
<mml:mi>v</mml:mi>
<mml:mi>i</mml:mi>
<mml:mi>e</mml:mi>
<mml:mi>w</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>D</mml:mi>
<mml:mi>e</mml:mi>
<mml:mi>s</mml:mi>
<mml:mi>i</mml:mi>
<mml:mi>g</mml:mi>
<mml:mi>n</mml:mi>
<mml:mi>C</mml:mi>
<mml:mi>o</mml:mi>
<mml:mi>m</mml:mi>
<mml:mi>p</mml:mi>
<mml:mi>l</mml:mi>
<mml:mi>e</mml:mi>
<mml:mi>x</mml:mi>
<mml:mi>i</mml:mi>
<mml:mi>t</mml:mi>
<mml:mi>y</mml:mi>
</mml:mrow>
</mml:mfrac>
<mml:mo stretchy="false">)</mml:mo>
</mml:mrow>
</mml:msup>
</mml:math>
</inline-formula></td>
</tr>
<tr>
<td>Work Efficiency Improvement</td>
<td>Work efficiency increases with design confidence</td>
<td>= <italic>c*DesignConfidence</italic><break/><italic>c</italic> determined by process experts to represent the incremental improvement with each design review</td>
</tr>
<tr>
<td>Design Quality</td>
<td>Quality correlates to the flawless work completed</td>
<td>= <italic>WorkDone</italic></td>
</tr>
<tr>
<td>Work Quality Improvement</td>
<td>Work quality improvement progresses with design reviews completed;<break/>Design complexity slows down work quality improvement’s progress</td>
<td>= <inline-formula id="inline-formula2-1063293X11435177">
<mml:math display="inline" id="math2-1063293X11435177">
<mml:mn>1</mml:mn>
<mml:mo>−</mml:mo>
<mml:msup>
<mml:mi>e</mml:mi>
<mml:mrow>
<mml:mo>−</mml:mo>
<mml:mo stretchy="false">(</mml:mo>
<mml:mfrac>
<mml:mrow>
<mml:mi>D</mml:mi>
<mml:mi>e</mml:mi>
<mml:mi>s</mml:mi>
<mml:mi>i</mml:mi>
<mml:mi>g</mml:mi>
<mml:mi>n</mml:mi>
<mml:mi>R</mml:mi>
<mml:mi>e</mml:mi>
<mml:mi>v</mml:mi>
<mml:mi>i</mml:mi>
<mml:mi>e</mml:mi>
<mml:mi>w</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>D</mml:mi>
<mml:mi>e</mml:mi>
<mml:mi>s</mml:mi>
<mml:mi>i</mml:mi>
<mml:mi>g</mml:mi>
<mml:mi>n</mml:mi>
<mml:mi>C</mml:mi>
<mml:mi>o</mml:mi>
<mml:mi>m</mml:mi>
<mml:mi>p</mml:mi>
<mml:mi>l</mml:mi>
<mml:mi>e</mml:mi>
<mml:mi>x</mml:mi>
<mml:mi>i</mml:mi>
<mml:mi>t</mml:mi>
<mml:mi>y</mml:mi>
</mml:mrow>
</mml:mfrac>
<mml:mo stretchy="false">)</mml:mo>
</mml:mrow>
</mml:msup>
</mml:math>
</inline-formula></td>
</tr>
<tr>
<td>Work Quality</td>
<td>Schedule pressure lowers work quality;<break/>Work quality improvement positively affects work quality;<break/>Design confidence or design quality (according to the phase) increases work quality;<break/>Undiscovered rework decreases work quality</td>
<td>= <inline-formula id="inline-formula3-1063293X11435177">
<mml:math display="inline" id="math3-1063293X11435177">
<mml:mi>c</mml:mi>
<mml:mn>1</mml:mn>
<mml:mo>*</mml:mo>
<mml:mo stretchy="false">(</mml:mo>
<mml:mfrac>
<mml:mn>1</mml:mn>
<mml:mrow>
<mml:mi>S</mml:mi>
<mml:mi>c</mml:mi>
<mml:mi>h</mml:mi>
<mml:mi>e</mml:mi>
<mml:mi>d</mml:mi>
<mml:mi>u</mml:mi>
<mml:mi>l</mml:mi>
<mml:mi>e</mml:mi>
<mml:mspace width="0.25em"/>
<mml:mi>P</mml:mi>
<mml:mi>r</mml:mi>
<mml:mi>e</mml:mi>
<mml:mi>s</mml:mi>
<mml:mi>s</mml:mi>
<mml:mi>u</mml:mi>
<mml:mi>r</mml:mi>
<mml:mi>e</mml:mi>
</mml:mrow>
</mml:mfrac>
<mml:mo stretchy="false">)</mml:mo>
</mml:math>
</inline-formula><break/><italic>+c2</italic>*<italic>(WorkQualityImprovement)</italic><break/>+<italic>c3</italic>*<italic>([DesignConfidence</italic> or <italic>DesignQuality, according to the phase])</italic><break/>+<inline-formula id="inline-formula4-1063293X11435177">
<mml:math display="inline" id="math4-1063293X11435177">
<mml:mi>c</mml:mi>
<mml:mn>4</mml:mn>
<mml:mo>*</mml:mo>
<mml:mo stretchy="false">(</mml:mo>
<mml:mn>1</mml:mn>
<mml:mo>−</mml:mo>
<mml:mfrac>
<mml:mrow>
<mml:mi>U</mml:mi>
<mml:mi>n</mml:mi>
<mml:mi>d</mml:mi>
<mml:mi>i</mml:mi>
<mml:mi>s</mml:mi>
<mml:mi>c</mml:mi>
<mml:mi>o</mml:mi>
<mml:mi>v</mml:mi>
<mml:mi>e</mml:mi>
<mml:mi>r</mml:mi>
<mml:mi>e</mml:mi>
<mml:mi>d</mml:mi>
<mml:mi>R</mml:mi>
<mml:mi>e</mml:mi>
<mml:mi>w</mml:mi>
<mml:mi>o</mml:mi>
<mml:mi>r</mml:mi>
<mml:mi>k</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>P</mml:mi>
<mml:mi>h</mml:mi>
<mml:mi>a</mml:mi>
<mml:mi>s</mml:mi>
<mml:mi>e</mml:mi>
<mml:mi>S</mml:mi>
<mml:mi>c</mml:mi>
<mml:mi>o</mml:mi>
<mml:mi>p</mml:mi>
<mml:mi>e</mml:mi>
</mml:mrow>
</mml:mfrac>
<mml:mo stretchy="false">)</mml:mo>
</mml:math>
</inline-formula><break/><italic>c1,c2, c3</italic> and <italic>c4</italic> determined by process experts to represent the relative weight of each influence,<break/>with <italic>c1</italic>+<italic>c2</italic>+<italic>c3</italic>+<italic>c4</italic> = 1</td>
</tr>
<tr>
<td>Flawless Work</td>
<td>Amount of flawless work determined by work quality</td>
<td>= <italic>WorkQuality</italic></td>
</tr>
<tr>
<td>Error Generation</td>
<td>Errors decrease as work quality increases</td>
<td>= 1 - <italic>WorkQuality</italic></td>
</tr>
</tbody>
</table>
</table-wrap>
<list id="list5-1063293X11435177" list-type="simple">
<list-item><p>Step 5: Define concurrence relationships</p></list-item>
</list>
<p>The IPCR in SD project models determines how many tasks can be performed concurrently during each time period of a project. In the TN model, it is related to the structure of dependencies between tasks. To derive SD IPCRs from the TN dependencies, a number of steps were followed for each of the four TN phases:</p>
<list id="list6-1063293X11435177" list-type="order">
<list-item><p>TN tasks were broken down into smaller units such that each task in the phase had the same average duration. The total number of development tasks in each SD phase (the phase scope) was set to equal the sum of individual tasks’ durations in the corresponding TN model phase.</p></list-item>
<list-item><p>The TN model phase was evaluated using discrete-event simulation (DES), resulting in a single schedule for phase execution. The DES assumed that no constraints were placed on task execution except task dependency relationships. No iteration was considered, ensuring that it would not be counted twice when iteration takes place in the SD model. This schedule can be visualized as a Gantt chart depicting each task along with its start and completion time. These task details were used to determine the individual number of development tasks accomplished in each successive time period of the phase, which was used to calculate the overall cumulative progress at that point in time. The change in cumulative development tasks overtime is equivalent to a phase completion profile and thus to the IPCR in the SD model. Each of the four TN model phases was considered separately in order to derive an individual <italic>IPCR</italic> for the corresponding SD model phase.</p></list-item>
</list>
<p>External process concurrence relationships (EPCRs) in the SD model represent high-level overlapping relationships between different process phases. The EPCR connecting two consecutive phases defines the percentage completion of the upstream phase at which the downstream phase will start. In <xref ref-type="fig" rid="fig2-1063293X11435177">Figure 2</xref>, <italic>EPCRs</italic> regulate the start of Phases 2, 3, and 4. In the baseline case, the four phases were configured to execute sequentially, that is, <italic>EPCRs</italic> were defined to allow Phases 2, 3, and 4 to start only when their respective predecessor phase had achieved the predefined <italic>design confidence</italic> and <italic>design quality</italic>. In the simulation experiments discussed in the next section, <italic>EPCRs</italic> were adjusted to allow Phases 2, 3, and 4 to start at different levels of <italic>design confidence</italic> and <italic>quality</italic>. This allowed investigation of the influence of concurrency on the process.</p>
<list id="list7-1063293X11435177" list-type="simple">
<list-item><p>Step 6: Calibrate iteration</p></list-item>
</list>
<p>The TN model used to create the SD process structure also included information on iteration, in particular the detail on when iteration might be discovered and what its potential impact across process phases would be. In Phase 1 of the jet engine design process model, the time spent on DEI is a management policy that could be altered if it led to a more effective process. In Phases 2, 3, and 4, the need for rework iteration depends on whether the level of <italic>design quality</italic> satisfies a prespecified <italic>quality requirement</italic>. The level of <italic>design quality</italic> increases with the amount of <italic>flawless work</italic>. This in turn depends on the <italic>work quality</italic>. Iteration takes place only when the project is reviewed.</p>
</sec>
<sec id="section5-1063293X11435177">
<title>Model Evaluation</title>
<p>According to <xref ref-type="bibr" rid="bibr3-1063293X11435177">Barlas (1996)</xref>, an SD model should be evaluated against structural and behavioral characteristics of the process it represents. In this case, the model was created by building on Ford and Sterman’s established PD project modeling framework (<xref ref-type="bibr" rid="bibr10-1063293X11435177">Ford and Sterman, 1998</xref>). The structure was based on a model of the PD process as carried out at the aircraft engine manufacturer. It also reflects a typical stage-gate PD process as commonly employed in practice and described in the literature (e.g. <xref ref-type="bibr" rid="bibr10-1063293X11435177">Ford and Sterman, 1998</xref>; <xref ref-type="bibr" rid="bibr23-1063293X11435177">Pahl and Beitz, 1996</xref>; <xref ref-type="bibr" rid="bibr30-1063293X11435177">Roemer et al., 2000</xref>). The modeling of influencing structures was based based on both PD literature and discussions with company personnel. The iteration-intensive character of the model reflects the PD process of many large-scale engineering products that are based on high technology and subject to rigorous safety requirements (<xref ref-type="bibr" rid="bibr6-1063293X11435177">Cooper et al., 2002</xref>; <xref ref-type="bibr" rid="bibr32-1063293X11435177">Smith and Eppinger, 1995</xref>) where design space exploration, design review, and process concurrency play an important role in the process (Eisenhardt and Tabrizi1995; <xref ref-type="bibr" rid="bibr14-1063293X11435177">Handfield, 1994</xref>; <xref ref-type="bibr" rid="bibr13-1063293X11435177">Ha and Porteus, 1995</xref>). Therefore, the literature and empirical data lend confidence that the SD model captures the structural details and interactions relevant to the analysis at hand.</p>
<p>To evaluate the behavior of the SD model, it was compared to the original TN model that had been created through interviews and verified with feedback to process participants. <xref ref-type="fig" rid="fig3-1063293X11435177">Figure 3(a)</xref> depicts the planned project progress resulting from DES of the original TN model and the planned progress resulting from the SD model simulation. The profiles show that the SD model delivers an almost identical progress compared to the TN model (see <xref ref-type="fig" rid="fig3-1063293X11435177">Figure 3(b)</xref>). The SD model was hence determined to adequately reflect the process behavior, at least under its default configuration.</p>
<fig id="fig3-1063293X11435177" position="float">
<label>Figure 3.</label>
<caption>
<p>Comparison of TN and SD simulation results.</p>
</caption>
<graphic xlink:href="10.1177_1063293X11435177-fig3.tif"/>
</fig>
</sec>
</sec>
<sec id="section6-1063293X11435177">
<title>Analysis of the jet engine design process</title>
<p>The SD model was used to undertake two forms of analysis: (a) for exploring the influence of the three management levers on lead time and design errors and (b) for exploring the implications of design problem complexity upon the combination of levers that should be used.</p>
<sec id="section7-1063293X11435177">
<title>How do the management levers influence process performance?</title>
<p>Simulations were run to explore how design errors and lead time respond to changes in (a) DEI in Phase 1, (b) process concurrency between process phases, and (c) timing of the first design review in Phase 2. DEI in the preliminary design phase explores the design problem and solution space in search for alternative solutions that may meet design requirements. Process concurrency is interpreted as the extent to which a downstream phase may start before its predecessor phase has reached the target design confidence level, which increases with each design review. The timing of the first design review in Phase 2 is defined as the time at which the first review on the implementation of concepts from the preliminary design is scheduled to take place, relative to the progress of its phase.</p>
<p>The simulation results are shown in <xref ref-type="fig" rid="fig4-1063293X11435177">Figure 4</xref>. This illustrates how DEI, process concurrency, and design review timing can influence design error generation and project lead time. These influences, naturally, occur simultaneously in PD processes and may interact such that their combined effects are difficult to estimate. <xref ref-type="fig" rid="fig4-1063293X11435177">Figure 4</xref> thus illustrates process performance sensitivity (a) to alteration of a single variable while the other two stay constant at their baseline values, that is, an isolated view and (b) to alteration of one variable while the other two are set to their maximum values, that is, an inclusive view. The maximum values for DEI, process concurrency, and the first design review advancing are six iteration cycles, medium concurrency, and 50% of progressed phase, respectively. No concurrency means that a downstream phase only starts when its predecessor phase has reached its target design confidence level. Medium concurrency means that a downstream phase can start when its predecessor phase has reached a design confidence level that allows designers to appreciate the scope of the remaining work with certainty. In the case study, this was set to be equal or above 70% of the target level. Low concurrency was set to be equal or above 85%. The following insights were obtained:</p>
<list id="list8-1063293X11435177" list-type="order">
<list-item><p>More DEI results in less design errors and longer lead time, with the impact being generally diminishing (<xref ref-type="fig" rid="fig4-1063293X11435177">Figure 4(a)</xref>). Error generation is more sensitive to DEI than lead time. Between isolated and inclusive views, there is little difference in sensitivity, apart from the case of three iteration cycles where the inclusive view reveals greater impact of DEI on error and lead time.</p></list-item>
<list-item><p>Greater process concurrency results in more design errors and shorter lead time (<xref ref-type="fig" rid="fig4-1063293X11435177">Figure 4(b)</xref>). For both values of concurrency that were evaluated, the impact on both error increase and lead time reduction significantly diminishes when taking the inclusive view.</p></list-item>
<list-item><p>Performing the first design review of Phase 2 earlier leads to error reduction, with a significant difference between the isolated and inclusive views in the case of 25% advance in timing (<xref ref-type="fig" rid="fig4-1063293X11435177">Figure 4(c)</xref>). For lead time, the impact of advancing design review shown by the isolated view is insignificant compared to the impact shown by the inclusive view, where the effect even changes from positive to negative (i.e. lead time is reduced instead of increased).</p></list-item>
</list>
<fig id="fig4-1063293X11435177" position="float">
<label>Figure 4.</label>
<caption>
<p>Influences of management levers on lead time and design errors.[TS: Globally change “1st” to “First”, change all hyphens before numerals to minus symbol, and use em-dash as parenthetical dash (i.e., change Lead time – Isolated view” to Lead time—Isolated view”) in the artworks.]</p>
</caption>
<graphic xlink:href="10.1177_1063293X11435177-fig4.tif"/>
</fig>
<p>The results suggest that a comprehensive analysis considering multiple factors is indispensible in gaining a thorough understanding of their effects on process performance. Another experiment was thus undertaken allowing all three independent variables to vary in combination. <xref ref-type="fig" rid="fig5-1063293X11435177">Figure 5(a)</xref> depicts the result. All values of the five variables (as shown on the <italic>x</italic>-axes in <xref ref-type="fig" rid="fig4-1063293X11435177">Figure 4</xref>) are normalized to their minimum and maximum values. <xref ref-type="fig" rid="fig5-1063293X11435177">Figure 5(a)</xref> illustrates the distribution of dependent variable values. For the independent variable <italic>exploration iteration</italic>, the normalized values 0 and 1 correspond to two and six DEI cycles, respectively. For the independent variable <italic>process concurrency</italic>, the normalized values 0 and 1 correspond to no concurrency and medium concurrency, respectively. For the independent variable <italic>first design review timing</italic>, the normalized values 0 and 1, respectively, correspond to 50% progression and 100% progression (i.e. no advancing of the <italic>first design review</italic>) Phase 2. <xref ref-type="fig" rid="fig5-1063293X11435177">Figure 5(a)</xref> highlights a trade-off between design errors and lead time, wherein a low error value is associated with a high lead time value and <italic>vice versa</italic>. Some pairs of dependent variables have relatively low design errors and lead time, representing “good processes.” To find these combinations in the case study, the simulation results were explored using filter functions—visualized as dotted rectangles covering the lower 30% in <xref ref-type="fig" rid="fig5-1063293X11435177">Figure 5(b)</xref>. This filtering left only two combinations of independent variable values that lead to dependent variable values that satisfy the filter specifications. In this case, the combination that includes the <italic>process concurrency</italic> value set to 0.5 (the lower line) is a better choice if both lead time and errors are to be minimized. In this combination, the simulated value of <italic>design errors</italic> is significantly lower than that resulting from the other configuration, with little difference in lead time.</p>
<fig id="fig5-1063293X11435177" position="float">
<label>Figure 5.</label>
<caption>
<p>Combined influences of management levers.</p>
</caption>
<graphic xlink:href="10.1177_1063293X11435177-fig5.tif"/>
</fig>
<p>These results suggest that DEI need not be conducted extensively and that low process concurrency is needed to achieve good process performance, while the first design review in Phase 2 should take place early.</p>
</sec>
<sec id="section8-1063293X11435177">
<title>How can increases in design problem complexity be managed?</title>
<p>One of the conditions leading to the previous results was that the complexity of the design problem was assumed to be “low.” This allows confidence in the design—and thus quality—to be built up quickly. However, the design problem can become more complex if it involves more radical concepts, for instance incorporating new technologies or using more tightly interwoven system components. Understanding the implications of an increase in design problem complexity can help managers to appropriately alter original project schedules and/or resource requirements, thereby avoiding the negative consequences of resource shortage such as the need to work overtime.</p>
<p>An analysis was therefore conducted to investigate how the most-favorable management policies may change with design problem complexity. The results, summarized in <xref ref-type="fig" rid="fig6-1063293X11435177">Figure 6</xref>, suggest that as the design problem becomes more complex, more exploration iteration and a higher degree of process concurrency is favored, whereas the optimal timing of the first design review in Phase 2 stays the same. More specifically, the best values of DEI are 1 and 0.75 for medium and low complexity, respectively, while the optimal process concurrency equals 1 for both situations (recalling that the values are normalized). This shift of the “best” combinations of independent variable values can be explained through an analysis of the simulation results presented in <xref ref-type="table" rid="table2-1063293X11435177">Table 2</xref> and discussed in the following.</p>
<fig id="fig6-1063293X11435177" position="float">
<label>Figure 6.</label>
<caption>
<p>“Optimal” management levers for different design problem complexities.</p>
</caption>
<graphic xlink:href="10.1177_1063293X11435177-fig6.tif"/>
</fig>
<table-wrap id="table2-1063293X11435177" position="float">
<label>Table 2</label>
<caption>
<p>Average incremental impact of management action on lead time and design error</p>
</caption>
<graphic alternate-form-of="table2-1063293X11435177" xlink:href="10.1177_1063293X11435177-table2.tif"/>
<table>
<colgroup>
<col align="left"/>
<col align="left"/>
<col align="char" char="."/>
<col align="char" char="."/>
<col align="char" char="."/>
<col align="char" char="."/>
<col align="char" char="."/>
<col align="char" char="."/>
</colgroup>
<thead>
<tr>
<th align="left" colspan="2">Management action</th>
<th align="left" colspan="2">Low-complexity case</th>
<th align="left" colspan="2">Medium-complexity case</th>
<th align="left" colspan="2">High-complexity case</th>
</tr>
<tr>
<th colspan="2"/>
<th align="left">Impact on lead time (%)</th>
<th align="left">Impact on error (%)</th>
<th align="left">Impact on lead time (%)</th>
<th align="left">Impact on error (%)</th>
<th align="left">Impact on lead time (%)</th>
<th align="left">Impact on error (%)</th>
</tr>
</thead>
<tbody>
<tr>
<td>Exploration iteration</td>
<td><inline-formula id="inline-formula5-1063293X11435177">
<mml:math display="inline" id="math5-1063293X11435177">
<mml:mrow>
<mml:mn>3</mml:mn>
<mml:mo stretchy="false">(</mml:mo>
<mml:mover>
<mml:mrow>
<mml:mo>=</mml:mo>
</mml:mrow>
<mml:mrow>
<mml:mo>∧</mml:mo>
</mml:mrow>
</mml:mover>
<mml:mn>0</mml:mn>
<mml:mo>.</mml:mo>
<mml:mn>25</mml:mn>
<mml:mo stretchy="false">)</mml:mo>
</mml:mrow>
</mml:math>
</inline-formula>
</td>
<td>4.4</td>
<td>−19.7</td>
<td>2.9</td>
<td>−18.7</td>
<td>1.9</td>
<td>−16.0</td>
</tr>
<tr>
<td/>
<td><inline-formula id="inline-formula6-1063293X11435177">
<mml:math display="inline" id="math6-1063293X11435177">
<mml:mrow>
<mml:mn>4</mml:mn>
<mml:mo stretchy="false">(</mml:mo>
<mml:mover>
<mml:mrow>
<mml:mo>=</mml:mo>
</mml:mrow>
<mml:mrow>
<mml:mo>∧</mml:mo>
</mml:mrow>
</mml:mover>
<mml:mn>0</mml:mn>
<mml:mo>.</mml:mo>
<mml:mn>5</mml:mn>
<mml:mo stretchy="false">)</mml:mo>
</mml:mrow>
</mml:math>
</inline-formula>
</td>
<td>0.8</td>
<td>−11.6</td>
<td>1.8</td>
<td>−13.1</td>
<td>0.8</td>
<td>−12.6</td>
</tr>
<tr>
<td/>
<td><inline-formula id="inline-formula7-1063293X11435177">
<mml:math display="inline" id="math7-1063293X11435177">
<mml:mrow>
<mml:mn>5</mml:mn>
<mml:mo stretchy="false">(</mml:mo>
<mml:mover>
<mml:mrow>
<mml:mo>=</mml:mo>
</mml:mrow>
<mml:mrow>
<mml:mo>∧</mml:mo>
</mml:mrow>
</mml:mover>
<mml:mn>0</mml:mn>
<mml:mo>.</mml:mo>
<mml:mn>75</mml:mn>
<mml:mo stretchy="false">)</mml:mo>
</mml:mrow>
</mml:math>
</inline-formula>
</td>
<td>5.9</td>
<td>−9.8</td>
<td>3.4</td>
<td>−11.4</td>
<td>1.5</td>
<td>−10.3</td>
</tr>
<tr>
<td/>
<td><inline-formula id="inline-formula8-1063293X11435177">
<mml:math display="inline" id="math8-1063293X11435177">
<mml:mrow>
<mml:mn>6</mml:mn>
<mml:mo stretchy="false">(</mml:mo>
<mml:mover>
<mml:mrow>
<mml:mo>=</mml:mo>
</mml:mrow>
<mml:mrow>
<mml:mo>∧</mml:mo>
</mml:mrow>
</mml:mover>
<mml:mn>1</mml:mn>
<mml:mo stretchy="false">)</mml:mo>
</mml:mrow>
</mml:math>
</inline-formula>
</td>
<td>3.4</td>
<td>−8.1</td>
<td>−0.3</td>
<td>−4.5</td>
<td>2.2</td>
<td>−6.7</td>
</tr>
<tr>
<td>Process concurrence</td>
<td><inline-formula id="inline-formula9-1063293X11435177">
<mml:math display="inline" id="math9-1063293X11435177">
<mml:mrow>
<mml:mtext>Low</mml:mtext>
<mml:mspace width="0.25em"/>
<mml:mo stretchy="false">(</mml:mo>
<mml:mover>
<mml:mrow>
<mml:mo>=</mml:mo>
</mml:mrow>
<mml:mrow>
<mml:mo>∧</mml:mo>
</mml:mrow>
</mml:mover>
<mml:mn>0</mml:mn>
<mml:mo>.</mml:mo>
<mml:mn>5</mml:mn>
<mml:mo stretchy="false">)</mml:mo>
</mml:mrow>
</mml:math>
</inline-formula>
</td>
<td>−7.4</td>
<td>4.2</td>
<td>−5.7</td>
<td>3.4</td>
<td>−2.6</td>
<td>1.9</td>
</tr>
<tr>
<td/>
<td><inline-formula id="inline-formula10-1063293X11435177">
<mml:math display="inline" id="math10-1063293X11435177">
<mml:mrow>
<mml:mtext>Medium</mml:mtext>
<mml:mspace width="0.25em"/>
<mml:mo stretchy="false">(</mml:mo>
<mml:mover>
<mml:mrow>
<mml:mo>=</mml:mo>
</mml:mrow>
<mml:mrow>
<mml:mo>∧</mml:mo>
</mml:mrow>
</mml:mover>
<mml:mn>1</mml:mn>
<mml:mo stretchy="false">)</mml:mo>
</mml:mrow>
</mml:math>
</inline-formula>
</td>
<td>−10.9</td>
<td>18.7</td>
<td>−11.2</td>
<td>15.4</td>
<td>−5.0</td>
<td>2.8</td>
</tr>
</tbody>
</table>
<table-wrap-foot>
<fn id="table-fn1-1063293X11435177">
<p>Gray-shaded fields: impact of preferred management action in different complexity cases</p>
</fn>
</table-wrap-foot>
</table-wrap>
<p>Compared to the case of low complexity, more DEI is required to build up design confidence and thus to keep the level of design errors low enough to meet the design error filter specification. In the case of medium complexity, six DEI cycles are prefered. Compared to five cycles, the additional impacts on design errors and lead time are an average reduction of 4.5 and 0.3%, respectively. In the case of high complexity, five DEI cycles are preferred to six cycles as an additional cycle would yield comparatively less reduction in design errors—that is, 6.7% compared to 10.3%—while causing another 2.2% increase in lead time, potentially violating the lead time filter specification. The introduction of greater process concurrency—that is, from 0.5 to 1—is necessary as the additional exploration iteration cycles require additional time too. Therefore, an increase in process concurrency is necessary to absorb the delay.</p>
<p>Considering the influences of all the factors in combination, the simulation results suggest that—for the case of low design problem complexity—four DEI cycles, low process concurrency, and the first design review when 50% of Phase 2 is complete—equivalent to 0.5, 0.5, and 0, respectively (<xref ref-type="fig" rid="fig5-1063293X11435177">Figure 5(b)</xref>)—is favored in order to obtain both few design errors and short project lead time. As the design complexity increases, simulation results suggest more DEI cycles and more process concurrency—that is, six and five cycles, and medium process concurrency (<xref ref-type="fig" rid="fig6-1063293X11435177">Figure 6</xref>) — are necessary in order to obtain similar process performance across both objectives.</p>
</sec>
</sec>
<sec id="section9-1063293X11435177" sec-type="discussion">
<title>Discussion</title>
<p>The model analyzed in this article was constructed based on data of a specific development process at an aircraft engine manufacturer. Nevertheless, some of the findings are generalizable to other companies and industries because (1) the structure of the SD model represents a typical phase/stage gate PD process as commonly employed in practice and described in the literature (e.g. <xref ref-type="bibr" rid="bibr2-1063293X11435177">Ahmadi and Wang, 1999</xref>; <xref ref-type="bibr" rid="bibr10-1063293X11435177">Ford and Sterman, 1998</xref>; <xref ref-type="bibr" rid="bibr23-1063293X11435177">Pahl and Beitz, 1996</xref>); and (2) the iteration-intensive character of the process reflects the development of many large-scale engineering products that are based on high technology and subject to rigorous safety requirements (<xref ref-type="bibr" rid="bibr6-1063293X11435177">Cooper et al., 2002</xref>; <xref ref-type="bibr" rid="bibr32-1063293X11435177">Smith and Eppinger, 1995</xref>) where design space exploration, design review, and process concurrency play an important role in the process (Eisenhardt and Tabrizi1995; <xref ref-type="bibr" rid="bibr14-1063293X11435177">Handfield, 1994</xref>; <xref ref-type="bibr" rid="bibr13-1063293X11435177">Ha and Porteus, 1995</xref>). However, findings may have limited generalizability due to the relatively few factors influencing iteration behavior that were included in the model. This was done deliberately to focus on the influence of those issues considered to be most essential. Furthermore, detailed properties characterizing the process structure and describing the mechanism of interactions between model elements are case-specific and thus not necessary applicable to other situations.</p>
<p>Therefore, while the specific numerical findings are specific to the aircraft engine manufacturer, many of the principles and interactions discussed in this article exist in other concurrent engineering contexts, albeit to a greater or lesser degree. In particular, the finding regarding the importance of considering factors in combination is likely to be generalizable to other contexts.</p>
<p>Compared to existing work on process concurrency that uses analytical approaches, such as those of <xref ref-type="bibr" rid="bibr19-1063293X11435177">Krishnan et al. (1997)</xref>, <xref ref-type="bibr" rid="bibr20-1063293X11435177">Loch and Terwiesch (1998)</xref>, <xref ref-type="bibr" rid="bibr29-1063293X11435177">Roemer and Ahmadi (2004)</xref>, or <xref ref-type="bibr" rid="bibr18-1063293X11435177">Kara and Kayis (2007)</xref>, our work differs in the following ways. First, a large process that includes some 400 tasks was analyzed. A new technique was developed to transform the complex TN into an SD modeling environment better suited to explore the dynamic and iteration-intensive characteristics of the process. Second, unlike other articles, the analysis considered planned DEI in combination with process concurrency and design review timing. This allowed more comprehensive representation of dynamic interactions relevant to the jet engine design case and study of their influences on the process performance. Third, the analysis considers variability in design problem complexity, implying how these management levers should be employed in combination to minimize project lead time while keeping design errors in control. The resulting insights can supplement the “concurrent processing” principle described by <xref ref-type="bibr" rid="bibr26-1063293X11435177">Prasad (1999)</xref>.</p>
<p>Compared to existing works on process concurrency that apply SD modeling and simulation, such as those by <xref ref-type="bibr" rid="bibr11-1063293X11435177">Ford and Sterman (2003a</xref>, <xref ref-type="bibr" rid="bibr12-1063293X11435177">2003b</xref>), this work differs in two ways. First, as mentioned already, our analysis includes planned design space exploration and review timing to explore them in combination with process concurrency. We showed that the interactions between process concurrency and iteration, both planned and unplanned, as well as with other management levers require comprehensive analysis to obtain robust insights. Second, since the case study is based in an industry that poses high safety standards, the effect of error generation is treated differently in the model. In <xref ref-type="bibr" rid="bibr11-1063293X11435177">Ford and Sterman’s (2003a)</xref> model, it is assumed that errors can be accepted (to a certain extent) and, hence, the simulated final quality performance depends much on process concurrency levels. In our case, errors are mostly not acceptable, and therefore, error generation results in unplanned iteration. This leads to a diminishing effect of process concurrency on project lead time, because design quality problems associated with process concurrency require iteration. The insights obtained in each article should be applied to the respective process conditions only.</p>
<p>Our analysis suggests several directions for future work. From the SD modeling point of view, results of existing analytical work, such as the information evolution and sensitivity classification in <xref ref-type="bibr" rid="bibr19-1063293X11435177">Krishnan et al. (1997)</xref>, could be incorporated to enhance the SD simulation model. Likewise, resource management policies, such as allocation between projects, could be incorporated as addressed in <xref ref-type="bibr" rid="bibr28-1063293X11435177">Repenning et al. (2001)</xref>. In terms of the model transformation approach applied in this article, further work could explore its potential as an approach to support project analysis. The advantages of this approach are as follows: (1) It is a technique to analyze existing TN models on a dynamic level, and (2) it provides a way to generate process concurrence relationships (PCRs) for building SD models. This might be an improvement to existing approaches because PCRs used in SD models reported in the literature are typically created by asking project members in different positions and with different functional responsibilities to develop an estimate (<xref ref-type="bibr" rid="bibr25-1063293X11435177">Prasad, 1997</xref>). This has two potential drawbacks: First, guesses are subjective as each process participant has his own understanding of the project and its expected rate of progress (<xref ref-type="bibr" rid="bibr11-1063293X11435177">Ford and Sterman, 2003a</xref>). Second, PCRs must typically be created with low resolution, that is, usually at 10% steps. Calculating PCRs directly from details of a TN model helps address these limitations to generate a more accurate simulation.</p>
<p>Compared to the work of <xref ref-type="bibr" rid="bibr24-1063293X11435177">Park and Peña-Mora (2003)</xref>, which also employs TN and SD modeling, our work differs in two main aspects: First, an approach to create an SD model based on a TN model’s details was developed and applied; Second, Park and Peña-Mora applied program evaluation and review technique (PERT) and SD simulation to compare the difference between simulation results in the case of “applying policies in SD” compared to “no policies in PERT,” whereas this article simulates and analyzes in SD. Apart from that, our case study took place in a different industry with different characteristics, which are reflected in the model.</p>
</sec>
<sec id="section10-1063293X11435177" sec-type="conclusions">
<title>Conclusion</title>
<p>In this article, we have transformed the essential attributes of a TN model with approximately 430 tasks into a SD modeling environment. The SD model represents the process on a higher level and allowed modeling and analysis of project dynamics. This facilitated the exploration of how the project may be influenced by three management levers: amount of DEI, phase concurrency, and design review timing. The model transformation technique facilitates a new way of analyzing large TN models by including feedback dynamics and the impact of management policies. This technique could address some of the shortcomings of existing methods to help understand, and hence, manage complex, iteration-intensive, concurrent projects.</p>
<p>Two main insights can be drawn for practitioners. First, DEIs, process concurrency, and design review timing can affect both design error generation (i.e. design quality) and project lead time. When these levers are manipulated simultaneously—as they would be in practice—their effects interact and the combined influence on project lead time is not simply the sum of the individual impacts. The effect of a given lever may be intensified, reduced, or even changed from positive to negative depending on the “settings” for the others. This highlights the need for a comprehensive analysis of influences and effects when analyzing a process.</p>
<p>One way to explore the influence of multiple levers and performance indicators in combination is the parallel coordinates visualization technique that we used in this article. Combined with process simulation, this interactive technique helps develop an understanding for the interaction of multiple influences. It also helps to narrow down the possible management policies to those which give desirable effects across several performance indicators.</p>
<p>The second main insight relates to process behavior when design problem complexity is uncertain or can vary. This can occur during implementation of new technologies where the complexity of the design problem cannot be predicted from the outset of a project. As the analysis results show, more complex design problems require more design exploration iterations in the process. However, when the problem is too complex, it is not necessary beneficial for project lead time to explore the problem and solution space even more extensively. This situation occurs because increased design problem complexity causes more iteration cycles at a later stage in the process anyway. Instead, the process should proceed to the next phase to learn more about the problem when more detailed information of the design concept implementation is available. The results imply that remains beneficial for project lead time while becoming a less critical driver of error generation as design problem complexity increases.</p>
</sec>
</body>
<back>
<ack>
<p>The authors wish to thank Dr. Warren Kerley, Dr. David Wyatt and the anonymous reviewers for their insightful comments. We would also like to thank the Integrated Products and Services (IPAS) researchers including Dr. Udo Pulm and Dr. Claudia Eckert who worked on the original task network model. This work was supported by the UK Engineering and Physical Sciences Research Council and the Cambridge European Trust.</p>
</ack>
<ref-list>
<title>References</title>
<ref id="bibr1-1063293X11435177">
<citation citation-type="journal">
<person-group person-group-type="author">
<name><surname>Abdel-Hamid</surname><given-names>TK</given-names></name>
</person-group> (<year>1996</year>) <article-title>The slippery path to productivity improvement</article-title>. <source>IEEE Software</source> <volume>13</volume>(<issue>4</issue>): <fpage>43</fpage>–<lpage>52</lpage>.</citation>
</ref>
<ref id="bibr2-1063293X11435177">
<citation citation-type="journal">
<person-group person-group-type="author">
<name><surname>Ahmadi</surname><given-names>R</given-names></name>
<name><surname>Wang</surname><given-names>RH</given-names></name>
</person-group> (<year>1999</year>) <article-title>Managing development risk in product design processes</article-title>. <source>Operations Research</source> <volume>47</volume>(<issue>2</issue>): <fpage>235</fpage>–<lpage>246</lpage>.</citation>
</ref>
<ref id="bibr3-1063293X11435177">
<citation citation-type="journal">
<person-group person-group-type="author">
<name><surname>Barlas</surname><given-names>Y</given-names></name>
</person-group> (<year>1996</year>) <article-title>Formal aspects of model validity and validation in system dynamics</article-title>. <source>System Dynamics Review</source> <volume>12</volume>(<issue>3</issue>): <fpage>183</fpage>–<lpage>210</lpage>.</citation>
</ref>
<ref id="bibr4-1063293X11435177">
<citation citation-type="journal">
<person-group person-group-type="author">
<name><surname>Cho</surname><given-names>SH</given-names></name>
<name><surname>Eppinger</surname><given-names>SD</given-names></name>
</person-group> (<year>2005</year>) <article-title>A simulation-based process model for managing complex design projects</article-title>. <source>IEEE Transactions on Engineering Management</source> <volume>52</volume>(<issue>3</issue>): <fpage>316</fpage>–<lpage>328</lpage>.</citation>
</ref>
<ref id="bibr5-1063293X11435177">
<citation citation-type="journal">
<person-group person-group-type="author">
<name><surname>Clarkson</surname><given-names>PJ</given-names></name>
<name><surname>Simons</surname><given-names>C</given-names></name>
<name><surname>Eckert</surname><given-names>C</given-names></name>
</person-group> (<year>2004</year>) <article-title>Predicting change propagation in complex design</article-title>. <source>Journal of Mechanical Design</source> <volume>126</volume>(<issue>5</issue>): <fpage>788</fpage>–<lpage>797</lpage>.</citation>
</ref>
<ref id="bibr6-1063293X11435177">
<citation citation-type="journal">
<person-group person-group-type="author">
<name><surname>Cooper</surname><given-names>KG</given-names></name>
<name><surname>Lyneis</surname><given-names>JM</given-names></name>
<name><surname>Bryant</surname><given-names>BJ</given-names></name>
</person-group> (<year>2002</year>) <article-title>Learning to learn, from past to future</article-title>. <source>Internal Journal of Project Management</source> <volume>20</volume>(<issue>3</issue>): <fpage>213</fpage>–<lpage>219</lpage>.</citation>
</ref>
<ref id="bibr7-1063293X11435177">
<citation citation-type="book">
<person-group person-group-type="author">
<name><surname>Costa</surname><given-names>R</given-names></name>
<name><surname>Sobek</surname><given-names>DK</given-names></name>
</person-group> (<year>2003</year>) <article-title>Iteration in engineering design: inherent and unavoidable or product of choices made?</article-title> In: <source>Proceedings of DETC’03 ASME/DETC</source>, <publisher-loc>Chicago, IL</publisher-loc>, <day>2–6</day> <month>September</month> <year>2003</year>.</citation>
</ref>
<ref id="bibr8-1063293X11435177">
<citation citation-type="journal">
<person-group person-group-type="author">
<name><surname>Denker</surname><given-names>S</given-names></name>
<name><surname>Steward</surname><given-names>DV</given-names></name>
<name><surname>Browning</surname><given-names>TR</given-names></name>
</person-group> (<year>2001</year>) <article-title>Planning concurrency and managing iteration in projects</article-title>. <source>Project Management Journal</source> <volume>32</volume>(<issue>3</issue>): <fpage>31</fpage>–<lpage>38</lpage>.</citation>
</ref>
<ref id="bibr9-1063293X11435177">
<citation citation-type="journal">
<person-group person-group-type="author">
<name><surname>Eisenhardt</surname><given-names>KM</given-names></name>
<name><surname>Tabrizi</surname><given-names>BN</given-names></name>
</person-group> (<year>1995</year>) <article-title>Accelerating adaptive processes—product innovation in the global computer industry</article-title>. <source>Administrative Science Quarterly</source> <volume>40</volume>(<issue>1</issue>): <fpage>84</fpage>–<lpage>110</lpage>.</citation>
</ref>
<ref id="bibr10-1063293X11435177">
<citation citation-type="journal">
<person-group person-group-type="author">
<name><surname>Ford</surname><given-names>DN</given-names></name>
<name><surname>Sterman</surname><given-names>JD</given-names></name>
</person-group> (<year>1998</year>) <article-title>Dynamic modeling of product development processes</article-title>. <source>System Dynamics Review</source> <volume>14</volume>(<issue>1</issue>): <fpage>31</fpage>–<lpage>68</lpage>.</citation>
</ref>
<ref id="bibr11-1063293X11435177">
<citation citation-type="journal">
<person-group person-group-type="author">
<name><surname>Ford</surname><given-names>DN</given-names></name>
<name><surname>Sterman</surname><given-names>JD</given-names></name>
</person-group> (<year>2003a</year>) <article-title>Overcoming the 90% syndrome: iteration management in concurrent development projects</article-title>. <source>Concurrent Engineering: Research and Applications</source> <volume>11</volume>(<issue>3</issue>): <fpage>177</fpage>–<lpage>186</lpage>.</citation>
</ref>
<ref id="bibr12-1063293X11435177">
<citation citation-type="journal">
<person-group person-group-type="author">
<name><surname>Ford</surname><given-names>DN</given-names></name>
<name><surname>Sterman</surname><given-names>JD</given-names></name>
</person-group> (<year>2003b</year>) <article-title>The Liar’s club: concealing rework in concurrent development</article-title>. <source>Concurrent Engineering: Research and Applications</source> <volume>11</volume>(<issue>3</issue>): <fpage>211</fpage>–<lpage>219</lpage>.</citation>
</ref>
<ref id="bibr13-1063293X11435177">
<citation citation-type="journal">
<person-group person-group-type="author">
<name><surname>Ha</surname><given-names>AY</given-names></name>
<name><surname>Porteus</surname><given-names>EL</given-names></name>
</person-group> (<year>1995</year>) <article-title>Optimal timing of reviews in concurrent design for manufacturability</article-title>. <source>Management Science</source> <volume>41</volume>(<issue>9</issue>): <fpage>1431</fpage>–<lpage>1447</lpage>.</citation>
</ref>
<ref id="bibr14-1063293X11435177">
<citation citation-type="journal">
<person-group person-group-type="author">
<name><surname>Handfield</surname><given-names>RB</given-names></name>
</person-group> (<year>1994</year>) <article-title>Effects of concurrent engineering on make-to-order products</article-title>. <source>IEEE Transactions on Engineering Management</source> <volume>41</volume>(<issue>4</issue>): <fpage>384</fpage>–<lpage>393</lpage>.</citation>
</ref>
<ref id="bibr15-1063293X11435177">
<citation citation-type="journal">
<person-group person-group-type="author">
<name><surname>Hoedemaker</surname><given-names>GM</given-names></name>
<name><surname>Blackburn</surname><given-names>JD</given-names></name>
<name><surname>Van Wassenhove</surname><given-names>LN</given-names></name>
</person-group> (<year>1999</year>) <article-title>Limits to concurrency</article-title>. <source>Decision Sciences</source> <volume>30</volume>(<issue>1</issue>): <fpage>1</fpage>–<lpage>18</lpage>.</citation>
</ref>
<ref id="bibr16-1063293X11435177">
<citation citation-type="journal">
<person-group person-group-type="author">
<name><surname>Jarrett</surname><given-names>JP</given-names></name>
<name><surname>Dawes</surname><given-names>WN</given-names></name>
<name><surname>Clarkson</surname><given-names>PJ</given-names></name>
</person-group> (<year>2007</year>) <article-title>An approach to integrated multi-disciplinary turbomachinery design</article-title>. <source>Journal of Turbomachinery</source> <volume>129</volume>(<issue>3</issue>): <fpage>488</fpage>–<lpage>494</lpage>.</citation>
</ref>
<ref id="bibr17-1063293X11435177">
<citation citation-type="journal">
<person-group person-group-type="author">
<name><surname>Joglekar</surname><given-names>NR</given-names></name>
<name><surname>Ford</surname><given-names>DN</given-names></name>
</person-group> (<year>2005</year>) <article-title>Product development resource allocation with foresight</article-title>. <source>European Journal of Operational Research</source> <volume>160</volume>(<issue>1</issue>): <fpage>72</fpage>–<lpage>87</lpage>.</citation>
</ref>
<ref id="bibr18-1063293X11435177">
<citation citation-type="journal">
<person-group person-group-type="author">
<name><surname>Kara</surname><given-names>S</given-names></name>
<name><surname>Kayis</surname><given-names>B</given-names></name>
</person-group> (<year>2007</year>) <article-title>The effect of uncertainty and resource constraints on concurrent engineering projects</article-title>. <source>International Journal of Simulation and Process Modelling</source> <volume>3</volume>(<issue>3</issue>): <fpage>127</fpage>–<lpage>133</lpage>.</citation>
</ref>
<ref id="bibr19-1063293X11435177">
<citation citation-type="journal">
<person-group person-group-type="author">
<name><surname>Krishnan</surname><given-names>V</given-names></name>
<name><surname>Eppinger</surname><given-names>SD</given-names></name>
<name><surname>Whitney</surname><given-names>DE</given-names></name>
</person-group> (<year>1997</year>) <article-title>A model-based framework to overlap product development activities</article-title>. <source>Management Science</source> <volume>43</volume>(<issue>4</issue>): <fpage>437</fpage>–<lpage>451</lpage>.</citation>
</ref>
<ref id="bibr20-1063293X11435177">
<citation citation-type="journal">
<person-group person-group-type="author">
<name><surname>Loch</surname><given-names>CH</given-names></name>
<name><surname>Terwiesch</surname><given-names>C</given-names></name>
</person-group> (<year>1998</year>) <article-title>Communication and uncertainty in concurrent engineering</article-title>. <source>Management Science</source> <volume>44</volume>(<issue>8</issue>): <fpage>1032</fpage>–<lpage>1048</lpage>.</citation>
</ref>
<ref id="bibr21-1063293X11435177">
<citation citation-type="journal">
<person-group person-group-type="author">
<name><surname>Loch</surname><given-names>CH</given-names></name>
<name><surname>Terwiesch</surname><given-names>C</given-names></name>
<name><surname>Thomke</surname><given-names>S</given-names></name>
</person-group> (<year>2001</year>) <article-title>Parallel and sequential testing of design alternatives</article-title>. <source>Management Science</source> <volume>47</volume>(<issue>5</issue>): <fpage>663</fpage>–<lpage>678</lpage>.</citation>
</ref>
<ref id="bibr22-1063293X11435177">
<citation citation-type="thesis">
<person-group person-group-type="author">
<name><surname>Osborne</surname><given-names>SM</given-names></name>
</person-group> (<year>1993</year>) <source>Product development cycle time characterization through modeling of process iteration</source>. <comment>Master’s Thesis</comment>, <publisher-name>Massachusetts Institute of Technology</publisher-name>, <publisher-loc>Cambridge, MA</publisher-loc>.</citation>
</ref>
<ref id="bibr23-1063293X11435177">
<citation citation-type="book">
<person-group person-group-type="author">
<name><surname>Pahl</surname><given-names>G</given-names></name>
<name><surname>Beitz</surname><given-names>W</given-names></name>
</person-group> (<year>1996</year>) <source>Engineering Design</source>. <edition>2nd ed.</edition> <publisher-loc>London</publisher-loc>: <publisher-name>Springer</publisher-name>.</citation>
</ref>
<ref id="bibr24-1063293X11435177">
<citation citation-type="journal">
<person-group person-group-type="author">
<name><surname>Park</surname><given-names>M</given-names></name>
<name><surname>Peña-Mora</surname><given-names>F</given-names></name>
</person-group> (<year>2003</year>) <article-title>Dynamic change management for construction: introducing the change cycle into model-based project management</article-title>. <source>System Dynamics Review</source> <volume>19</volume>(<issue>3</issue>): <fpage>213</fpage>–<lpage>242</lpage>.</citation>
</ref>
<ref id="bibr25-1063293X11435177">
<citation citation-type="book">
<person-group person-group-type="author">
<name><surname>Prasad</surname><given-names>B</given-names></name>
</person-group> (<year>1997</year>) <source>Concurrent Engineering Fundamentals: Integrated Product Development</source>, <volume>Vol. 2</volume>. <publisher-loc>Upper Saddle River, NJ</publisher-loc>: <publisher-name>Prentice Hall</publisher-name>.</citation>
</ref>
<ref id="bibr26-1063293X11435177">
<citation citation-type="journal">
<person-group person-group-type="author">
<name><surname>Prasad</surname><given-names>B</given-names></name>
</person-group> (<year>1999</year>) <article-title>Enabling principles of concurrency and simultaneity in concurrent engineering</article-title>. <source>Artificial Intelligence for Engineering Design, Analysis and Manufacturing</source> <volume>13</volume>(<issue>3</issue>): <fpage>185</fpage>–<lpage>204</lpage>.</citation>
</ref>
<ref id="bibr27-1063293X11435177">
<citation citation-type="journal">
<person-group person-group-type="author">
<name><surname>Prasad</surname><given-names>B</given-names></name>
</person-group> (<year>2000</year>) <article-title>A concurrent function deployment technique for a workgroup-based engineering design process</article-title>. <source>Journal of Engineering Design</source> <volume>11</volume>(<issue>2</issue>): <fpage>103</fpage>–<lpage>119</lpage>.</citation>
</ref>
<ref id="bibr28-1063293X11435177">
<citation citation-type="journal">
<person-group person-group-type="author">
<name><surname>Repenning</surname><given-names>NP</given-names></name>
<name><surname>Goncalves</surname><given-names>P</given-names></name>
<name><surname>Black</surname><given-names>LJ</given-names></name>
</person-group> (<year>2001</year>) <article-title>Past the tipping point: the persistence of firefighting in product development</article-title>. <source>California Management Review</source> <volume>43</volume>(<issue>4</issue>): <fpage>44</fpage>–<lpage>63</lpage>.</citation>
</ref>
<ref id="bibr29-1063293X11435177">
<citation citation-type="journal">
<person-group person-group-type="author">
<name><surname>Roemer</surname><given-names>TA</given-names></name>
<name><surname>Ahmadi</surname><given-names>R</given-names></name>
</person-group> (<year>2004</year>) <article-title>Concurrent crashing and overlapping in product development</article-title>. <source>Operations Research</source> <volume>52</volume>(<issue>4</issue>): <fpage>606</fpage>–<lpage>622</lpage>.</citation>
</ref>
<ref id="bibr30-1063293X11435177">
<citation citation-type="journal">
<person-group person-group-type="author">
<name><surname>Roemer</surname><given-names>TA</given-names></name>
<name><surname>Ahmadi</surname><given-names>R</given-names></name>
<name><surname>Wang</surname><given-names>RH</given-names></name>
</person-group> (<year>2000</year>) <article-title>Time-cost trade-offs in overlapped product development</article-title>. <source>Operations Research</source> <volume>48</volume>(<issue>6</issue>): <fpage>858</fpage>–<lpage>865</lpage>.</citation>
</ref>
<ref id="bibr31-1063293X11435177">
<citation citation-type="journal">
<person-group person-group-type="author">
<name><surname>Sandberg</surname><given-names>M</given-names></name>
<name><surname>Boart</surname><given-names>P</given-names></name>
<name><surname>Larsson</surname><given-names>T</given-names></name>
</person-group> (<year>2005</year>) <article-title>Functional product life-cycle simulation model for cost estimation in conceptual design of jet engine components</article-title>. <source>Concurrent Engineering: Research and Applications</source> <volume>13</volume>(<issue>4</issue>): <fpage>331</fpage>–<lpage>342</lpage>.</citation>
</ref>
<ref id="bibr32-1063293X11435177">
<citation citation-type="journal">
<person-group person-group-type="author">
<name><surname>Smith</surname><given-names>RP</given-names></name>
<name><surname>Eppinger</surname><given-names>SD</given-names></name>
</person-group> (<year>1995</year>) <article-title>Identifying controlling features of engineering design iteration</article-title>. <source>Management Science</source> <volume>43</volume>(<issue>3</issue>): <fpage>276</fpage>–<lpage>293</lpage>.</citation>
</ref>
<ref id="bibr33-1063293X11435177">
<citation citation-type="journal">
<person-group person-group-type="author">
<name><surname>Smith</surname><given-names>RP</given-names></name>
<name><surname>Eppinger</surname><given-names>SD</given-names></name>
</person-group> (<year>1997</year>) <article-title>A predictive model of sequential iteration in engineering design</article-title>. <source>Management Science</source> <volume>43</volume>(<issue>8</issue>): <fpage>1104</fpage>–<lpage>1120</lpage>.</citation>
</ref>
<ref id="bibr34-1063293X11435177">
<citation citation-type="journal">
<person-group person-group-type="author">
<name><surname>Terwiesch</surname><given-names>C</given-names></name>
<name><surname>Loch</surname><given-names>CH</given-names></name>
<name><surname>De Meyer</surname></name>
</person-group> (<year>2002</year>) <article-title>A exchanging preliminary information in concurrent engineering: alternative coordination strategies</article-title>. <source>Organization Science</source> <volume>13</volume>(<issue>4</issue>): <fpage>402</fpage>–<lpage>419</lpage>.</citation>
</ref>
<ref id="bibr35-1063293X11435177">
<citation citation-type="thesis">
<person-group person-group-type="author">
<name><surname>Wynn</surname><given-names>DC</given-names></name>
</person-group> (<year>2007</year>) <source>Model-based approaches to support process improvement in complex product development</source>. <comment>PhD Thesis</comment>, <publisher-name>University of Cambridge</publisher-name>, <publisher-loc>Cambridge, UK</publisher-loc>.</citation>
</ref>
<ref id="bibr36-1063293X11435177">
<citation citation-type="journal">
<person-group person-group-type="author">
<name><surname>Wynn</surname><given-names>DC</given-names></name>
<name><surname>Grebici</surname><given-names>K</given-names></name>
<name><surname>Clarkson</surname><given-names>PJ</given-names></name>
</person-group> (<year>2011</year>) <article-title>Modelling the evolution of uncertainty levels during design</article-title>. <source>International Journal on Interactive Design and Manufacturing</source> <volume>5</volume>(<issue>3</issue>): <fpage>187</fpage>–<lpage>202</lpage>.</citation>
</ref>
</ref-list>
</back>
</article>