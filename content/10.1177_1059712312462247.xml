<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article
  PUBLIC "-//NLM//DTD Journal Publishing DTD v2.3 20070202//EN" "journalpublishing.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" article-type="research-article" xml:lang="en">
<front>
<journal-meta>
<journal-id journal-id-type="publisher-id">ADB</journal-id>
<journal-id journal-id-type="hwp">spadb</journal-id>
<journal-title>Adaptive Behavior</journal-title>
<issn pub-type="ppub">1059-7123</issn>
<issn pub-type="epub">1741-2633</issn>
<publisher>
<publisher-name>SAGE Publications</publisher-name>
<publisher-loc>Sage UK: London, England</publisher-loc>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="doi">10.1177/1059712312462247</article-id>
<article-id pub-id-type="publisher-id">10.1177_1059712312462247</article-id>
<article-categories>
<subj-group subj-group-type="heading">
<subject>Original Papers</subject>
</subj-group>
</article-categories>
<title-group>
<article-title>Self-organizing agent communities for autonomic resource management</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author" corresp="yes">
<name><surname>Jacyno</surname><given-names>Mariusz</given-names></name>
<xref ref-type="aff" rid="aff1-1059712312462247">1</xref>
</contrib>
<contrib contrib-type="author">
<name><surname>Bullock</surname><given-names>Seth</given-names></name>
<xref ref-type="aff" rid="aff2-1059712312462247">2</xref>
</contrib>
<contrib contrib-type="author">
<name><surname>Geard</surname><given-names>Nicholas</given-names></name>
<xref ref-type="aff" rid="aff3-1059712312462247">3</xref>
</contrib>
<contrib contrib-type="author">
<name><surname>Payne</surname><given-names>Terry R</given-names></name>
<xref ref-type="aff" rid="aff4-1059712312462247">4</xref>
</contrib>
<contrib contrib-type="author">
<name><surname>Luck</surname><given-names>Michael</given-names></name>
<xref ref-type="aff" rid="aff5-1059712312462247">5</xref>
</contrib>
</contrib-group>
<aff id="aff1-1059712312462247"><label>1</label>Institute of Control and Computational Engineering, University of Zielona Góra, Zielona Góra, Poland</aff>
<aff id="aff2-1059712312462247"><label>2</label>School of Electronics and Computer Science, University of Southampton, UK</aff>
<aff id="aff3-1059712312462247"><label>3</label>Melbourne School of Population Health, University of Melbourne, Victoria, Australia</aff>
<aff id="aff4-1059712312462247"><label>4</label>Department of Computer Science, University of Liverpool, UK</aff>
<aff id="aff5-1059712312462247"><label>5</label>Department of Informatics, King’s College London, UK</aff>
<author-notes>
<corresp id="corresp1-1059712312462247">Mariusz Jacyno, Institute of Control and Computational Engineering, University of Zielona Góra, ul. Prof. Z. Szafrana 2, 65-246 Zielona Góra, Poland. Email: <email>m.jacyno@issi.uz.zgora.pl</email></corresp>
</author-notes>
<pub-date pub-type="epub-ppub">
<month>2</month>
<year>2013</year>
</pub-date>
<volume>21</volume>
<issue>1</issue>
<fpage>3</fpage>
<lpage>28</lpage>
<permissions>
<copyright-statement>© The Author(s) 2012</copyright-statement>
<copyright-year>2012</copyright-year>
<copyright-holder content-type="sage">International Society of Adaptive Behavior</copyright-holder>
</permissions>
<abstract>
<p>The autonomic computing paradigm addresses the operational challenges presented by increasingly complex software systems by proposing that they be composed of many autonomous components, each responsible for the runtime reconfiguration of its own dedicated hardware and software components. Consequently, regulation of the whole software system becomes an emergent property of local adaptation and learning carried out by these autonomous system elements. Designing appropriate local adaptation policies for the components of such systems remains a major challenge. This is particularly true where the system’s scale and dynamism compromise the efficiency of a central executive and/or prevent components from pooling information to achieve a shared, accurate evidence base for their negotiations and decisions. In this paper, we investigate how a self-regulatory system response may arise spontaneously from local interactions between autonomic system elements tasked with adaptively consuming/providing computational resources or services when the demand for such resources is continually changing. We demonstrate that system performance is not maximized when all system components are able to freely share information with one another. Rather, maximum efficiency is achieved when individual components have only limited knowledge of their peers. Under these conditions, the system self-organizes into appropriate community structures. By maintaining information flow at the level of communities, the system is able to remain stable enough to efficiently satisfy service demand in resource-limited environments, and thus minimize any unnecessary reconfiguration whilst remaining sufficiently adaptive to be able to reconfigure when service demand changes.</p>
</abstract>
<kwd-group>
<kwd>Autonomic computing</kwd>
<kwd>networks</kwd>
<kwd>self-organization</kwd>
<kwd>community structure</kwd>
<kwd>decentralized control</kwd>
<kwd>emergence</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="section1-1059712312462247" sec-type="intro">
<title>1 Introduction</title>
<p>Modern software systems are among the most complex human artefacts that have been developed to date (<xref ref-type="bibr" rid="bibr7-1059712312462247">Bullock &amp; Cliff, 2004</xref>; <xref ref-type="bibr" rid="bibr16-1059712312462247">Gershenson &amp; Heylighen, 2005</xref>). Contemporary information systems depend on an increasing number of software modules, processing platforms, data sources, network connections, and input/output devices, to the extent that it is becoming impossible to predict or control their interactions. Both the scale and interconnectivity of IT systems are increasing as a consequence of their evolution, from stand-alone machines to systems of systems (comprising huge numbers of distributed and interacting components) working to provide resources on demand to a large number of users (<xref ref-type="bibr" rid="bibr47-1059712312462247">Tanenbaum &amp; Renesse, 1985</xref>; <xref ref-type="bibr" rid="bibr15-1059712312462247">Forrest, Balthrop, Glickman, &amp; Ackley, 2005</xref>). Although modular architectures offer opportunities to tackle increasing system complexity by decomposing the overall system into specialized components, they also present challenges in terms of the maintenance of reliable and predictable operation when system objectives and structure are subject to exogenous and unpredictable change.</p>
<p>Consequently, it is not surprising that, several years ago, IBM released a manifesto<sup><xref ref-type="fn" rid="fn1-1059712312462247">1</xref></sup> arguing that the main obstacle to further progress in the IT industry was a looming complexity crisis that would prevent reliable and cost-effective human administration of large-scale IT systems. In response, an autonomic computing approach was proposed, where IT systems would be capable of automatically regulating their own function (<xref ref-type="bibr" rid="bibr25-1059712312462247">J. O. Kephart &amp; Chess, 2003</xref>). Large-scale autonomic computing systems were expected to comprise myriads of computational elements, each acting, learning or evolving autonomously in response to interactions with other components in their local environment (<xref ref-type="bibr" rid="bibr52-1059712312462247">Zambonelli &amp; Parunak, 2001</xref>). System-level self-regulation would then arise as a product of these local adaptations and interactions between system elements, thereby reducing the need for manual management and control.</p>
<p>While the autonomic computing paradigm offered an alternative perspective on large-scale computational systems, it also presented novel challenges in understanding and managing their performance. Large-scale IT systems can easily become too complex to be managed through a ‘divide and rule’ analysis (<xref ref-type="bibr" rid="bibr3-1059712312462247">Bonabeau, 2002</xref>). When a system’s global behaviour results from highly non-linear interactions between many system components, the relationship between the actions of individual autonomous agents and the system level consequences of those actions can become opaque and extremely sensitive (<xref ref-type="bibr" rid="bibr19-1059712312462247">Heylighen, 1991</xref>; <xref ref-type="bibr" rid="bibr51-1059712312462247">Zambonelli, Mamei, &amp; Roli, 2002</xref>; <xref ref-type="bibr" rid="bibr21-1059712312462247">Hogg &amp; Huberman, 2002</xref>). In addition to the issue of scale, autonomic systems are necessarily open, in that they are free to gain and lose components over time in an environment that is dynamic and unpredictable in terms of user demand, and where few <italic>a priori</italic> assumptions can be made (<xref ref-type="bibr" rid="bibr14-1059712312462247">Estrin, Culler, Pister, &amp; Sukhatme, 2002</xref>; <xref ref-type="bibr" rid="bibr11-1059712312462247">De Roure, 2003</xref>; <xref ref-type="bibr" rid="bibr23-1059712312462247">Keil &amp; Goldin, 2004</xref>). In general, managing such systems is perhaps more akin to regulating financial markets or managing a firm, rather than supervising a local area network or traditional computer cluster.</p>
<p>In this paper we address the central real-world problem confronted by the autonomic computing paradigm: ensuring that large numbers of computational resources are efficiently configured and allocated in order to satisfy user demand that varies in both kind and quantity. We do so by building and exploring an agent-based model at a reasonably large scale (hundreds of interacting agents). We respect some key physical realities, e.g. interactions between components take real time and any information available to system components must be gathered, stored and processed explicitly. However, we choose not to model a specific real-world case or application. Rather we present a relatively simple, generic model encapsulating a range of properties shared across information-driven autonomic systems consisting of a large number of autonomous and locally communicating elements. In doing so we focus on the role of information flows in maintaining efficient performance. As such, the model is intended to have heuristic value for the science and engineering of large-scale complex IT systems. In taking this approach we are adopting a well-established and explicitly recognized scientific modelling strategy in which realism is sacrificed to some extent in return for a combination of generality and precision (<xref ref-type="bibr" rid="bibr30-1059712312462247">Levins, 1966</xref>).</p>
<p>More specifically, we investigate how an autonomic system’s regulatory response can arise from local interactions between its elements. We present a decentralized multi-agent system in which provider agents are tasked with adaptively configuring the services that they offer, and efficiently allocating these services to the consumer agents that require them. The co-adaptive interaction between these two groups of agents is governed by simple threshold reinforcement mechanisms and localized exchange of information between each agent and its local peers. An evaluation of this approach demonstrates that when peer neighbourhoods are an appropriate size, they may exhibit self-organizing behaviour resulting in the emergence of spontaneous community structures that support the requirements of their members. What distinguishes this regime is not just the extent to which information flows amongst system components, but the underlying organization of these components and their interactions. This organization can be described in terms of an emergent and dynamic topology of interaction that regulates and constrains the flow of information but is simultaneously brought about by this flow. Our main contribution is to show that it is only when the right topology is achieved and maintained (perhaps requiring continuous or periodic reorganization) that system elements exert appropriate constraints on information flow such that efficient, ongoing system performance can be achieved.</p>
<p>The paper is organized as follows: a description of the related work on autonomic computing, multi-agent systems and self-organizing systems is presented in Section 2, which also provides the motivation and inspiration for the design of the resultant model (Section 3). The model is then evaluated in Section 4, and the strengths, limitations and implications of this model are discussed. The paper concludes in Section 5.</p>
</sec>
<sec id="section2-1059712312462247">
<title>2 Related work</title>
<sec id="section3-1059712312462247">
<title>2.1 Autonomic computing</title>
<p>Autonomic systems are dynamic and complex; not only may their workflow characteristics undergo change, but the business processes that they support will be continually evolving. Such systems require administration at multiple levels and on a continual basis in order to preserve their correct operation. At a low level, dynamically changing user demand must be met through continual allocation and reallocation of computational resources. At a higher level, reconfiguration of workflows, business processes and hardware facilities is also required. For this reason, the reconfiguration of system components and their functions is unavoidable and requires a flexible approach that maintains system efficiency despite dynamic conditions. As suggested by IBM in their manifesto, as these systems increase in scale, managing them through skilled human administration becomes impractical and autonomic solutions are required.</p>
<p>Much of the current research in the area of autonomic computing has addressed the problem of preserving the interoperation of existing IT systems’ software modules, often encapsulating their functions in terms of autonomic managers. Techniques such as reinforcement learning</p>
<p>(<xref ref-type="bibr" rid="bibr24-1059712312462247">J. Kephart et al., 2007</xref>; <xref ref-type="bibr" rid="bibr48-1059712312462247">Tesauro, 2007</xref>), optimal control theory (<xref ref-type="bibr" rid="bibr50-1059712312462247">Wang, Kandasamy, Guez, &amp; Kam, 2007</xref>), and maximization of expected utility (<xref ref-type="bibr" rid="bibr26-1059712312462247">J. O. Kephart &amp; Das, 2007</xref>) are then exploited in order to balance power–performance trade-offs, i.e. to achieve efficient allocations of requested jobs at the same time as optimizing the power consumption of unused servers.</p>
<p>Two kinds of control architecture tend to be employed: centralized and distributed; both of which are illustrated schematically in <xref ref-type="fig" rid="fig1-1059712312462247">Figure 1</xref>. Centralized schemes rely on a central executive to co-allocate services, schedule and plan system behaviour, etc. In contrast, distributed control schemes employ distributed protocols and focus on the design of intelligent parallel algorithms for coordinating the behaviour of agents. One example of a centralized system can be found in work by <xref ref-type="bibr" rid="bibr48-1059712312462247">Tesauro (2007)</xref>. Here, each application manager was responsible for the performance throttling of a managed server, and they shared expected utility information with a central resource arbiter. This central node then computed an optimal allocation of servers to the applications. A more distributed approach was adopted by <xref ref-type="bibr" rid="bibr24-1059712312462247">J. Kephart et al. (2007)</xref> where both performance and power managers conducted their decisions based on full information about the state of parameters that define the actual functioning of individual servers.</p>
<fig id="fig1-1059712312462247" position="float">
<label>Figure 1.</label>
<caption>
<p>Three classes of control organization: (a) centralized control, (b) distributed control reliant on consensual, up-to-date, global information and (c) fully decentralized control. Service providers and consumers are represented by small circles, central executives or central repositories by large circles. Agents may store information (lozenges) and/or execute co-allocation algorithms (brains). Dotted lines connote information exchange, whereas dashed lines connote the pairing of services and resources achieved by the co-allocation process. Hybrid classes of control architecture may combine elements of centralized, distributed and decentralized control.</p>
</caption>
<graphic xlink:href="10.1177_1059712312462247-fig1.tif"/>
</fig>
<p>Whilst these mechanisms are somewhat decentralized, they generally assume that up-to-date information is freely available. Thus, in order to converge on an optimal solution, such schemes require each agent to possess or have immediate access to a substantial amount of accurate and up-to-date global system information, resulting in the need for a large number of interactions in order to maintain awareness of peer goals, actions, etc. For example, although in J. <xref ref-type="bibr" rid="bibr24-1059712312462247">Kephart et al. (2007)</xref> all resource allocating agents computed the optimal allocation (thus avoiding a single arbiter), they all had access to shared state information and the same environment variables indicating current system demand.</p>
<p>Although acting on shared global information allows autonomous system elements to make well-informed decisions in principle, it has been shown that in some cases it may lead to inefficiency and loss of stability. The El Farol Bar problem (<xref ref-type="bibr" rid="bibr1-1059712312462247">Arthur, 1994</xref>) demonstrates that instability can emerge when independent, rational agents all have access to the same, global information. Arthur introduced the El Farol Bar problem as a game-theoretic example of the challenge facing rational agents that wish to organize themselves efficiently on the basis of shared information. In this game, every player wants to visit a specific bar only if less than <inline-formula id="inline-formula1-1059712312462247">
<mml:math display="inline" id="math1-1059712312462247">
<mml:mrow>
<mml:mn>60</mml:mn>
</mml:mrow>
</mml:math>
</inline-formula>% of the population also wish to visit the same bar, and they must make their decision without collaboration or negotiation. A rational agent that weighs up all of the evidence and decides, on balance, to visit the bar would also reasonably conclude that all other players will reach the same conclusion, since every other player is also a rational agent with access to the same information. In this case, the player should reverse its decision, as it does not want to attend a bar that is crowded with every other player. However, it should also reason that every other rational player would rationalize the same reversal, and so on.</p>
<p>Note that this problem can be refined in many ways and many different ‘solutions’ to it can be sought (<xref ref-type="bibr" rid="bibr10-1059712312462247">Challet &amp; Zhang, 1997</xref>; <xref ref-type="bibr" rid="bibr39-1059712312462247">Savit, Manuca, &amp; Riolo, 1999</xref>). Here we are not interested in solving the El Farol Bar problem, but rather using it as a reminder that shared information does not necessarily improve the co-ordination of decentralized decision making. In fact, the El Farol quandary rests on two symmetries: (i) every agent employs the same decision-making mechanism; and (ii) every agent reasons on the basis of the same information. Both of these symmetries are typically true of the collaborative, decentralized agent systems used to explore coalition formation (<xref ref-type="bibr" rid="bibr42-1059712312462247">Shehory &amp; Kraus, 1998</xref>), group problem solving (<xref ref-type="bibr" rid="bibr45-1059712312462247">Stone &amp; Veloso, 2000</xref>) and teamwork (<xref ref-type="bibr" rid="bibr35-1059712312462247">Pynadath &amp; Tambe, 2002</xref>).</p>
<p>Collecting and processing the up-to-date information required by centralized or distributed control can also become a significant problem in large-scale deployments due to the time delays associated with obtaining large amounts of distributed information. As a consequence, systems relying on either centralized or distributed control schemes (<xref ref-type="fig" rid="fig1-1059712312462247">Figure 1(a)</xref> and <xref ref-type="fig" rid="fig1-1059712312462247">1(b)</xref>) are often vulnerable to increasing system scale and/or dynamism (<xref ref-type="bibr" rid="bibr13-1059712312462247">Durfee, 2001</xref>).</p>
</sec>
<sec id="section4-1059712312462247">
<title>2.2 Biological analogies</title>
<p>While it is commonplace within multi-agent systems research to take an economic perspective on agent interactions, deriving ‘optimal’ behavioural policies from game-theoretic considerations of strategic interaction between autonomous agents that suffer conflicts of interest, IBM’s autonomic computing manifesto instead made reference to examples of natural homeostatic control that have evolved to maintain system equilibrium in biological organizations. Many impressive natural systems, such as ecosystems (<xref ref-type="bibr" rid="bibr22-1059712312462247">Kay, 1984</xref>), insect societies (<xref ref-type="bibr" rid="bibr40-1059712312462247">Seeley, 2002</xref>) and biological organisms (<xref ref-type="bibr" rid="bibr32-1059712312462247">Mesarovic, Sreenath, &amp; Keene, 2004</xref>), have developed internal control mechanisms that allow them to organize and adapt to environmental change by relying on local interactions between the decentralized elements, rather than a more familiar control hierarchy culminating in some authoritative central executive.</p>
<p>For example, it is not the complex decision-making of individuals that preserves robust organization of ant, wasp or bee colonies (<xref ref-type="bibr" rid="bibr36-1059712312462247">Robinson, 1992</xref>; <xref ref-type="bibr" rid="bibr17-1059712312462247">Gordon, 2002</xref>), but rather their ability to stimulate each individual’s behaviour appropriately through local interactions. (<xref ref-type="bibr" rid="bibr28-1059712312462247">Ladley &amp; Bullock, 2004</xref>, <xref ref-type="bibr" rid="bibr29-1059712312462247">2005</xref>; Bullock, Ladley, &amp; Kerby, in press). These, if effectively organized, facilitate flexible task allocation between colony members that is robust to environmental perturbations (<xref ref-type="bibr" rid="bibr49-1059712312462247">Théraulaz, Bonabeau, &amp; Deneubourg, 1998</xref>). An example of such a process can be observed in an ant colony, where a potentially homogeneous population of ants, each capable of handling the same range of tasks, is differentiated into a number of distinct but organized collectives or castes (<xref ref-type="bibr" rid="bibr4-1059712312462247">Bonabeau, Sobkowski, Théraulaz, &amp; Deneubourg, 1997</xref>). Each such collective specializes in carrying out a specific task, such as food foraging, nest building, brood feeding, nest defence, etc. The survival of the colony thus depends on both the efficient handling of each system task and the adaptive division of resources (ants) into a number of such collectives responsible for these different tasks. One of the most striking aspects of such a regulatory response is its plasticity, a property achieved through the workers’ behavioural flexibility: the ratios of workers performing the different tasks that maintain the colony’s viability and reproductive success can vary (i.e. workers switch tasks) in response to internal perturbations or external challenges (<xref ref-type="bibr" rid="bibr4-1059712312462247">Bonabeau et al., 1997</xref>). Understanding how this flexibility is implemented at the level of individual workers which certainly do not possess any global representation of the colony’s needs has been addressed to some extent (<xref ref-type="bibr" rid="bibr49-1059712312462247">Théraulaz et al., 1998</xref>; <xref ref-type="bibr" rid="bibr4-1059712312462247">Bonabeau et al., 1997</xref>; <xref ref-type="bibr" rid="bibr31-1059712312462247">Merkle &amp; Middendorf, 2004</xref>). Self-regulatory colony properties appear to stem from simple threshold-based behaviours where specialization of system elements to handle particular tasks arises as a result of reinforcement processes (<xref ref-type="bibr" rid="bibr49-1059712312462247">Théraulaz et al., 1998</xref>).</p>
<p>Taking inspiration from these biological studies is attractive for several reasons. By contrast with the economic models that typically drive multi-agent systems, they foreground the ecological rationality of the agents within real-world systems (<xref ref-type="bibr" rid="bibr9-1059712312462247">Bullock &amp; Todd, 1999</xref>). Such agents are embedded in an environment that demands decisions be made locally, under pressure of limited time, limited computational resource and on the basis of subjective information. These constraints place significant emphasis on the system’s ability to adapt and cope rather than to achieve and maintain optimal performance, i.e. to ‘satisfice’ (<xref ref-type="bibr" rid="bibr43-1059712312462247">Simon, 1956</xref>) rather than to optimize.</p>
<p>Biologically inspired approaches also recognize the potential for system components to experience coincident, as well as conflicting, interests. For instance, like components of a data centre, cells in an organism, neurons in a brain, and termites in a colony share a common interest in achieving global system efficiency rather than conflicting interests in profit making at each others’ expense. Moreover, they highlight the ability of a decentralized system composed of agents with only local knowledge to organize itself into useful structures, rather than idealizing the same system in terms of a well-mixed population of rational, fully informed agents that adapt to their environment <italic>en masse</italic>.</p>
<p>Despite the advances made in understanding such biologically inspired control mechanisms, one of the key issues involved in engineering models that exploit them remains the difficulty of encouraging the ‘right’ local interactions and discouraging those that may frustrate and destabilize the system (<xref ref-type="bibr" rid="bibr40-1059712312462247">Seeley, 2002</xref>).</p>
</sec>
<sec id="section5-1059712312462247">
<title>2.3 Decentralized control</title>
<p>A small number of studies has explored how this can be achieved in truly decentralized control schemes, without assuming that agents have access to global information (<xref ref-type="bibr" rid="bibr20-1059712312462247">Hogg &amp; Huberman, 1991</xref>; <xref ref-type="bibr" rid="bibr41-1059712312462247">Sen, Roychowdhury, &amp; Arora, 1996</xref>; <xref ref-type="bibr" rid="bibr2-1059712312462247">Babaoglu, Meling, &amp; Montresor, 2002</xref>; <xref ref-type="bibr" rid="bibr5-1059712312462247">S. Brueckner &amp; Parunak, 2003</xref>; <xref ref-type="bibr" rid="bibr37-1059712312462247">Saffre &amp; Shackleton, 2008</xref>; <xref ref-type="bibr" rid="bibr38-1059712312462247">Saffre, Tateson, Halloy, Shackleton, &amp; Deneubourg, 2009</xref>). In these systems, agents use decision algorithms that operate on local information. The specific problem of resource allocation (as opposed to service provision<sup><xref ref-type="fn" rid="fn2-1059712312462247">2</xref></sup>) in decentralized multi-agent systems has been discussed by <xref ref-type="bibr" rid="bibr41-1059712312462247">Sen et al. (1996)</xref>, who consider a system of self-interested agents allocating resources on the basis of limited knowledge about the global system state. In this context, they investigated the effects of limiting the agents’ access to both knowledge about the state of system resources, and the resulting outcome on system resource utilization. <xref ref-type="bibr" rid="bibr20-1059712312462247">Hogg and Huberman (1991</xref>, <xref ref-type="bibr" rid="bibr21-1059712312462247">2002</xref>) examined the effects of local decision making on resource utilization within a computational ecosystem, represented by a population of resource allocating agents. In their work, the authors demonstrated how imperfect information about resource state can lead to chaotic system behaviour, and how this can be suppressed through the use of appropriate local decision-making mechanisms.</p>
<p><xref ref-type="bibr" rid="bibr6-1059712312462247">S. Brueckner and Parunak (2003)</xref> present a further strategy relying on local learning mechanisms designed to establish and maintain energy-minimizing resource-allocation strategies within mobile <italic>ad hoc</italic> networks. In achieving localized strategies that reconfigure the allocation of resources in a manner that minimizes power consumption, Brueckner and Parunak drew their inspiration from the self-organizing properties of natural systems. One of the distinguishing features of this approach is an explicit appeal to emergent system properties where simple and local decisions conducted by system elements gave rise to system level behaviours that were not pre-programmed. Moreover, rather than consider these emergent properties to be problematic, here they are often expected to play key roles in achieving system-level objectives.</p>
<p>An analogous bottom-up approach underlies work presented by <xref ref-type="bibr" rid="bibr2-1059712312462247">Babaoglu et al. (2002)</xref> where a self-organizing approach is proposed to peer-to-peer (P2P) systems consisting of multiple and locally interacting nodes that are tasked to effectively provision requested resources (e.g. searched content in P2P system). A similar architecture is proposed by Saffre and colleagues (<xref ref-type="bibr" rid="bibr37-1059712312462247">Saffre &amp; Shackleton, 2008</xref>; <xref ref-type="bibr" rid="bibr38-1059712312462247">Saffre et al., 2009</xref>). Here, an overlay network with self-* properties is introduced within which the nodes organize themselves to establish symbiotic relations that minimize the time and costs associated with service provisioning.</p>
</sec>
<sec id="section6-1059712312462247">
<title>2.4 Contribution</title>
<p>The current paper focuses on achieving fully decentralized regulation of resource allocation in a model autonomic system by relying only on local interactions between components. More specifically, we present a decentralized multi-agent system in which provider agents are tasked with adaptively configuring the services that they offer, and consumer agents must choose from amongst these provider agents in order to efficiently secure computational resources necessary to carry out jobs.</p>
<p>Two aspects of this work are particularly novel. First, the problem to be solved is two-sided in that both provider and consumer agents must adaptively reconfigure their behaviour in ways that are complementary. Second, this adaptation takes place in a dynamic environment where changes in the demand for different system services may require continuous reconfiguration at the level of individual system components.</p>
<p>A further distinguishing feature of our work is the attempt to identify and explain the mechanism of self-organization that underpins the relationship between the behaviour of individual agents and the effect they have in terms of system performance. We achieve this by relating the information capacity of the agents to the emergent topology of information flows between them, which self-organizes in the form of functional communities.</p>
<p>This approach is exemplified by the work of <xref ref-type="bibr" rid="bibr18-1059712312462247">Guerin and Kunkle (2004)</xref> in a different context: investigating the self-organizing properties of an artificial swarming system represented by a simulated colony of food-foraging ants. Here, the propagation of information (in this case, pathways between the ants’ nest and various food sources) is achieved through the deposition of simulated pheromones within a simulated world. The studies found that agents (representing individual ants) were locked into pathologically tight loops of behaviour when pheromone traces were too strong. As a consequence, organized but circular foraging routes emerged that were inefficient in transporting food back to the nest. In contrast, when pheromones were too weak, the system was incapable of forming any foraging structures, since information evaporated before it could be reinforced, leaving individual foragers to randomly explore the area. Between these extremes lies a regime of effective self-organized behaviour; in this case, the establishment and maintenance of efficient foraging trails. Understanding how to regulate this type of information exchange so that an autonomic computing system is maintained between both extremes, and achieving this regulation through local decision-making strategies is the main motivation for our work.</p>
</sec>
</sec>
<sec id="section7-1059712312462247">
<title>3 A decentralized resource allocation model</title>
<p>In this section, we propose a framework for a bottom-up resource allocation mechanism, whereby the adaptation of agents (in response to changes in the environment) is based on stimulus–response reinforcement mechanisms inspired by behaviours that encourage self-organization within insect societies (<xref ref-type="bibr" rid="bibr4-1059712312462247">Bonabeau et al., 1997</xref>; <xref ref-type="bibr" rid="bibr49-1059712312462247">Théraulaz et al., 1998</xref>). In the absence of centralized controllers, the system elements need to preserve a certain degree of autonomy, allowing for local adaptation to occur given perceived changes in the environment. This architectural flexibility is provided through the use of a decentralized multi-agent system architecture. The challenge of resource allocation can be viewed as a market-based, service allocation problem, where there is a (continually changing) demand for services of a given type, and thus the market responds<sup><xref ref-type="fn" rid="fn3-1059712312462247">3</xref></sup> by changing its supply of such services to satisfy the demand. As stated earlier, a multi-agent system is analogous to an autonomic system, which can be thought of as a collection of computing resources tied together to perform a specific set of functions (<xref ref-type="bibr" rid="bibr25-1059712312462247">J. O. Kephart &amp; Chess, 2003</xref>). These resources may be hosted in a distributed fashion by a number of servers deployed over networked machines, which provide services to each other. The framework is therefore modelled as a multi-agent system comprising a number of provider agents (providers) who offer services of a specific type and consumer agents (consumers) who request and utilize the available services to achieve some task. We assume that both service providers and service consumers are agents running on constrained hardware components. Depending on the characteristics of the system, interaction between these agents may be limited by power consumption, bandwidth consumption, or time-delayed response, all of which may have associated costs if service execution is to take place ‘on demand’, quickly or by some deadline. In the system presented below, one aspect of such hardware limitations is represented in the form of service capacity, such that each agent may only satisfy service requests for a restricted set of service types, provided to a limited number of consumers simultaneously.</p>
<p>We assume that an agent is capable of reconfiguring the service type it provides at run-time. This involves a significant cost in the form of down time during which various administrative tasks may be performed, such as: completing existing service commitments; removing security-compromising data from the machine state; resetting the execution stack; or loading new software modules representing the new service types. We also consider that providers increase their utility by successfully allocating service requests, and that consumers increase their utility by successfully executing services. Thus, to maximize utility, provider agents try to avoid offering services for which there is little demand (thus, minimizing idle time), and consumer agents try to allocate service requests efficiently by locating providers that are available and configured to offer the appropriate service. A decentralized service discovery model is assumed, whereby each agent maintains a limited registry of details regarding service providers in its environment. Consumers can discover new providers through regular dialogue with known providers that continually update and share their awareness of local service availability (see <xref ref-type="fig" rid="fig2-1059712312462247">Figure 2</xref>).</p>
<fig id="fig2-1059712312462247" position="float">
<label>Figure 2.</label>
<caption>
<p>An overview of the resource management organization process. Consumers (<inline-formula id="inline-formula2-1059712312462247">
<mml:math display="inline" id="math2-1059712312462247">
<mml:mrow>
<mml:mi>U</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula>) impose a demand for different types of resources (service requirements) on resource providers (small circles). The inefficient disorganized configuration (left) represents the case in which providers have no knowledge of what services are in demand, and consumers do not know which providers offer their desired services. The organized configuration (right) represents the case in which service demand is satisfied by local supply.</p>
</caption>
<graphic xlink:href="10.1177_1059712312462247-fig2.tif"/>
</fig>
<p>The evolution of the system is therefore driven by a continually reconfiguring network of peers, as illustrated in <xref ref-type="fig" rid="fig3-1059712312462247">Figure 3</xref>. Both consumer and provider agents co-adapt to each other by exchanging information, and reconfiguring their interactions, i.e. by changing what services are offered (in response to observed changes in service demand), or by changing what providers should be contacted (based on observations of the availability of different services). These local responses are driven by the decision-making mechanisms (detailed in Sections 3.1, 3.2 and 3.3, and summarized below) and the information that is propagated throughout the topology of agents as a result of their activities.</p>
<fig id="fig3-1059712312462247" position="float">
<label>Figure 3.</label>
<caption>
<p>The system viewed as a network of peers limited in knowledge about other agents by the maximum size of their memory (in this example each peer is aware of only two other agents). Consumers do not interact directly with other consumers; however, they can indirectly affect each other’s behaviour through the information they rely on and share with commonly known providers. During the exchange of information between consumers and providers, a network reorganization process occurs that may lead to the removal or addition of new connections between agents that may consequently become aware of each other’s existence, or conversely, lose knowledge about each other. For example, <italic>C1</italic> and <italic>C2</italic> know about the same provider <italic>P1</italic>, through which information about the existence of provider <italic>P3</italic> can be passed to <italic>C2</italic>, thus forming two new links between <italic>P3</italic> and <italic>P1</italic> and between <italic>P3</italic> and <italic>C2</italic>.</p>
</caption>
<graphic xlink:href="10.1177_1059712312462247-fig3.tif"/>
</fig>
<p>As providers have no global information regarding service demand, they utilize their own experience (based on the frequency and type of queries they receive from consumers), as well as information on service availability garnered from those consumers they interact with, to determine whether to continue offering a given service type or to switch to providing another service type. Consumers discover new providers through a process of social learning, where new information is acquired through ‘gossiping’. When a consumer and provider interact, the consumer may provide details of other providers that it has interacted with. In return, the provider agent informs the consumer of other providers it is aware of (obtained through interactions with other consumers).</p>
<p>Thus, service management and provisioning strategies should emerge from local co-adaptations of individual agents based on observations of previous transactions. Whilst this naturally involves sharing some knowledge, the agents independently modify their individual models of the local environment. Since service availability can fluctuate as a result of several factors, including current demand, contention for services and demand for other service types (resulting in a reconfiguration of service offerings), it is necessary that agents maintain an accurate model of the environment by maintaining a continuous flow of pertinent information with their peers.</p>
<p>This notion of sharing information may initially appear counterintuitive, raising the question ‘why would a provider supply information on potential rival providers to its users, thus possibly reducing demand on its own services?’. One answer is that all provider and consumer agents within the system might be operated by a single firm, <inline-formula id="inline-formula3-1059712312462247">
<mml:math display="inline" id="math3-1059712312462247">
<mml:mrow>
<mml:mi>F</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula>, that owns the computational infrastructure upon which they run. Each provider agent might represent a computational resource owned by <inline-formula id="inline-formula4-1059712312462247">
<mml:math display="inline" id="math4-1059712312462247">
<mml:mrow>
<mml:mi>F</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula>, or owned by clients of <inline-formula id="inline-formula5-1059712312462247">
<mml:math display="inline" id="math5-1059712312462247">
<mml:mrow>
<mml:mi>F</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula> that employ <inline-formula id="inline-formula6-1059712312462247">
<mml:math display="inline" id="math6-1059712312462247">
<mml:mrow>
<mml:mi>F</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula>’s infrastructure to deliver their services to their customers. In either case <inline-formula id="inline-formula7-1059712312462247">
<mml:math display="inline" id="math7-1059712312462247">
<mml:mrow>
<mml:mi>F</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula>’s provider agents have an interest in collaborating with each other to achieve global efficiency and fairness rather than competing with each other to maximize ‘market share’ for any one client. Similarly, <inline-formula id="inline-formula8-1059712312462247">
<mml:math display="inline" id="math8-1059712312462247">
<mml:mrow>
<mml:mi>F</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula>’s consumer agents might act as brokers securing computational resource for real-world customers. Again, such consumer agents might be happy to share (suitably anonymized) information with each other in order to maximize system throughput or mean quality of service for <inline-formula id="inline-formula9-1059712312462247">
<mml:math display="inline" id="math9-1059712312462247">
<mml:mrow>
<mml:mi>F</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula>’s customers, even if these real-world customers are competitors. Such a scenario is analogous to that faced by a colony of social insects where the reproductive success of each insect is channelled through a single queen, guaranteeing that they have a shared interest in colony success and are motivated to honestly and freely share information.</p>
<p>However, it may also be possible to demonstrate that honest exchange of information makes sense even in competitive scenarios where different provider agents directly represent self-interested firms that are in competition with one another. We will not explore such scenarios here, but the literature on natural communication offers many illustrative suggestions as to the conditions that promote and support honest communication amongst agents with conflicting interests (<xref ref-type="bibr" rid="bibr33-1059712312462247">Noble, Di Paolo, &amp; Bullock, 2001</xref>).</p>
<p>In general, honest information exchange provides a mutually beneficial mechanism whereby consumers can acquire a timely and accurate model of services in the local community, and providers can determine a realistic estimate of the service demand in the same community and thus (if necessary) switch to improve their own utility. The neighbourhood that emerges is dependent on the size of the model that consumers retain of their peers. In addition, the stability of the neighbourhood is also dependent on this model size; the larger the model, the greater the chance of instability, as more providers may switch the type of services they offer in response to the perceived change in demand (as illustrated by the El Farol Bar problem described earlier).</p>
<p>The framework presented here makes the assumption that the tendency for information to be passed between agents will be influenced by the degree of stress that the consumers experience. This consumer stress (described more formally in Section 3.1) reflects the difficulty in locating available providers for a given service, and hence provides an indication as to whether the service supply can sufficiently meet current service demand. Whilst there is, perhaps, the opportunity for deceit in such a system, since the supply of (and demand for) services can fluctuate, maintaining an accurate model of the environment in each agent involves maintaining a continuous flow of information between agents. This issue is discussed further in Section 4.4.</p>
<p>By relaxing the constraints limiting the amount of knowledge held by each agent, the same model can explore scenarios in which agents have complete awareness of the current service demand. This is also equivalent to assuming the presence of a single matchmaker (<xref ref-type="bibr" rid="bibr46-1059712312462247">Sycara, Decker, &amp; Williamson, 1997</xref>) which maintains a registry of all available service providers within a multi-agent system, and could in theory support the task of load-balancing. By providing global knowledge to both providers and consumers, the behaviour arising from using a centralized service registry would be simulated, as every consumer would rapidly acquire complete and identical models of the service landscape. Likewise, every provider would be aware of all requests from all consumers, and thus would have the same information as every other (rational) provider. Thus, the framework can be used to explore localized community behaviour by varying the size of retained knowledge, and compared with complete, global knowledge.</p>
<p>In summary, then, the design goals of our autonomic resource management system are threefold:</p>
<list id="list1-1059712312462247" list-type="order">
<list-item><p>dynamically reconfigure service providers in order to meet the current demand for different service types;</p></list-item>
<list-item><p>dynamically maintain the awareness of each consumer such that the system maximizes throughput by minimizing the amount of time wasted by consumers during job allocation; and</p></list-item>
<list-item><p>dynamically reconfigure such that the system is robust to changes in supply and demand for each service type.</p></list-item>
</list>
<p>The remainder of this section describes service consumers (Section 3.1), service providers (Section 3.2) and knowledge exchange, i.e. ‘gossiping’ (Section 3.3).</p>
<sec id="section8-1059712312462247">
<title>3.1 Service consumers</title>
<p>In general, a single agent may be capable of both offering and consuming services. However, for the purposes of this paper, we consider the model for each behaviour as separate. Consumers are agents that request and consume services provided by provider agents. A consumer monitors the behaviour of known service providers locally, and uses this knowledge both to direct its own service requests, and to share with other agents, thereby establishing community knowledge. A consumer, <inline-formula id="inline-formula10-1059712312462247">
<mml:math display="inline" id="math10-1059712312462247">
<mml:mrow>
<mml:mi>c</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula>, maintains a local registry, <inline-formula id="inline-formula11-1059712312462247">
<mml:math display="inline" id="math11-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>R</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>c</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
</inline-formula> containing tuples corresponding to providers/services that the agent is aware of. Each tuple is defined as follows:</p>
<p><disp-formula id="disp-formula1-1059712312462247">
<mml:math display="block" id="math12-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>r</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>p</mml:mi>
</mml:mrow>
</mml:msub>
<mml:mo>=</mml:mo>
<mml:mo stretchy="false">〈</mml:mo>
<mml:msub>
<mml:mrow>
<mml:mi>α</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>p</mml:mi>
</mml:mrow>
</mml:msub>
<mml:mo>,</mml:mo>
<mml:mi>type</mml:mi>
<mml:mo>,</mml:mo>
<mml:mi>bias</mml:mi>
<mml:mo stretchy="false">〉</mml:mo>
<mml:mo>,</mml:mo>
</mml:mrow>
</mml:math>
<graphic alternate-form-of="disp-formula1-1059712312462247" xlink:href="10.1177_1059712312462247-eq1.tif"/>
</disp-formula></p>
<p>where <inline-formula id="inline-formula12-1059712312462247">
<mml:math display="inline" id="math13-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>α</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>p</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
</inline-formula> corresponds to the identity of a provider agent that has provided the service <inline-formula id="inline-formula13-1059712312462247">
<mml:math display="inline" id="math14-1059712312462247">
<mml:mrow>
<mml:mi>type</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula> at some point in the past, and <inline-formula id="inline-formula14-1059712312462247">
<mml:math display="inline" id="math15-1059712312462247">
<mml:mrow>
<mml:mi>bias</mml:mi>
<mml:mo>∈</mml:mo>
<mml:mo stretchy="false">[</mml:mo>
<mml:mn>0</mml:mn>
<mml:mo>,</mml:mo>
<mml:mn>1</mml:mn>
<mml:mo stretchy="false">]</mml:mo>
</mml:mrow>
</mml:math>
</inline-formula> corresponds to a score or preference for using provider <inline-formula id="inline-formula15-1059712312462247">
<mml:math display="inline" id="math16-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>α</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>p</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
</inline-formula> to provide the same service in the future. As consumers will not possess complete knowledge about whether a provider is currently available, or even if it is still configured to provide the same service type, it employs a local learning mechanism to update its bias estimate. This estimate is updated based on information obtained from the different providers that it interacts with (Section 3.3).</p>
<p>This registry is also consulted by the consumer when it attempts to allocate a service request to a provider; the consumer ranks all of the tuples in its registry that are related to the desired service type in decreasing order of <inline-formula id="inline-formula16-1059712312462247">
<mml:math display="inline" id="math17-1059712312462247">
<mml:mrow>
<mml:mi>bias</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula>, and then submits requests to providers in turn (starting with the tuple associated with the highest <inline-formula id="inline-formula17-1059712312462247">
<mml:math display="inline" id="math18-1059712312462247">
<mml:mrow>
<mml:mi>bias</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula> value), until a provider is found which can satisfy the request. Each request takes some finite time (<inline-formula id="inline-formula18-1059712312462247">
<mml:math display="inline" id="math19-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>T</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>q</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
</inline-formula>), and the provider will respond either to confirm that it will satisfy the request (i.e. that it is available to provide the desired service <inline-formula id="inline-formula19-1059712312462247">
<mml:math display="inline" id="math20-1059712312462247">
<mml:mrow>
<mml:mi>type</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula>), or to reject the query: either because it currently does not provide that service type, or because it is currently too busy (i.e. it does not have sufficient resource to honour the new request without compromising current commitments).</p>
<p>Each provider can simultaneously satisfy up to capacity <inline-formula id="inline-formula20-1059712312462247">
<mml:math display="inline" id="math21-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>C</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>type</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
</inline-formula> service requests; therefore provided that fewer than <inline-formula id="inline-formula21-1059712312462247">
<mml:math display="inline" id="math22-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>C</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>type</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
</inline-formula> services are being provided, a new request (of the right type) can be honoured. If a provider is capable of honouring the request, the service is executed, taking some finite time <inline-formula id="inline-formula22-1059712312462247">
<mml:math display="inline" id="math23-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>T</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>e</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
</inline-formula>, consuming a single service allocation resource. This resource is released once the service execution ceases. <xref ref-type="fig" rid="fig4-1059712312462247">Figure 4</xref> illustrates many of the different states that both consumer and provider agents may occupy.</p>
<fig id="fig4-1059712312462247" position="float">
<label>Figure 4.</label>
<caption>
<p>Several different types of service (represented by the three different polygons: <italic>square, circle</italic>, and <italic>hexagon</italic>) are required by service consumers (open polygons numbered <italic>1</italic> to <italic>5</italic>) and offered by service providers (solid polygons labelled <italic>A</italic> to <italic>F</italic>). Consumers <italic>1</italic> and <italic>2</italic> query providers <italic>A</italic> and <italic>B</italic>, respectively, requesting the same type of service (i.e. type <italic>hexagon</italic>). Provider <italic>B</italic> is not configured to offer this service type (it currently provides <italic>square</italic> services), whereas provider <italic>A</italic> could satisfy the request, provided that it is available and has spare capacity. Consumers <italic>3</italic> and <italic>4</italic> have provisioned tasks to provider <italic>C. D</italic> is busy whilst reconfiguring to offer a different type of service. Consumer <italic>5</italic> is exchanging information with provider <italic>E</italic>, whereas consumer <italic>6</italic> is ‘sleeping’ between jobs. Finally, provider <italic>F</italic> is currently unoccupied, but available to offer services of type <italic>circle</italic>.</p>
</caption>
<graphic xlink:href="10.1177_1059712312462247-fig4.tif"/>
</fig>
<p>Typically, once a service request has been satisfied (or if no requester could be found), the agent exchanges local knowledge with known providers (described in Section 3.3) before becoming inactive for some randomly determined period. The knowledge exchange is assumed to take some finite time, <inline-formula id="inline-formula23-1059712312462247">
<mml:math display="inline" id="math24-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>T</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>i</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
</inline-formula> (irrespective of the number of providers involved), and corresponds to the process of sharing information about local service demand (and availability), and thus evolving a localized community structure. The inactive period corresponds to those periods in other scenarios (or frameworks) where agents may be performing other tasks, or interacting with a user; however, for the purposes of our framework, the agent simply becomes inactive. This period is drawn from a uniform distribution <inline-formula id="inline-formula24-1059712312462247">
<mml:math display="inline" id="math25-1059712312462247">
<mml:mrow>
<mml:mo stretchy="false">[</mml:mo>
<mml:mn>0</mml:mn>
<mml:mo>,</mml:mo>
<mml:mi>ω</mml:mi>
<mml:mo stretchy="false">]</mml:mo>
</mml:mrow>
</mml:math>
</inline-formula> after which the allocation process begins again.</p>
<p>Consumer stress (<inline-formula id="inline-formula25-1059712312462247">
<mml:math display="inline" id="math26-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>c</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>s</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
</inline-formula>) is a measure of local consumer dissatisfaction, and reflects the difficulty an agent may experience when trying to provision a given service type. The agent maintains an upper limit, <inline-formula id="inline-formula26-1059712312462247">
<mml:math display="inline" id="math27-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>f</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>max</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
</inline-formula> of request attempts for each task. The motivation is that by the time the agent has queried all relevant entries within its registry, previously unavailable providers may have become available. As the consumer may therefore traverse a registry several times whilst attempting to provision a service, an upper request limit is used to terminate the provision after <inline-formula id="inline-formula27-1059712312462247">
<mml:math display="inline" id="math28-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>f</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>max</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
</inline-formula> failed requests.</p>
<p>During each attempt, <inline-formula id="inline-formula28-1059712312462247">
<mml:math display="inline" id="math29-1059712312462247">
<mml:mrow>
<mml:mi>t</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula>, to provision a service, the agent maintains a failure quotient, <inline-formula id="inline-formula29-1059712312462247">
<mml:math display="inline" id="math30-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>f</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>t</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
</inline-formula>, based on the number of requests to provider agents that have failed so far, <inline-formula id="inline-formula30-1059712312462247">
<mml:math display="inline" id="math31-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>f</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>q</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
</inline-formula>, where <inline-formula id="inline-formula31-1059712312462247">
<mml:math display="inline" id="math32-1059712312462247">
<mml:mrow>
<mml:mn>0</mml:mn>
<mml:mo>≤</mml:mo>
<mml:msub>
<mml:mrow>
<mml:mi>f</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>q</mml:mi>
</mml:mrow>
</mml:msub>
<mml:mo>≤</mml:mo>
<mml:msub>
<mml:mrow>
<mml:mi>f</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>max</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
</inline-formula> and</p>
<p><disp-formula id="disp-formula2-1059712312462247">
<mml:math display="block" id="math33-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>f</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>t</mml:mi>
</mml:mrow>
</mml:msub>
<mml:mo>=</mml:mo>
<mml:mo>min</mml:mo>
<mml:mrow>
<mml:mo>(</mml:mo>
<mml:mn>1</mml:mn>
<mml:mo>,</mml:mo>
<mml:mfrac>
<mml:mrow>
<mml:mn>2</mml:mn>
<mml:msub>
<mml:mrow>
<mml:mi>f</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>q</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>f</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>max</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:mfrac>
<mml:mo>)</mml:mo>
</mml:mrow>
<mml:mo>.</mml:mo>
</mml:mrow>
</mml:math>
<graphic alternate-form-of="disp-formula2-1059712312462247" xlink:href="10.1177_1059712312462247-eq2.tif"/>
</disp-formula></p>
<p>The intuition here is that the failure quotient should approach unity as the number of failed queries reaches <inline-formula id="inline-formula32-1059712312462247">
<mml:math display="inline" id="math34-1059712312462247">
<mml:mrow>
<mml:mfrac>
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>f</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>max</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
<mml:mrow>
<mml:mn>2</mml:mn>
</mml:mrow>
</mml:mfrac>
</mml:mrow>
</mml:math>
</inline-formula>, despite the fact that it can still continue to issue requests before reaching <inline-formula id="inline-formula33-1059712312462247">
<mml:math display="inline" id="math35-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>f</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>max</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
</inline-formula>. The stress parameter, <inline-formula id="inline-formula34-1059712312462247">
<mml:math display="inline" id="math36-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>c</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>s</mml:mi>
</mml:mrow>
</mml:msub>
<mml:mo>∈</mml:mo>
<mml:mo stretchy="false">[</mml:mo>
<mml:mn>0</mml:mn>
<mml:mo>,</mml:mo>
<mml:mn>1</mml:mn>
<mml:mo stretchy="false">]</mml:mo>
</mml:mrow>
</mml:math>
</inline-formula>, is generated by calculating the square of the average failure quotient for the current and previous provision (illustrated in <xref ref-type="fig" rid="fig5-1059712312462247">Figure 5</xref>),</p>
<fig id="fig5-1059712312462247" position="float">
<label>Figure 5.</label>
<caption>
<p>Relation between consumer stress and the failure ratio (<inline-formula id="inline-formula35-1059712312462247">
<mml:math display="inline" id="math37-1059712312462247">
<mml:mrow>
<mml:mi>f</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula>).</p>
</caption>
<graphic xlink:href="10.1177_1059712312462247-fig5.tif"/>
</fig>
<p>as follows:</p>
<p><disp-formula id="disp-formula3-1059712312462247">
<mml:math display="block" id="math38-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>c</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>s</mml:mi>
</mml:mrow>
</mml:msub>
<mml:mo>=</mml:mo>
<mml:msup>
<mml:mrow>
<mml:mo>(</mml:mo>
<mml:mfrac>
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>f</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>t</mml:mi>
<mml:mo>−</mml:mo>
<mml:mn>1</mml:mn>
</mml:mrow>
</mml:msub>
<mml:mo>+</mml:mo>
<mml:msub>
<mml:mrow>
<mml:mi>f</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>t</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
<mml:mrow>
<mml:mn>2</mml:mn>
</mml:mrow>
</mml:mfrac>
<mml:mo>)</mml:mo>
</mml:mrow>
<mml:mrow>
<mml:mn>2</mml:mn>
</mml:mrow>
</mml:msup>
<mml:mo>.</mml:mo>
</mml:mrow>
</mml:math>
<graphic alternate-form-of="disp-formula3-1059712312462247" xlink:href="10.1177_1059712312462247-eq3.tif"/>
</disp-formula></p>
<p>The consumer periodically updates the ordered set <inline-formula id="inline-formula36-1059712312462247">
<mml:math display="inline" id="math39-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>R</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>c</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
</inline-formula> to reflect its experience in provisioning services, and to minimize the number of future rejected queries. If the request was successfully satisfied, then the tuple <inline-formula id="inline-formula37-1059712312462247">
<mml:math display="inline" id="math40-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>r</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>p</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
</inline-formula> corresponding to the provider <inline-formula id="inline-formula38-1059712312462247">
<mml:math display="inline" id="math41-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>α</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>p</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
</inline-formula> which provided the service <inline-formula id="inline-formula39-1059712312462247">
<mml:math display="inline" id="math42-1059712312462247">
<mml:mrow>
<mml:mi>type</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula> is modified, such that <inline-formula id="inline-formula40-1059712312462247">
<mml:math display="inline" id="math43-1059712312462247">
<mml:mrow>
<mml:mi>bias</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula> is incremented by <inline-formula id="inline-formula41-1059712312462247">
<mml:math display="inline" id="math44-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>δ</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>bias</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
</inline-formula>; otherwise, it is decremented by this amount.<sup><xref ref-type="fn" rid="fn4-1059712312462247">4</xref></sup> To ensure that this model of provider availability does not become stale, a decay function is used to adjust the <inline-formula id="inline-formula42-1059712312462247">
<mml:math display="inline" id="math45-1059712312462247">
<mml:mrow>
<mml:mi>bias</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula> parameter for all tuples in <inline-formula id="inline-formula43-1059712312462247">
<mml:math display="inline" id="math46-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>R</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>c</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
</inline-formula>, by applying a decay coefficient.<sup><xref ref-type="fn" rid="fn5-1059712312462247">5</xref></sup> After each update, the set <inline-formula id="inline-formula44-1059712312462247">
<mml:math display="inline" id="math47-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>R</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>c</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
</inline-formula> is then ordered with respect to <inline-formula id="inline-formula45-1059712312462247">
<mml:math display="inline" id="math48-1059712312462247">
<mml:mrow>
<mml:mi>bias</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula>, such that tuples with greater bias are placed nearer the top of the list.</p>
<p>The algorithm used by a consumer agent is represented in Algorithm 1. In line 1, the registry is ordered such that the highest ranked providers (according to their <italic>bias</italic> value) are at the top. The consumer then traverses this list, searching for providers that can satisfy its service request, until one is found (lines 2–16). If a provider is found that can offer the service, that provider’s rating is incremented (line 9), otherwise it is penalized (line 12), and the failure count is incremented. Once the service has been satisfied (or the service request failed after <inline-formula id="inline-formula46-1059712312462247">
<mml:math display="inline" id="math49-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>f</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>max</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
</inline-formula> attempts), the consumer stress is updated (lines 18–19). The ratings of all of the providers are decremented using the decay coefficient (lines 21–23), before information is exchanged with them (lines 25–28). Finally, the agent sleeps until the next service invocation (line 29). <xref ref-type="fig" rid="fig6-1059712312462247">Figure 6</xref> (left) illustrates a schematic representation of the internal state of a consumer, indicating the current level of stress (given by the thermometer icon) whilst attempting to provision service of type circle from an internal registry of service providers.</p>
<fig id="fig6-1059712312462247" position="float">
<label>Figure 6.</label>
<caption>
<p>Schematic representation of the internal state held by Consumer <italic>5</italic> (left) and Provider <italic>E</italic> (right). Consumer <italic>5</italic> experiences a current level of stress, <inline-formula id="inline-formula47-1059712312462247">
<mml:math display="inline" id="math50-1059712312462247">
<mml:mrow>
<mml:mi>S</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula>, based on the number of failed queries whilst trying to provision the previous two services (<italic>f1</italic> and <italic>f2</italic>, respectively). Consumer 5 also retains rankings (i.e. <inline-formula id="inline-formula48-1059712312462247">
<mml:math display="inline" id="math51-1059712312462247">
<mml:mrow>
<mml:mi>bias</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula>) for <inline-formula id="inline-formula49-1059712312462247">
<mml:math display="inline" id="math52-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>m</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>c</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
</inline-formula> known providers (in this case, the providers <italic>D, E</italic> and <italic>F</italic>, all of which are believed to provide services of type <italic>circle</italic>). Between jobs, Consumer 5 sleeps for some random period drawn from the uniform distribution [<inline-formula id="inline-formula50-1059712312462247">
<mml:math display="inline" id="math53-1059712312462247">
<mml:mrow>
<mml:mn>0</mml:mn>
<mml:mo>,</mml:mo>
<mml:mi>ω</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula>]. Provider <italic>E</italic> is currently configured to perform service (<italic>square</italic>), and maintains estimates of the demand for all known service types, plus <inline-formula id="inline-formula51-1059712312462247">
<mml:math display="inline" id="math54-1059712312462247">
<mml:mrow>
<mml:mi>bias</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula> estimates for all known service providers, organized by type of service offered.</p>
</caption>
<graphic xlink:href="10.1177_1059712312462247-fig6.tif"/>
</fig>
<graphic id="img1-1059712312462247" position="anchor" xlink:href="10.1177_1059712312462247-img1.tif"/>
</sec>
<sec id="section9-1059712312462247">
<title>3.2 Service providers</title>
<p>Providers ‘model’ the local demand for services to determine what services they should offer. Providers may only offer a single type of service at any time, despite possessing the capability to offer several types of services; due to limitations in physical resources (e.g. memory size, processor capacity, etc.), or based on security issues. Business sectors (such as the e-business sector) also limit the number of software modules that servers can provide at any time to avoid information leak. The suspension of availability of one service type and introduction of another can have an implicit cost, as this reconfiguration typically takes some time during which the agent cannot perform any further service execution, and thus will not obtain any utility increase. We therefore assume that each provider agent <inline-formula id="inline-formula52-1059712312462247">
<mml:math display="inline" id="math55-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>α</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>p</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
</inline-formula> can only offer one service type at any time, but has the capability of offering several other service types (subject to reconfiguration). The set</p>
<p><disp-formula id="disp-formula4-1059712312462247">
<mml:math display="block" id="math56-1059712312462247">
<mml:mrow>
<mml:mi>Capability</mml:mi>
<mml:mo>=</mml:mo>
<mml:munder>
<mml:mo>⋃</mml:mo>
<mml:mrow>
<mml:mo>∀</mml:mo>
<mml:msub>
<mml:mrow>
<mml:mi>α</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>p</mml:mi>
</mml:mrow>
</mml:msub>
<mml:mo>∈</mml:mo>
<mml:mi>MAS</mml:mi>
</mml:mrow>
</mml:munder>
<mml:mi>Capabilit</mml:mi>
<mml:msub>
<mml:mrow>
<mml:mi>y</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>α</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>p</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
<graphic alternate-form-of="disp-formula4-1059712312462247" xlink:href="10.1177_1059712312462247-eq4.tif"/>
</disp-formula></p>
<p>contains the union of all service types available from all service providers in the multi-agent system (<inline-formula id="inline-formula53-1059712312462247">
<mml:math display="inline" id="math57-1059712312462247">
<mml:mrow>
<mml:mi>MAS</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula>), whereas <inline-formula id="inline-formula54-1059712312462247">
<mml:math display="inline" id="math58-1059712312462247">
<mml:mrow>
<mml:mi>Capabilit</mml:mi>
<mml:msub>
<mml:mrow>
<mml:mi>y</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>α</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>p</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
</inline-formula> corresponds to the set of services that <inline-formula id="inline-formula55-1059712312462247">
<mml:math display="inline" id="math59-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>α</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>p</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
</inline-formula> is capable of offering.<sup><xref ref-type="fn" rid="fn6-1059712312462247">6</xref></sup> Thus, to determine which service type <inline-formula id="inline-formula56-1059712312462247">
<mml:math display="inline" id="math60-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>α</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>p</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
</inline-formula> should offer, it maintains a model <inline-formula id="inline-formula57-1059712312462247">
<mml:math display="inline" id="math61-1059712312462247">
<mml:mrow>
<mml:mi>S</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula> of current, local service demand and determines which services to offer from that model. To achieve this, the provider maintains a number of registries corresponding to provider ratings for different service types, i.e. <inline-formula id="inline-formula58-1059712312462247">
<mml:math display="inline" id="math62-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>S</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>type</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
</inline-formula> for each registry of type <inline-formula id="inline-formula59-1059712312462247">
<mml:math display="inline" id="math63-1059712312462247">
<mml:mrow>
<mml:mi>type</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula>, as provided by consumers during information exchange.</p>
<p>Providers receive requests from consumers in the following form:</p>
<p><disp-formula id="disp-formula5-1059712312462247">
<mml:math display="block" id="math64-1059712312462247">
<mml:mrow>
<mml:mi>re</mml:mi>
<mml:msub>
<mml:mrow>
<mml:mi>q</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>i</mml:mi>
</mml:mrow>
</mml:msub>
<mml:mo>=</mml:mo>
<mml:mo stretchy="false">〈</mml:mo>
<mml:msub>
<mml:mrow>
<mml:mi>α</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>c</mml:mi>
</mml:mrow>
</mml:msub>
<mml:mo>,</mml:mo>
<mml:mi>type</mml:mi>
<mml:mo>,</mml:mo>
<mml:mi>capacity</mml:mi>
<mml:mo>,</mml:mo>
<mml:msub>
<mml:mrow>
<mml:mi>c</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>s</mml:mi>
</mml:mrow>
</mml:msub>
<mml:mo stretchy="false">〉</mml:mo>
</mml:mrow>
</mml:math>
<graphic alternate-form-of="disp-formula5-1059712312462247" xlink:href="10.1177_1059712312462247-eq5.tif"/>
</disp-formula></p>
<p>where <inline-formula id="inline-formula60-1059712312462247">
<mml:math display="inline" id="math65-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>α</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>c</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
</inline-formula> corresponds to the consumer which submitted the request, <inline-formula id="inline-formula61-1059712312462247">
<mml:math display="inline" id="math66-1059712312462247">
<mml:mrow>
<mml:mi>type</mml:mi>
<mml:mo>∈</mml:mo>
<mml:mi>Capability</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula> corresponds to the type of service the consumer requested, the size (in terms of <inline-formula id="inline-formula62-1059712312462247">
<mml:math display="inline" id="math67-1059712312462247">
<mml:mrow>
<mml:mi>capacity</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula>) of the task required, and the consumer’s current stress, <inline-formula id="inline-formula63-1059712312462247">
<mml:math display="inline" id="math68-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>c</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>s</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
</inline-formula> (defined in Section 3.1). When a new request is received that can be satisfied, the provider’s registry is also updated. Each request is augmented with a <inline-formula id="inline-formula64-1059712312462247">
<mml:math display="inline" id="math69-1059712312462247">
<mml:mrow>
<mml:mi>bias</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula> rating, and stored as the tuple <inline-formula id="inline-formula65-1059712312462247">
<mml:math display="inline" id="math70-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>r</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>c</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
</inline-formula>, which is in a form that can also be used when exchanging information with consumers, i.e.</p>
<p><disp-formula id="disp-formula6-1059712312462247">
<mml:math display="block" id="math71-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>r</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>c</mml:mi>
</mml:mrow>
</mml:msub>
<mml:mo>=</mml:mo>
<mml:mo stretchy="false">〈</mml:mo>
<mml:msub>
<mml:mrow>
<mml:mi>α</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>c</mml:mi>
</mml:mrow>
</mml:msub>
<mml:mo>,</mml:mo>
<mml:mi>type</mml:mi>
<mml:mo>,</mml:mo>
<mml:mi>capacity</mml:mi>
<mml:mo>,</mml:mo>
<mml:msub>
<mml:mrow>
<mml:mi>c</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>s</mml:mi>
</mml:mrow>
</mml:msub>
<mml:mo>,</mml:mo>
<mml:mi>bias</mml:mi>
<mml:mo stretchy="false">〉</mml:mo>
</mml:mrow>
</mml:math>
<graphic alternate-form-of="disp-formula6-1059712312462247" xlink:href="10.1177_1059712312462247-eq6.tif"/>
</disp-formula></p>
<p>If the registry already contains a tuple for the consumer and service type, then the tuple in <inline-formula id="inline-formula66-1059712312462247">
<mml:math display="inline" id="math72-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>S</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>type</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
</inline-formula> is updated with the new <inline-formula id="inline-formula67-1059712312462247">
<mml:math display="inline" id="math73-1059712312462247">
<mml:mrow>
<mml:mi>capacity</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula>, and the <inline-formula id="inline-formula68-1059712312462247">
<mml:math display="inline" id="math74-1059712312462247">
<mml:mrow>
<mml:mi>bias</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula> is modified, based on the product of the consumer’s stress, <inline-formula id="inline-formula69-1059712312462247">
<mml:math display="inline" id="math75-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>c</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>s</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
</inline-formula> and the update coefficient<sup><xref ref-type="fn" rid="fn7-1059712312462247">7</xref></sup> as follows:</p>
<p><disp-formula id="disp-formula7-1059712312462247">
<mml:math display="block" id="math76-1059712312462247">
<mml:mrow>
<mml:mi>bias</mml:mi>
<mml:mo>=</mml:mo>
<mml:mo>min</mml:mo>
<mml:mo stretchy="false">(</mml:mo>
<mml:mn>1</mml:mn>
<mml:mo>,</mml:mo>
<mml:mi>bias</mml:mi>
<mml:mo>+</mml:mo>
<mml:msub>
<mml:mrow>
<mml:mi>δ</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>update</mml:mi>
</mml:mrow>
</mml:msub>
<mml:msub>
<mml:mrow>
<mml:mi>c</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>s</mml:mi>
</mml:mrow>
</mml:msub>
<mml:mo stretchy="false">)</mml:mo>
<mml:mo>.</mml:mo>
</mml:mrow>
</mml:math>
<graphic alternate-form-of="disp-formula7-1059712312462247" xlink:href="10.1177_1059712312462247-eq7.tif"/>
</disp-formula></p>
<p>This adjustment reflects an increase in perceived demand for the service type. If no previous request exists from the requesting consumer for this service, then a new tuple is added to <inline-formula id="inline-formula70-1059712312462247">
<mml:math display="inline" id="math77-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>S</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>type</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
</inline-formula>, with an initial <inline-formula id="inline-formula71-1059712312462247">
<mml:math display="inline" id="math78-1059712312462247">
<mml:mrow>
<mml:mi>bias</mml:mi>
<mml:mo>=</mml:mo>
<mml:msub>
<mml:mrow>
<mml:mi>δ</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>update</mml:mi>
</mml:mrow>
</mml:msub>
<mml:msub>
<mml:mrow>
<mml:mi>c</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>s</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
</inline-formula>. The union of all of the sets, <inline-formula id="inline-formula72-1059712312462247">
<mml:math display="inline" id="math79-1059712312462247">
<mml:mrow>
<mml:mi>S</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula>, is then ordered <sup><xref ref-type="fn" rid="fn8-1059712312462247">8</xref></sup> with respect to <inline-formula id="inline-formula73-1059712312462247">
<mml:math display="inline" id="math80-1059712312462247">
<mml:mrow>
<mml:mi>bias</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula>.</p>
<p>The provider periodically consults the ordered set <inline-formula id="inline-formula74-1059712312462247">
<mml:math display="inline" id="math81-1059712312462247">
<mml:mrow>
<mml:mi>S</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula> to determine whether or not to reconfigure its offered service. As there is no global view of current service demand, the providers have to infer this based on local demand observed from previously received requests, which can then be used as evidence for the decision to reconfigure its service offerings. If the <inline-formula id="inline-formula75-1059712312462247">
<mml:math display="inline" id="math82-1059712312462247">
<mml:mrow>
<mml:mi>type</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula> of service in the first tuple corresponds to the service that is currently being offered, then no action is taken. Otherwise, the provider performs a switch operation, whereby the provider changes the type of service it can provide. Whilst this switching process has no explicit economic cost, it has an implicit cost as the process takes a finite time (<inline-formula id="inline-formula76-1059712312462247">
<mml:math display="inline" id="math83-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>T</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>s</mml:mi>
</mml:mrow>
</mml:msub>
<mml:mo>=</mml:mo>
<mml:mn>2</mml:mn>
<mml:mspace width="0.25em"/>
<mml:mtext>s</mml:mtext>
</mml:mrow>
</mml:math>
</inline-formula>), during which no other service can be provided. To ensure that the model maintained for current service demand does not become stale, a decay function is used to adjust the <inline-formula id="inline-formula77-1059712312462247">
<mml:math display="inline" id="math84-1059712312462247">
<mml:mrow>
<mml:mi>bias</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula> parameter for all tuples in the sets <inline-formula id="inline-formula78-1059712312462247">
<mml:math display="inline" id="math85-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>S</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>type</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
</inline-formula> for each type, using the decay coefficient <inline-formula id="inline-formula79-1059712312462247">
<mml:math display="inline" id="math86-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>δ</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>decay</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
</inline-formula>.</p>
<p>The algorithm used by a provider agent is represented in Algorithm 2. On receiving a service request (line 1), the provider verifies that it is currently able to provide the service (in terms of both service type and capacity) before going on to execute the service.<sup><xref ref-type="fn" rid="fn9-1059712312462247">9</xref></sup> Once the service has been successfully completed, the provider updates its internal registry, by creating a tuple, <inline-formula id="inline-formula80-1059712312462247">
<mml:math display="inline" id="math87-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>r</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>c</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
</inline-formula>, based on the request (line 8). If a set of records for the requested type exists (i.e. <inline-formula id="inline-formula81-1059712312462247">
<mml:math display="inline" id="math88-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>S</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>type</mml:mi>
</mml:mrow>
</mml:msub>
<mml:mo>⊆</mml:mo>
<mml:mi>S</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula> in line 9), then either the new tuple is added to the set (line 15), or if an appropriate tuple exists, it is updated (line 13). Otherwise, a new set <inline-formula id="inline-formula82-1059712312462247">
<mml:math display="inline" id="math89-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>S</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>type</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
</inline-formula> is created with the new tuple as its only element (line 18). The provider then sorts all of its sets of tuples <inline-formula id="inline-formula83-1059712312462247">
<mml:math display="inline" id="math90-1059712312462247">
<mml:mrow>
<mml:mi>S</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula> into descending order, to determine whether it should change the type of service it currently offers (lines 22–25). In the example depicted in <xref ref-type="fig" rid="fig6-1059712312462247">Figure 6</xref> (right), provider <inline-formula id="inline-formula84-1059712312462247">
<mml:math display="inline" id="math91-1059712312462247">
<mml:mrow>
<mml:mi>E</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula> is most likely to continue to offer services of type <italic>square</italic>, but might conceivably switch to offering services of type <italic>hexagon</italic> in the near future, since this is also associated with moderately high demand.</p>
<graphic id="img2-1059712312462247" position="anchor" xlink:href="10.1177_1059712312462247-img2.tif"/>
</sec>
<sec id="section10-1059712312462247">
<title>3.3 Information exchange</title>
<p>To facilitate the migration of knowledge regarding the availability of services and current service demand, both providers and consumers share knowledge before revising their respective models. This process is initiated by consumers, and occurs each time a consumer completes a transaction with a provider.</p>
<sec id="section11-1059712312462247">
<title>3.3.1 Sharing knowledge with providers</title>
<p>Each consumer shares all of the tuples contained in its local registry, <inline-formula id="inline-formula85-1059712312462247">
<mml:math display="inline" id="math92-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>R</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>c</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
</inline-formula> and its current stress level, <inline-formula id="inline-formula86-1059712312462247">
<mml:math display="inline" id="math93-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>c</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>s</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
</inline-formula>, with each of the providers that are listed in the registry. Each provider then uses an integration policy to incorporate this knowledge into its own local registries (i.e. <inline-formula id="inline-formula87-1059712312462247">
<mml:math display="inline" id="math94-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>S</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>type</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
</inline-formula> for each of the service types the provider knows about). This integration policy limits the number of tuples merged from the consumer’s knowledge for each given type (i.e. tuples from <inline-formula id="inline-formula88-1059712312462247">
<mml:math display="inline" id="math95-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>S</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>type</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
</inline-formula>) with its own knowledge, based on <inline-formula id="inline-formula89-1059712312462247">
<mml:math display="inline" id="math96-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>c</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>s</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
</inline-formula>. This stress level indirectly represents the quality of knowledge the consumer possesses; low <inline-formula id="inline-formula90-1059712312462247">
<mml:math display="inline" id="math97-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>c</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>s</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
</inline-formula> values suggest that the tuples provide an accurate representation of the current availability of services, whereas high <inline-formula id="inline-formula91-1059712312462247">
<mml:math display="inline" id="math98-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>c</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>s</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
</inline-formula> values suggest that the knowledge is poor or that the supply of that particular service type is low, thus leading to difficulties in provisioning services. The maximum number of information tuples the provider is willing to substitute (<inline-formula id="inline-formula92-1059712312462247">
<mml:math display="inline" id="math99-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>t</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>n</mml:mi>
</mml:mrow>
</mml:msub>
<mml:mo>∈</mml:mo>
<mml:mi>ℤ</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula>) for each service type <inline-formula id="inline-formula93-1059712312462247">
<mml:math display="inline" id="math100-1059712312462247">
<mml:mrow>
<mml:mi>type</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula> is defined as follows:</p>
<p><disp-formula id="disp-formula8-1059712312462247">
<mml:math display="block" id="math101-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>t</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>n</mml:mi>
</mml:mrow>
</mml:msub>
<mml:mo>=</mml:mo>
<mml:mo stretchy="false">(</mml:mo>
<mml:mn>1</mml:mn>
<mml:mo>−</mml:mo>
<mml:msub>
<mml:mrow>
<mml:mi>c</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>s</mml:mi>
</mml:mrow>
</mml:msub>
<mml:mo stretchy="false">)</mml:mo>
<mml:mo>*</mml:mo>
<mml:msub>
<mml:mrow>
<mml:mi>m</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>c</mml:mi>
</mml:mrow>
</mml:msub>
<mml:mo>,</mml:mo>
</mml:mrow>
</mml:math>
<graphic alternate-form-of="disp-formula8-1059712312462247" xlink:href="10.1177_1059712312462247-eq8.tif"/>
</disp-formula></p>
<p>where <inline-formula id="inline-formula94-1059712312462247">
<mml:math display="inline" id="math102-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>m</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>c</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
</inline-formula> is the size of the set of tuples provided by the consumer for a given service type. The provider selects the highest ranking <inline-formula id="inline-formula95-1059712312462247">
<mml:math display="inline" id="math103-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>t</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>n</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
</inline-formula> tuples (ordered by each tuple’s <inline-formula id="inline-formula96-1059712312462247">
<mml:math display="inline" id="math104-1059712312462247">
<mml:mrow>
<mml:mi>bias</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula> parameter) for integration into its registry. Each provider maintains a limit (<inline-formula id="inline-formula97-1059712312462247">
<mml:math display="inline" id="math105-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>m</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>p</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
</inline-formula>) on the number of tuples it stores, which determines which of the consumer’s tuples are retained.</p>
</sec>
<sec id="section12-1059712312462247">
<title>3.3.2 Tuple integration</title>
<p>There are three possible ways that each new tuple may be integrated into the provider’s registries, based on whether the provider has existing information on <inline-formula id="inline-formula98-1059712312462247">
<mml:math display="inline" id="math106-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>α</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>p</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
</inline-formula> (specified by the tuple), namely: <italic>add, substitute</italic> or <italic>update</italic>. If none of the tuples in <inline-formula id="inline-formula99-1059712312462247">
<mml:math display="inline" id="math107-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>S</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>type</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
</inline-formula> refer to this provider, then the tuple is added or substituted, using the following policy: if <inline-formula id="inline-formula100-1059712312462247">
<mml:math display="inline" id="math108-1059712312462247">
<mml:mrow>
<mml:mo stretchy="false">|</mml:mo>
<mml:msub>
<mml:mrow>
<mml:mi>S</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>type</mml:mi>
</mml:mrow>
</mml:msub>
<mml:mo stretchy="false">|</mml:mo>
<mml:mo>&lt;</mml:mo>
<mml:msub>
<mml:mrow>
<mml:mi>m</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>p</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
</inline-formula> then the new tuple is simply <italic>added</italic> to <inline-formula id="inline-formula101-1059712312462247">
<mml:math display="inline" id="math109-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>S</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>type</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
</inline-formula>. Otherwise, a tuple for some other provider is potentially removed to allow the new tuple to be stored. The way this is done is based on the <inline-formula id="inline-formula102-1059712312462247">
<mml:math display="inline" id="math110-1059712312462247">
<mml:mrow>
<mml:mi>bias</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula> value; the provider inspects those tuples for which the <inline-formula id="inline-formula103-1059712312462247">
<mml:math display="inline" id="math111-1059712312462247">
<mml:mrow>
<mml:mi>bias</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula> is less than that in the new tuple and randomly selects one of these to be <italic>substituted</italic>. If none are found, then the new tuple is not introduced. This mechanism guarantees that only knowledge that has an equal (or higher) <inline-formula id="inline-formula104-1059712312462247">
<mml:math display="inline" id="math112-1059712312462247">
<mml:mrow>
<mml:mi>bias</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula> than that existing within a provider’s memory will be introduced.</p>
<p>The third integration mechanism, <italic>update</italic>, modifies an existing tuple maintained by the provider. As this new tuple represents an additional, subjective evaluation of provider <inline-formula id="inline-formula105-1059712312462247">
<mml:math display="inline" id="math113-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>α</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>p</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
</inline-formula>, the new <inline-formula id="inline-formula106-1059712312462247">
<mml:math display="inline" id="math114-1059712312462247">
<mml:mrow>
<mml:mi>bias</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula> is calculated by averaging the new and previous tuple.</p>
</sec>
<sec id="section13-1059712312462247">
<title>3.3.3 Sharing knowledge with consumers</title>
<p>Providers maintain <inline-formula id="inline-formula107-1059712312462247">
<mml:math display="inline" id="math115-1059712312462247">
<mml:mrow>
<mml:mi>bias</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula> rankings for other provider agents that they may be aware of (through exchanging information with consumers), and organize these with respect to service type (as illustrated in the schematic representation in <xref ref-type="fig" rid="fig6-1059712312462247">Figure 6</xref> (right)). Thus, a provider may appear within more than one set of tuples <inline-formula id="inline-formula108-1059712312462247">
<mml:math display="inline" id="math116-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>S</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>type</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
</inline-formula>, depending on the knowledge that was acquired from different consumers during the last information sharing phase (e.g. in <xref ref-type="fig" rid="fig6-1059712312462247">Figure 6</xref>, provider <italic>E</italic> believes that provider <italic>B</italic> offers services of type <italic>hexagon</italic> and <italic>circle</italic>). Providers can therefore deal with incoming information in a manner that is sensitive to the type of service required by the consumer they are interacting with. If provider <italic>E</italic> interacts with a consumer attempting to secure service type <italic>pentagon</italic> and, during this interaction, learns that the consumer associates provider <italic>G</italic> with a high <inline-formula id="inline-formula109-1059712312462247">
<mml:math display="inline" id="math117-1059712312462247">
<mml:mrow>
<mml:mi>bias</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula> estimate, this new information will be used to update <italic>E</italic>’s <inline-formula id="inline-formula110-1059712312462247">
<mml:math display="inline" id="math118-1059712312462247">
<mml:mrow>
<mml:mi>bias</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula> estimate for provider <italic>G</italic> as a provider of service type <italic>pentagon</italic>.</p>
<p>Hence, each provider shares all of the knowledge it possesses about other providers (i.e. <inline-formula id="inline-formula111-1059712312462247">
<mml:math display="inline" id="math119-1059712312462247">
<mml:mrow>
<mml:mi>S</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula>), based on its aggregated knowledge shared by different consumers. As consumers will have existing (if somewhat limited) knowledge of different service types, each consumer organizes its knowledge, <inline-formula id="inline-formula112-1059712312462247">
<mml:math display="inline" id="math120-1059712312462247">
<mml:mrow>
<mml:mi>S</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula>, into two distinct subsets: <inline-formula id="inline-formula113-1059712312462247">
<mml:math display="inline" id="math121-1059712312462247">
<mml:mrow>
<mml:msup>
<mml:mrow>
<mml:mi>S</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>act</mml:mi>
</mml:mrow>
</mml:msup>
</mml:mrow>
</mml:math>
</inline-formula> and <inline-formula id="inline-formula114-1059712312462247">
<mml:math display="inline" id="math122-1059712312462247">
<mml:mrow>
<mml:msup>
<mml:mrow>
<mml:mi>S</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>inact</mml:mi>
</mml:mrow>
</mml:msup>
</mml:mrow>
</mml:math>
</inline-formula>, prior to sharing with different providers. The set <inline-formula id="inline-formula115-1059712312462247">
<mml:math display="inline" id="math123-1059712312462247">
<mml:mrow>
<mml:msup>
<mml:mrow>
<mml:mi>S</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>act</mml:mi>
</mml:mrow>
</mml:msup>
</mml:mrow>
</mml:math>
</inline-formula> contains all of the tuples <inline-formula id="inline-formula116-1059712312462247">
<mml:math display="inline" id="math124-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>r</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>p</mml:mi>
</mml:mrow>
</mml:msub>
<mml:mo>∈</mml:mo>
<mml:mi>S</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula> where the <inline-formula id="inline-formula117-1059712312462247">
<mml:math display="inline" id="math125-1059712312462247">
<mml:mrow>
<mml:mi>type</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula> of <inline-formula id="inline-formula118-1059712312462247">
<mml:math display="inline" id="math126-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>r</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>p</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
</inline-formula> corresponds to that known by the consumer (i.e. <inline-formula id="inline-formula119-1059712312462247">
<mml:math display="inline" id="math127-1059712312462247">
<mml:mrow>
<mml:mi>type</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula> appears in <inline-formula id="inline-formula120-1059712312462247">
<mml:math display="inline" id="math128-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>R</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>c</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
</inline-formula>, and thus is considered active information). The remaining tuples are considered inactive information, shared (indirectly) between different consumers through common providers.</p>
<p>The proportion of data retained from each of these new sets is determined by the current stress of the consumer, such that the higher the value of <inline-formula id="inline-formula121-1059712312462247">
<mml:math display="inline" id="math129-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>c</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>s</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
</inline-formula>, the greater proportion of tuples from <inline-formula id="inline-formula122-1059712312462247">
<mml:math display="inline" id="math130-1059712312462247">
<mml:mrow>
<mml:msup>
<mml:mrow>
<mml:mi>S</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>inact</mml:mi>
</mml:mrow>
</mml:msup>
</mml:mrow>
</mml:math>
</inline-formula> will be retained. The consumer orders each set (based on <inline-formula id="inline-formula123-1059712312462247">
<mml:math display="inline" id="math131-1059712312462247">
<mml:mrow>
<mml:mi>bias</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula>), and then selects <inline-formula id="inline-formula124-1059712312462247">
<mml:math display="inline" id="math132-1059712312462247">
<mml:mrow>
<mml:mo>max</mml:mo>
<mml:mo stretchy="false">(</mml:mo>
<mml:mn>0</mml:mn>
<mml:mo>,</mml:mo>
<mml:mo stretchy="false">|</mml:mo>
<mml:msup>
<mml:mrow>
<mml:mi>S</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>act</mml:mi>
</mml:mrow>
</mml:msup>
<mml:mo stretchy="false">|</mml:mo>
<mml:mo>−</mml:mo>
<mml:mn>2</mml:mn>
<mml:msub>
<mml:mrow>
<mml:mi>c</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>s</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
</inline-formula>) tuples from <inline-formula id="inline-formula125-1059712312462247">
<mml:math display="inline" id="math133-1059712312462247">
<mml:mrow>
<mml:msup>
<mml:mrow>
<mml:mi>S</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>act</mml:mi>
</mml:mrow>
</mml:msup>
</mml:mrow>
</mml:math>
</inline-formula>, and <inline-formula id="inline-formula126-1059712312462247">
<mml:math display="inline" id="math134-1059712312462247">
<mml:mrow>
<mml:mo>min</mml:mo>
<mml:mo stretchy="false">(</mml:mo>
<mml:mn>2</mml:mn>
<mml:msub>
<mml:mrow>
<mml:mi>c</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>s</mml:mi>
</mml:mrow>
</mml:msub>
<mml:mo>,</mml:mo>
<mml:mo stretchy="false">|</mml:mo>
<mml:msup>
<mml:mrow>
<mml:mi>S</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>inact</mml:mi>
</mml:mrow>
</mml:msup>
<mml:mo stretchy="false">|</mml:mo>
</mml:mrow>
</mml:math>
</inline-formula>) tuples from <inline-formula id="inline-formula127-1059712312462247">
<mml:math display="inline" id="math135-1059712312462247">
<mml:mrow>
<mml:msup>
<mml:mrow>
<mml:mi>S</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>inact</mml:mi>
</mml:mrow>
</mml:msup>
</mml:mrow>
</mml:math>
</inline-formula> for retention. The top ranking <inline-formula id="inline-formula128-1059712312462247">
<mml:math display="inline" id="math136-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>t</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>n</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
</inline-formula> tuples are then integrated into the consumer’s local registry, <inline-formula id="inline-formula129-1059712312462247">
<mml:math display="inline" id="math137-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>R</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>c</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
</inline-formula> using the same mechanism as that described in Section 3.3.2. The only difference is that the <inline-formula id="inline-formula130-1059712312462247">
<mml:math display="inline" id="math138-1059712312462247">
<mml:mrow>
<mml:mi>bias</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula> value is not aggregated, but rather is calculated by averaging the new and previous tuple. In addition, the <inline-formula id="inline-formula131-1059712312462247">
<mml:math display="inline" id="math139-1059712312462247">
<mml:mrow>
<mml:mi>bias</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula> of all <inline-formula id="inline-formula132-1059712312462247">
<mml:math display="inline" id="math140-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>r</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>c</mml:mi>
</mml:mrow>
</mml:msub>
<mml:mo>∈</mml:mo>
<mml:msup>
<mml:mrow>
<mml:mi>S</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>inact</mml:mi>
</mml:mrow>
</mml:msup>
</mml:mrow>
</mml:math>
</inline-formula> are simply replaced by <inline-formula id="inline-formula133-1059712312462247">
<mml:math display="inline" id="math141-1059712312462247">
<mml:mrow>
<mml:mi>bias</mml:mi>
<mml:mo>=</mml:mo>
<mml:mn>1</mml:mn>
</mml:mrow>
</mml:math>
</inline-formula>.</p>
<p>This process facilitates the discovery of new services from a group of providers that may not offer a desired service type, but through consecutive interactions, may reconfigure to satisfy new consumers. Thus, consumers are willing to retain a small number of tuples pertaining to these providers (i.e. those that appear in the set <inline-formula id="inline-formula134-1059712312462247">
<mml:math display="inline" id="math142-1059712312462247">
<mml:mrow>
<mml:msup>
<mml:mrow>
<mml:mi>S</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>inact</mml:mi>
</mml:mrow>
</mml:msup>
</mml:mrow>
</mml:math>
</inline-formula>) within their local memory only when their allocative stress is high. As this, from a global system point of view, may indicate change in the demand occurring within the system, this mechanism allows providers to ‘migrate’ to a community with increased service demand. However, introduction of information into the consumer’s registry does not guarantee that the provider will change its current service offering.</p>
</sec>
</sec>
</sec>
<sec id="section14-1059712312462247">
<title>4 Experimental evaluation</title>
<p>In this paper we explore two hypotheses that underlie the design of the model presented in Section 3:</p>
<p><bold>Hypothesis 1</bold>. A stimulus–response mechanism that facilitates the propagation of limited knowledge regarding resource availability results in the formation of stable communities, whereby roles are well established and correspond to the needs of the community.</p>
<p><bold>Hypothesis 2</bold>. When information flow between peers is limited, this mechanism can deal with significant fluctuation in the demand for different resources by smoothly reorganizing agent communities.</p>
<p>In Section 4.2, the performance of the decentralized resource allocation model is compared with that of a system employing centralized control and analysis of the system’s capacity to form local communities for a variety of service scenarios is conducted. The registries managed by each agent are examined to visualize the network of connectivity between different agents and to verify the formation and structure of communities corresponding to homogeneous service usage (thus supporting Hypothesis 1). This is followed, in Section 4.3, by an investigation of the stability of the emergent communities when service demand is dynamic. The results demonstrate that in the cases where the size of the service registries is limited, providers provide a stable supply of relevant services to the fluctuating market, whereas when the service registry size is large or unlimited (thus simulating the case where services can be discovered through a centralized registry, such as a matchmaker middle-agent (<xref ref-type="bibr" rid="bibr46-1059712312462247">Sycara et al., 1997</xref>)), the supply of services degenerates and becomes chaotic (thus supporting Hypothesis 2).</p>
<p>The following experiments were carried out using a variety of model configurations. <xref ref-type="table" rid="table1-1059712312462247">Table 1</xref> lists the default parameter values (introduced in Section 3) used for each of the evaluations; in the case where a parameter may be different, the new parameter values are defined explicitly. For example, the empirical evaluation in Section 4.2 (Hypothesis 1) uses <inline-formula id="inline-formula135-1059712312462247">
<mml:math display="inline" id="math143-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>C</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>type</mml:mi>
</mml:mrow>
</mml:msub>
<mml:mo>=</mml:mo>
<mml:mn>5</mml:mn>
</mml:mrow>
</mml:math>
</inline-formula>, whereas in Section 4.3 (Hypothesis 2), <inline-formula id="inline-formula136-1059712312462247">
<mml:math display="inline" id="math144-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>C</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>type</mml:mi>
</mml:mrow>
</mml:msub>
<mml:mo>=</mml:mo>
<mml:mn>2</mml:mn>
</mml:mrow>
</mml:math>
</inline-formula>. Note that all time measurements are quoted as simulation time seconds, and do not relate to real time. Each evaluation was performed 10 times, and the results were tested for statistical significance.</p>
<table-wrap id="table1-1059712312462247" position="float">
<label>Table 1.</label>
<caption>
<p>The parameters used to configure the evaluation (unless otherwise stated)</p>
</caption>
<graphic alternate-form-of="table1-1059712312462247" xlink:href="10.1177_1059712312462247-table1.tif"/>
<table>
<colgroup>
<col align="left"/>
<col align="left"/>
<col align="left"/>
</colgroup>
<thead>
<tr>
<th align="left">Parameter</th>
<th align="left">Value</th>
<th align="left">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><inline-formula id="inline-formula137-1059712312462247">
<mml:math display="inline" id="math145-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>T</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>q</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
</inline-formula></td>
<td>50 ms</td>
<td>Time taken to query a provider</td>
</tr>
<tr>
<td><inline-formula id="inline-formula138-1059712312462247">
<mml:math display="inline" id="math146-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>T</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>i</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
</inline-formula></td>
<td>50 ms</td>
<td>Time taken to complete each knowledge exchange phase</td>
</tr>
<tr>
<td><inline-formula id="inline-formula139-1059712312462247">
<mml:math display="inline" id="math147-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>T</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>e</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
</inline-formula></td>
<td>500 ms</td>
<td>Time taken to satisfy a service request</td>
</tr>
<tr>
<td><inline-formula id="inline-formula140-1059712312462247">
<mml:math display="inline" id="math148-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>T</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>s</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
</inline-formula></td>
<td>2 s</td>
<td>Time taken for a provider to perform a switch operation</td>
</tr>
<tr>
<td><inline-formula id="inline-formula141-1059712312462247">
<mml:math display="inline" id="math149-1059712312462247">
<mml:mrow>
<mml:mi>ω</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula></td>
<td>50 ms</td>
<td>Typical upper bound for the sleep distribution</td>
</tr>
<tr>
<td><inline-formula id="inline-formula142-1059712312462247">
<mml:math display="inline" id="math150-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>C</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>type</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
</inline-formula></td>
<td>2 or 5</td>
<td>Number of services that can simultaneously be honoured</td>
</tr>
<tr>
<td><inline-formula id="inline-formula143-1059712312462247">
<mml:math display="inline" id="math151-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>f</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>max</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
</inline-formula></td>
<td><inline-formula id="inline-formula144-1059712312462247">
<mml:math display="inline" id="math152-1059712312462247">
<mml:mrow>
<mml:mn>2</mml:mn>
<mml:mo>×</mml:mo>
<mml:msub>
<mml:mrow>
<mml:mi>m</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>c</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
</inline-formula></td>
<td>maximum number of query attempts a consumer will make when provisioning a service</td>
</tr>
<tr>
<td><inline-formula id="inline-formula145-1059712312462247">
<mml:math display="inline" id="math153-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>m</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>s</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
</inline-formula></td>
<td><inline-formula id="inline-formula146-1059712312462247">
<mml:math display="inline" id="math154-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>m</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>c</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
</inline-formula></td>
<td>Number of tuples retained by a provider for each service type</td>
</tr>
<tr>
<td><inline-formula id="inline-formula147-1059712312462247">
<mml:math display="inline" id="math155-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>δ</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>bias</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
</inline-formula></td>
<td>0.1</td>
<td>The <italic>bias</italic> increment coefficient</td>
</tr>
<tr>
<td><inline-formula id="inline-formula148-1059712312462247">
<mml:math display="inline" id="math156-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>δ</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>decay</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
</inline-formula></td>
<td>0.9</td>
<td>Decay coefficient is used to allow stale information to decay</td>
</tr>
<tr>
<td><inline-formula id="inline-formula149-1059712312462247">
<mml:math display="inline" id="math157-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>δ</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>update</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
</inline-formula></td>
<td>0.1</td>
<td>Update coefficient, used to update provider bias based on <inline-formula id="inline-formula150-1059712312462247">
<mml:math display="inline" id="math158-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>c</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>s</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
</inline-formula></td>
</tr>
</tbody>
</table>
</table-wrap>
<p>Before either of these studies is presented, in Section 4.1 we first introduce an assortativity metric that will be used to evaluate the community structure exhibited by a population of software agents.</p>
<sec id="section15-1059712312462247">
<title>4.1 Assortativity metric</title>
<p>An assortativity metric has been defined to evaluate the structure of the information flow between individual agents. This measure represents the strength of the community structure in a population of consumers interested in securing the same service type.</p>
<p>In order to calculate assortativity for a particular service type, we first identify the set of consumers interested in securing that service, <inline-formula id="inline-formula151-1059712312462247">
<mml:math display="inline" id="math159-1059712312462247">
<mml:mrow>
<mml:mi>C</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula>. We then determine the complete set of providers known to this set of consumers, <inline-formula id="inline-formula152-1059712312462247">
<mml:math display="inline" id="math160-1059712312462247">
<mml:mrow>
<mml:mi>P</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula>, and populate a square matrix <inline-formula id="inline-formula153-1059712312462247">
<mml:math display="inline" id="math161-1059712312462247">
<mml:mrow>
<mml:mi>M</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula> of size <inline-formula id="inline-formula154-1059712312462247">
<mml:math display="inline" id="math162-1059712312462247">
<mml:mrow>
<mml:mo stretchy="false">|</mml:mo>
<mml:mi>P</mml:mi>
<mml:mo stretchy="false">|</mml:mo>
<mml:mo>×</mml:mo>
<mml:mo stretchy="false">|</mml:mo>
<mml:mi>P</mml:mi>
<mml:mo stretchy="false">|</mml:mo>
</mml:mrow>
</mml:math>
</inline-formula>, where <inline-formula id="inline-formula155-1059712312462247">
<mml:math display="inline" id="math163-1059712312462247">
<mml:mrow>
<mml:mo stretchy="false">|</mml:mo>
<mml:mi>P</mml:mi>
<mml:mo stretchy="false">|</mml:mo>
</mml:mrow>
</mml:math>
</inline-formula> corresponds to the number of unique providers in <inline-formula id="inline-formula156-1059712312462247">
<mml:math display="inline" id="math164-1059712312462247">
<mml:mrow>
<mml:mi>P</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula>. Each element of <inline-formula id="inline-formula157-1059712312462247">
<mml:math display="inline" id="math165-1059712312462247">
<mml:mrow>
<mml:mi>M</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula>, <inline-formula id="inline-formula158-1059712312462247">
<mml:math display="inline" id="math166-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>M</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>i</mml:mi>
<mml:mo>,</mml:mo>
<mml:mi>j</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
</inline-formula>, corresponds to the number of consumers in <inline-formula id="inline-formula159-1059712312462247">
<mml:math display="inline" id="math167-1059712312462247">
<mml:mrow>
<mml:mi>C</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula> that simultaneously know both provider <inline-formula id="inline-formula160-1059712312462247">
<mml:math display="inline" id="math168-1059712312462247">
<mml:mrow>
<mml:mi>i</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula> and provider <inline-formula id="inline-formula161-1059712312462247">
<mml:math display="inline" id="math169-1059712312462247">
<mml:mrow>
<mml:mi>j</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula>. Note that some but perhaps not all of the members of <inline-formula id="inline-formula162-1059712312462247">
<mml:math display="inline" id="math170-1059712312462247">
<mml:mrow>
<mml:mi>P</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula> will be configured to offer the service type sought by members of <inline-formula id="inline-formula163-1059712312462247">
<mml:math display="inline" id="math171-1059712312462247">
<mml:mrow>
<mml:mi>C</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula>.</p>
<p>We can interpret <inline-formula id="inline-formula164-1059712312462247">
<mml:math display="inline" id="math172-1059712312462247">
<mml:mrow>
<mml:mi>M</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula> as specifying a network of undirected connections between members of <inline-formula id="inline-formula165-1059712312462247">
<mml:math display="inline" id="math173-1059712312462247">
<mml:mrow>
<mml:mi>P</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula>. In the simplest case, we might determine that an edge <inline-formula id="inline-formula166-1059712312462247">
<mml:math display="inline" id="math174-1059712312462247">
<mml:mrow>
<mml:mo stretchy="false">(</mml:mo>
<mml:mi>i</mml:mi>
<mml:mo>,</mml:mo>
<mml:mi>j</mml:mi>
<mml:mo stretchy="false">)</mml:mo>
</mml:mrow>
</mml:math>
</inline-formula> exists only where <inline-formula id="inline-formula167-1059712312462247">
<mml:math display="inline" id="math175-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>M</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>i</mml:mi>
<mml:mo>,</mml:mo>
<mml:mi>j</mml:mi>
</mml:mrow>
</mml:msub>
<mml:mo>&gt;</mml:mo>
<mml:mi>e</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula>. If most network edges connect providers that offer the same type of service then consumer agents are aware of appropriate providers and share a consistent collective memory.</p>
<p>The assortativity metric, <inline-formula id="inline-formula168-1059712312462247">
<mml:math display="inline" id="math176-1059712312462247">
<mml:mrow>
<mml:mi>H</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula>, can be defined as follows:</p>
<p><disp-formula id="disp-formula9-1059712312462247">
<mml:math display="block" id="math177-1059712312462247">
<mml:mrow>
<mml:mi>H</mml:mi>
<mml:mo>=</mml:mo>
<mml:mfrac>
<mml:mrow>
<mml:mn>1</mml:mn>
</mml:mrow>
<mml:mrow>
<mml:mi>n</mml:mi>
</mml:mrow>
</mml:mfrac>
<mml:munderover>
<mml:mo>∑</mml:mo>
<mml:mrow>
<mml:mi>i</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>n</mml:mi>
</mml:mrow>
</mml:munderover>
<mml:msub>
<mml:mrow>
<mml:mi>d</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>i</mml:mi>
</mml:mrow>
</mml:msub>
<mml:mo>,</mml:mo>
</mml:mrow>
</mml:math>
<graphic alternate-form-of="disp-formula9-1059712312462247" xlink:href="10.1177_1059712312462247-eq9.tif"/>
</disp-formula></p>
<p>where <inline-formula id="inline-formula169-1059712312462247">
<mml:math display="inline" id="math178-1059712312462247">
<mml:mrow>
<mml:mi>i</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula> is one of the <inline-formula id="inline-formula170-1059712312462247">
<mml:math display="inline" id="math179-1059712312462247">
<mml:mrow>
<mml:mi>n</mml:mi>
<mml:mo>≤</mml:mo>
<mml:mo stretchy="false">|</mml:mo>
<mml:mi>P</mml:mi>
<mml:mo stretchy="false">|</mml:mo>
</mml:mrow>
</mml:math>
</inline-formula> providers in <inline-formula id="inline-formula171-1059712312462247">
<mml:math display="inline" id="math180-1059712312462247">
<mml:mrow>
<mml:mi>P</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula> that have at least one network neighbour, and <inline-formula id="inline-formula172-1059712312462247">
<mml:math display="inline" id="math181-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>d</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>i</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
</inline-formula> is the proportion of these neighbours that offer the same service <inline-formula id="inline-formula173-1059712312462247">
<mml:math display="inline" id="math182-1059712312462247">
<mml:mrow>
<mml:mi>type</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula> as <inline-formula id="inline-formula174-1059712312462247">
<mml:math display="inline" id="math183-1059712312462247">
<mml:mrow>
<mml:mi>i</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula>.</p>
<p>In a random system, the proportion of network edges connecting providers offering the same service will converge to <inline-formula id="inline-formula175-1059712312462247">
<mml:math display="inline" id="math184-1059712312462247">
<mml:mrow>
<mml:mfrac>
<mml:mrow>
<mml:mn>1</mml:mn>
</mml:mrow>
<mml:mrow>
<mml:mi>T</mml:mi>
</mml:mrow>
</mml:mfrac>
</mml:mrow>
</mml:math>
</inline-formula>, where <inline-formula id="inline-formula176-1059712312462247">
<mml:math display="inline" id="math185-1059712312462247">
<mml:mrow>
<mml:mi>T</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula> is the number of service types. The baseline assortativity, <inline-formula id="inline-formula177-1059712312462247">
<mml:math display="inline" id="math186-1059712312462247">
<mml:mrow>
<mml:mi>H</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula>, of communities in such a disorganized system will therefore also tend to be <inline-formula id="inline-formula178-1059712312462247">
<mml:math display="inline" id="math187-1059712312462247">
<mml:mrow>
<mml:mfrac>
<mml:mrow>
<mml:mn>1</mml:mn>
</mml:mrow>
<mml:mrow>
<mml:mi>T</mml:mi>
</mml:mrow>
</mml:mfrac>
</mml:mrow>
</mml:math>
</inline-formula>.</p>
</sec>
<sec id="section16-1059712312462247">
<title>4.2 Demand variety</title>
<p>In this analysis, the system’s ability to form local communities was examined over a range of scenarios with differing numbers of service types. The community structure was investigated, to explore the types of links that emerge through sharing limited information between peers.</p>
<sec id="section17-1059712312462247">
<title>4.2.1 Scenario configuration</title>
<p>To explore the effect that different combinations of service types may have on demand, and hence on community organization, the number of unique service types demanded by consumer agents was varied, such that the demand variety is defined as <inline-formula id="inline-formula179-1059712312462247">
<mml:math display="inline" id="math188-1059712312462247">
<mml:mrow>
<mml:mi>V</mml:mi>
<mml:mo>=</mml:mo>
<mml:mo stretchy="false">|</mml:mo>
<mml:mi>Capability</mml:mi>
<mml:mo stretchy="false">|</mml:mo>
<mml:mo>∈</mml:mo>
<mml:mo stretchy="false">[</mml:mo>
<mml:mn>1</mml:mn>
<mml:mo>,</mml:mo>
<mml:mn>6</mml:mn>
<mml:mo stretchy="false">]</mml:mo>
</mml:mrow>
</mml:math>
</inline-formula> (see Section 3.2). Each consumer was configured to require exactly one <inline-formula id="inline-formula180-1059712312462247">
<mml:math display="inline" id="math189-1059712312462247">
<mml:mrow>
<mml:mi>type</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula> of service from the pool of available service types, such that the demand for each service type was equal. Thus, when <inline-formula id="inline-formula181-1059712312462247">
<mml:math display="inline" id="math190-1059712312462247">
<mml:mrow>
<mml:mi>V</mml:mi>
<mml:mo>=</mml:mo>
<mml:mn>1</mml:mn>
</mml:mrow>
</mml:math>
</inline-formula>, all consumers shared the same type of service requirements, whereas for <inline-formula id="inline-formula182-1059712312462247">
<mml:math display="inline" id="math191-1059712312462247">
<mml:mrow>
<mml:mi>V</mml:mi>
<mml:mo>=</mml:mo>
<mml:mn>2</mml:mn>
</mml:mrow>
</mml:math>
</inline-formula>, the consumer population comprised two equally-sized sub-populations that differed in the service they required. Based on the perceived service demand, providers can choose to offer a single service selected from the set <inline-formula id="inline-formula183-1059712312462247">
<mml:math display="inline" id="math192-1059712312462247">
<mml:mrow>
<mml:mi>Capability</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula>, as defined in <xref ref-type="table" rid="table2-1059712312462247">Table 2</xref>.</p>
<table-wrap id="table2-1059712312462247" position="float">
<label>Table 2.</label>
<caption>
<p>A variety of different sets of service types for different demand variety settings. Note that 600 consumers each requiring one service can, in principle, be satisfied exactly by 120 providers each with a capacity 5</p>
</caption>
<graphic alternate-form-of="table2-1059712312462247" xlink:href="10.1177_1059712312462247-table2.tif"/>
<table>
<colgroup>
<col align="left"/>
<col align="left"/>
<col align="left"/>
<col align="left"/>
<col align="left"/>
</colgroup>
<thead>
<tr>
<th align="left">
<inline-formula id="inline-formula184-1059712312462247">
<mml:math display="inline" id="math193-1059712312462247">
<mml:mrow>
<mml:mi>V</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula></th>
<th align="left">Set of service types (<inline-formula id="inline-formula185-1059712312462247">
<mml:math display="inline" id="math194-1059712312462247">
<mml:mrow>
<mml:mi>Capability</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula>)</th>
<th align="left">Number of consumers</th>
<th align="left">Number of providers</th>
<th align="left">Service capacity <inline-formula id="inline-formula186-1059712312462247">
<mml:math display="inline" id="math195-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>C</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>type</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
</inline-formula></th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td><inline-formula id="inline-formula187-1059712312462247">
<mml:math display="inline" id="math196-1059712312462247">
<mml:mrow>
<mml:mo stretchy="false">{</mml:mo>
<mml:mi>A</mml:mi>
<mml:mo stretchy="false">}</mml:mo>
</mml:mrow>
</mml:math>
</inline-formula></td>
<td>600</td>
<td>120</td>
<td>5</td>
</tr>
<tr>
<td>2</td>
<td><inline-formula id="inline-formula188-1059712312462247">
<mml:math display="inline" id="math197-1059712312462247">
<mml:mrow>
<mml:mo stretchy="false">{</mml:mo>
<mml:mi>A</mml:mi>
<mml:mo>,</mml:mo>
<mml:mi>B</mml:mi>
<mml:mo stretchy="false">}</mml:mo>
</mml:mrow>
</mml:math>
</inline-formula></td>
<td>600</td>
<td>120</td>
<td>5</td>
</tr>
<tr>
<td>3</td>
<td><inline-formula id="inline-formula189-1059712312462247">
<mml:math display="inline" id="math198-1059712312462247">
<mml:mrow>
<mml:mo stretchy="false">{</mml:mo>
<mml:mi>A</mml:mi>
<mml:mo>,</mml:mo>
<mml:mi>B</mml:mi>
<mml:mo>,</mml:mo>
<mml:mi>C</mml:mi>
<mml:mo stretchy="false">}</mml:mo>
</mml:mrow>
</mml:math>
</inline-formula></td>
<td>600</td>
<td>120</td>
<td>5</td>
</tr>
<tr>
<td>4</td>
<td><inline-formula id="inline-formula190-1059712312462247">
<mml:math display="inline" id="math199-1059712312462247">
<mml:mrow>
<mml:mo stretchy="false">{</mml:mo>
<mml:mi>A</mml:mi>
<mml:mo>,</mml:mo>
<mml:mi>B</mml:mi>
<mml:mo>,</mml:mo>
<mml:mi>C</mml:mi>
<mml:mo>,</mml:mo>
<mml:mi>D</mml:mi>
<mml:mo stretchy="false">}</mml:mo>
</mml:mrow>
</mml:math>
</inline-formula></td>
<td>600</td>
<td>120</td>
<td>5</td>
</tr>
<tr>
<td>5</td>
<td><inline-formula id="inline-formula191-1059712312462247">
<mml:math display="inline" id="math200-1059712312462247">
<mml:mrow>
<mml:mo stretchy="false">{</mml:mo>
<mml:mi>A</mml:mi>
<mml:mo>,</mml:mo>
<mml:mi>B</mml:mi>
<mml:mo>,</mml:mo>
<mml:mi>C</mml:mi>
<mml:mo>,</mml:mo>
<mml:mi>D</mml:mi>
<mml:mo>,</mml:mo>
<mml:mi>E</mml:mi>
<mml:mo stretchy="false">}</mml:mo>
</mml:mrow>
</mml:math>
</inline-formula></td>
<td>600</td>
<td>120</td>
<td>5</td>
</tr>
<tr>
<td>6</td>
<td><inline-formula id="inline-formula192-1059712312462247">
<mml:math display="inline" id="math201-1059712312462247">
<mml:mrow>
<mml:mo stretchy="false">{</mml:mo>
<mml:mi>A</mml:mi>
<mml:mo>,</mml:mo>
<mml:mi>B</mml:mi>
<mml:mo>,</mml:mo>
<mml:mi>C</mml:mi>
<mml:mo>,</mml:mo>
<mml:mi>D</mml:mi>
<mml:mo>,</mml:mo>
<mml:mi>E</mml:mi>
<mml:mo>,</mml:mo>
<mml:mi>F</mml:mi>
<mml:mo stretchy="false">}</mml:mo>
</mml:mrow>
</mml:math>
</inline-formula></td>
<td>600</td>
<td>120</td>
<td>5</td>
</tr>
</tbody>
</table>
</table-wrap>
<p>In each case, a provider is configured to offer no more than <inline-formula id="inline-formula193-1059712312462247">
<mml:math display="inline" id="math202-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>C</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>type</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
</inline-formula>‘units’ of the same service at any one time (i.e. <inline-formula id="inline-formula194-1059712312462247">
<mml:math display="inline" id="math203-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>C</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>type</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
</inline-formula> is its service capacity). The maximum number of tuples in each consumer’s memory is defined as <inline-formula id="inline-formula195-1059712312462247">
<mml:math display="inline" id="math204-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>m</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>c</mml:mi>
</mml:mrow>
</mml:msub>
<mml:mo>=</mml:mo>
<mml:mn>10</mml:mn>
</mml:mrow>
</mml:math>
</inline-formula>, i.e. each consumer will remember details of up to 10 providers after each information exchange phase (Section 3.3). On initialization, consumers are given a random selection of information about the existence of different providers. As the providers have no preference for providing any service, the selection of services they provide is initially randomized. To facilitate faster convergence on the creation of communities, only information residing in the <inline-formula id="inline-formula196-1059712312462247">
<mml:math display="inline" id="math205-1059712312462247">
<mml:mrow>
<mml:msup>
<mml:mrow>
<mml:mi>S</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>act</mml:mi>
</mml:mrow>
</mml:msup>
</mml:mrow>
</mml:math>
</inline-formula> set (Section 3.3.3) was used during the first 200 s of simulation time.<sup><xref ref-type="fn" rid="fn10-1059712312462247">10</xref></sup></p>
</sec>
<sec id="section18-1059712312462247">
<title>4.2.2 Evaluation and analysis</title>
<p>Before analysing the way in which the decentralized resource allocation model operates, we first contrast its performance with that of an idealized system reliant on centralized control, described below. This comparison is performed over a range of scenarios that vary in terms of the demand variety, <inline-formula id="inline-formula197-1059712312462247">
<mml:math display="inline" id="math206-1059712312462247">
<mml:mrow>
<mml:mi>V</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula>, exhibited by consumers.</p>
<p>By contrast with the decentralized model, the centralized model utilizes a single centrally maintained ideal registry that is divided into sub-registries, each of which corresponds to one of the service types demanded by consumer agents. Upon initialization, the tuple associated with each provider is allocated to the sub-registry associated with the service that it is configured to provide.</p>
<p>Every simulated second, each sub-registry is updated instantaneously with truthful information about the state of all providers currently configured to offer the associated service. Should a provider switch which service it provides, its associated tuple will switch to the appropriate sub-registry. Each of these sub-registries is sorted in order of the currently available spare capacity offered by each provider such that providers with most spare capacity are at the head of the list. Consumers no longer make use of any local memory, but instead rely on the central registry, consulting the contents of the sub-registry associated with the service that they require and querying providers in order of their spare capacity.</p>
<p>Under realistic conditions, centrally maintaining information on providers would require interactions between the centralized registry and every provider agent, each of which would consume time and computational resource. Here, we do not explicitly model these costs, but simply impose a 1 s latency between consecutive instantaneous updates.</p>
<p>For the centralized model, <xref ref-type="fig" rid="fig7-1059712312462247">Figure 7</xref> shows that system performance (or ‘throughput’, calculated as the ratio of successful service allocations to overall service requests) is low across all scenarios and lowest for scenarios where consumers exhibit low demand variety. This is a consequence of the congestion created by herding which is maximized where all consumers demand the same service and have access to the same information on providers, and minimized to the extent that consumers are divided into many groups with different service requirements. In the limit where each consumer requires a unique type of service provided by a unique provider, near-optimal throughput could be achieved by the centralized model.</p>
<fig id="fig7-1059712312462247" position="float">
<label>Figure 7.</label>
<caption>
<p>Mean throughput of jobs as a proportion of optimal throughput (horizontal line) for decentralized (D) and centralized (C) resource management with differing levels of demand variety, <inline-formula id="inline-formula198-1059712312462247">
<mml:math display="inline" id="math207-1059712312462247">
<mml:mrow>
<mml:mi>V</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula>. For the centralized resource management strategy, throughput declines with decreasing <inline-formula id="inline-formula199-1059712312462247">
<mml:math display="inline" id="math208-1059712312462247">
<mml:mrow>
<mml:mi>V</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula> as a consequence of the increasing congestion created by herding. For decentralized resource management, throughput is near optimal for <inline-formula id="inline-formula200-1059712312462247">
<mml:math display="inline" id="math209-1059712312462247">
<mml:mrow>
<mml:mi>V</mml:mi>
<mml:mo>=</mml:mo>
<mml:mn>1</mml:mn>
</mml:mrow>
</mml:math>
</inline-formula> and remains high where more than one variety of service is required by the consumer population. Each bar represents the mean throughput for the final 600 seconds of 10 independent simulation runs. Error bars represent standard deviations about the mean.</p>
</caption>
<graphic xlink:href="10.1177_1059712312462247-fig7.tif"/>
</fig>
<p>By contrast, the system performance of the decentralized model is not unduly affected by varying demand variety, remaining close to the optimum. For the case where <inline-formula id="inline-formula201-1059712312462247">
<mml:math display="inline" id="math210-1059712312462247">
<mml:mrow>
<mml:mi>V</mml:mi>
<mml:mo>=</mml:mo>
<mml:mn>1</mml:mn>
</mml:mrow>
</mml:math>
</inline-formula>, all consumers issue requests for the same service type (i.e. type <inline-formula id="inline-formula202-1059712312462247">
<mml:math display="inline" id="math211-1059712312462247">
<mml:mrow>
<mml:mi>A</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula>), encouraging all providers to switch to offer this type of service. Once this has been achieved, there is no pressure for any provider to switch, and the only service allocation failures that may occur are due to requests being sent to providers that are busy. Those consumers stressed by such failures are more likely to update their registries. Thus, the only type of organization occurring within the environment is due to consumers replacing knowledge of over-committed providers. Since there is sufficient aggregate supply to meet consumer demand and consumers have different assessments of provider utility, eventually a stable assignment of consumers to providers is able to form.</p>
<p>The task of achieving a stable supply of services becomes more challenging for cases where <inline-formula id="inline-formula203-1059712312462247">
<mml:math display="inline" id="math212-1059712312462247">
<mml:mrow>
<mml:mi>V</mml:mi>
<mml:mo>&gt;</mml:mo>
<mml:mn>1</mml:mn>
</mml:mrow>
</mml:math>
</inline-formula>, since providers may choose to switch the service that they offer on the basis of the (local) consumer demand that they experience. However, the performance of the decentralized model was near-optimal for all scenarios where <inline-formula id="inline-formula204-1059712312462247">
<mml:math display="inline" id="math213-1059712312462247">
<mml:mrow>
<mml:mi>V</mml:mi>
<mml:mo>∈</mml:mo>
<mml:mo stretchy="false">[</mml:mo>
<mml:mn>2</mml:mn>
<mml:mo>,</mml:mo>
<mml:mn>3</mml:mn>
<mml:mo>,</mml:mo>
<mml:mn>4</mml:mn>
<mml:mo>,</mml:mo>
<mml:mn>5</mml:mn>
<mml:mo>,</mml:mo>
<mml:mn>6</mml:mn>
<mml:mo stretchy="false">]</mml:mo>
</mml:mrow>
</mml:math>
</inline-formula>, reflecting the fact that the organization of information across the agent communities was effective, allowing consumers to establish and interact with an appropriate set of providers (with respect to the desired service type), and thus allowing providers to stabilize their selection of offered services, without the need to continually switch. Since each agent is capable of utilizing only a subset of the locally available information due to the limited size of their local service registries, this stability emerges from the efficient organization of shared information that evolves across the different agent communities.</p>
<p>This efficient organization is captured by the assortativity metric described in Section 4.1 which summarizes the way in which the contents of agent registries correlated with their service demands. This metric distills information on which providers are known (and utilized) by which consumers into a measure of the coherence of a system’s communities. Low values suggest a lack of any community structure, whereas high values reflect distinct communities with very few links between each community.</p>
<p>A strongly assortative community structure was achieved by the decentralized model independent of the number of different service types required by the consumer community. <xref ref-type="fig" rid="fig8-1059712312462247">Figure 8</xref> illustrates that this level of assortativity is achieved rapidly in the decentralized model and at a rate that is independent of demand variety, <inline-formula id="inline-formula205-1059712312462247">
<mml:math display="inline" id="math214-1059712312462247">
<mml:mrow>
<mml:mi>V</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula>. Hence, unlike the centralized model, decentralized system performance scales well with demand variety.</p>
<fig id="fig8-1059712312462247" position="float">
<label>Figure 8.</label>
<caption>
<p>A strongly assortative community structure is achieved rapidly. The rate of convergence is independent of demand variety. Each curve represents a single representative run: where <inline-formula id="inline-formula206-1059712312462247">
<mml:math display="inline" id="math215-1059712312462247">
<mml:mrow>
<mml:mi>V</mml:mi>
<mml:mo>=</mml:mo>
<mml:mn>3</mml:mn>
</mml:mrow>
</mml:math>
</inline-formula> (dotted line), <inline-formula id="inline-formula207-1059712312462247">
<mml:math display="inline" id="math216-1059712312462247">
<mml:mrow>
<mml:mi>V</mml:mi>
<mml:mo>=</mml:mo>
<mml:mn>4</mml:mn>
</mml:mrow>
</mml:math>
</inline-formula> (dashed line) and <inline-formula id="inline-formula208-1059712312462247">
<mml:math display="inline" id="math217-1059712312462247">
<mml:mrow>
<mml:mi>V</mml:mi>
<mml:mo>=</mml:mo>
<mml:mn>6</mml:mn>
</mml:mrow>
</mml:math>
</inline-formula> (solid line).</p>
</caption>
<graphic xlink:href="10.1177_1059712312462247-fig8.tif"/>
</fig>
<p>The resulting network topologies are illustrated in <xref ref-type="fig" rid="fig9-1059712312462247">Figure 9(a)</xref> for the scenario <inline-formula id="inline-formula209-1059712312462247">
<mml:math display="inline" id="math218-1059712312462247">
<mml:mrow>
<mml:mi>V</mml:mi>
<mml:mo>=</mml:mo>
<mml:mn>3</mml:mn>
</mml:mrow>
</mml:math>
</inline-formula>. In this topology, nodes represent providers, and edges represent the case where both providers are known by at least one consumer, and the weight of this edge represents the cardinality of the set of consumers that know the two providers. At <inline-formula id="inline-formula210-1059712312462247">
<mml:math display="inline" id="math219-1059712312462247">
<mml:mrow>
<mml:mi>t</mml:mi>
<mml:mo>=</mml:mo>
<mml:mn>20</mml:mn>
</mml:mrow>
</mml:math>
</inline-formula> s there is little evidence of any community structure, and the links between providers offering different types of services suggests that there is little organization in the information being shared by the consumer population. This is supported by the fact that the edges between providers are generally weak, suggesting that provider pairs are known by comparatively few consumers.</p>
<fig id="fig9-1059712312462247" position="float">
<label>Figure 9.</label>
<caption>
<p>Network representing the organization of a model with <inline-formula id="inline-formula211-1059712312462247">
<mml:math display="inline" id="math220-1059712312462247">
<mml:mrow>
<mml:mi>V</mml:mi>
<mml:mo>=</mml:mo>
<mml:mn>3</mml:mn>
</mml:mrow>
</mml:math>
</inline-formula> at different times in the simulation, illustrating the formation of communities. Links indicate relations between providers offering the following service types: <inline-formula id="inline-formula212-1059712312462247">
<mml:math display="inline" id="math221-1059712312462247">
<mml:mrow>
<mml:mi>A</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula> (box), <inline-formula id="inline-formula213-1059712312462247">
<mml:math display="inline" id="math222-1059712312462247">
<mml:mrow>
<mml:mi>B</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula> (diamond) and <inline-formula id="inline-formula214-1059712312462247">
<mml:math display="inline" id="math223-1059712312462247">
<mml:mrow>
<mml:mi>C</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula> (triangle). Solid circles are singleton nodes, i.e. each is a provider that is only known by one consumer.</p>
</caption>
<graphic xlink:href="10.1177_1059712312462247-fig9.tif"/>
</fig>
<p>However, the rapid increase in community strength over time in <xref ref-type="fig" rid="fig8-1059712312462247">Figure 8</xref> demonstrates that this initial system instability recedes due to the formation of strong local communities which are homogeneous with respect to service type. By <inline-formula id="inline-formula215-1059712312462247">
<mml:math display="inline" id="math224-1059712312462247">
<mml:mrow>
<mml:mi>t</mml:mi>
<mml:mo>=</mml:mo>
<mml:mn>80</mml:mn>
</mml:mrow>
</mml:math>
</inline-formula> s, the scenarios generally converge to stable configurations, where providers rarely switch to other service types, and consumers resolve any request conflicts by identifying those providers that are in less demand within the community. The corresponding network topology at time <inline-formula id="inline-formula216-1059712312462247">
<mml:math display="inline" id="math225-1059712312462247">
<mml:mrow>
<mml:mi>t</mml:mi>
<mml:mo>=</mml:mo>
<mml:mn>250</mml:mn>
</mml:mrow>
</mml:math>
</inline-formula> s is also illustrated in <xref ref-type="fig" rid="fig9-1059712312462247">Figure 9(b)</xref>, where three distinct and highly connected communities have formed. The strongest edges (corresponding to cardinalities approaching 40 pairs of providers) within the network are those between providers that offer the same service type (typically found within a local community), whereas the weakest connections mainly exist between communities. In the absence of external perturbation (e.g. changes in consumer demand, or removal of providers) community structure remains stable, i.e. communities do not change in size, providers do not reconfigure and consumers interact with the appropriate community.</p>
<p>The rapid community convergence observed for those scenarios where <inline-formula id="inline-formula217-1059712312462247">
<mml:math display="inline" id="math226-1059712312462247">
<mml:mrow>
<mml:mi>V</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula> was high (<xref ref-type="fig" rid="fig8-1059712312462247">Figure 8</xref>) suggest that there may be processes that catalyse the efficient organization of interactions between consumers and providers, such that the allocation of services to the most appropriate providers emerges to be both stable and efficient at the global level. To explore this, an analysis of community strength was conducted for both consumer and provider service registries for the scenario where <inline-formula id="inline-formula218-1059712312462247">
<mml:math display="inline" id="math227-1059712312462247">
<mml:mrow>
<mml:mi>V</mml:mi>
<mml:mo>=</mml:mo>
<mml:mn>5</mml:mn>
</mml:mrow>
</mml:math>
</inline-formula>. The network topology for consumers is presented in <xref ref-type="fig" rid="fig10-1059712312462247">Figure 10(a)</xref>, where five separate communities (corresponding to the five available service types) are clearly visible, with strong edges within the communities (where the providers have a mean assortativity value of <inline-formula id="inline-formula219-1059712312462247">
<mml:math display="inline" id="math228-1059712312462247">
<mml:mrow>
<mml:mn>0</mml:mn>
<mml:mo>.</mml:mo>
<mml:mn>94</mml:mn>
</mml:mrow>
</mml:math>
</inline-formula>) and weak edges between communities.</p>
<fig id="fig10-1059712312462247" position="float">
<label>Figure 10.</label>
<caption>
<p>Networks representing the organization of a model with <inline-formula id="inline-formula220-1059712312462247">
<mml:math display="inline" id="math229-1059712312462247">
<mml:mrow>
<mml:mi>V</mml:mi>
<mml:mo>=</mml:mo>
<mml:mn>5</mml:mn>
</mml:mrow>
</mml:math>
</inline-formula> at <inline-formula id="inline-formula221-1059712312462247">
<mml:math display="inline" id="math230-1059712312462247">
<mml:mrow>
<mml:mi>t</mml:mi>
<mml:mo>=</mml:mo>
<mml:mn>250</mml:mn>
</mml:mrow>
</mml:math>
</inline-formula> s, based on (a) the consumers’ service registries (<inline-formula id="inline-formula222-1059712312462247">
<mml:math display="inline" id="math231-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>R</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>c</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
</inline-formula>) and (b) the provider’s registries (<inline-formula id="inline-formula223-1059712312462247">
<mml:math display="inline" id="math232-1059712312462247">
<mml:mrow>
<mml:mi>S</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula>). The links indicate relations between providers offering the following service types: <inline-formula id="inline-formula224-1059712312462247">
<mml:math display="inline" id="math233-1059712312462247">
<mml:mrow>
<mml:mi>A</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula> (box), <inline-formula id="inline-formula225-1059712312462247">
<mml:math display="inline" id="math234-1059712312462247">
<mml:mrow>
<mml:mi>B</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula> (diamond), <inline-formula id="inline-formula226-1059712312462247">
<mml:math display="inline" id="math235-1059712312462247">
<mml:mrow>
<mml:mi>C</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula> (triangle), <inline-formula id="inline-formula227-1059712312462247">
<mml:math display="inline" id="math236-1059712312462247">
<mml:mrow>
<mml:mi>D</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula> (solid box) and <inline-formula id="inline-formula228-1059712312462247">
<mml:math display="inline" id="math237-1059712312462247">
<mml:mrow>
<mml:mi>E</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula> (solid diamond). Solid circles are singleton nodes, i.e. each is a provider that is only known by one consumer.</p>
</caption>
<graphic xlink:href="10.1177_1059712312462247-fig10.tif"/>
</fig>
<p>Providers organize their information corresponding to service type (see Section 3.2), which can result in information corresponding to those service types not currently offered by a stable provider becoming stale. This is due to the fact that providers will rarely interact with consumers desiring alternate service types. Thus, to analyse the providers’ registries (i.e. <inline-formula id="inline-formula229-1059712312462247">
<mml:math display="inline" id="math238-1059712312462247">
<mml:mrow>
<mml:mi>S</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula>), the assortativity metric should be modified, so that only information that is recent is considered by the modified metric. The resulting network topology for providers is presented in <xref ref-type="fig" rid="fig10-1059712312462247">Figure 10(b)</xref>, which reveals the existence of five distinct community structures (with mean strength equal to <inline-formula id="inline-formula230-1059712312462247">
<mml:math display="inline" id="math239-1059712312462247">
<mml:mrow>
<mml:mn>0</mml:mn>
<mml:mo>.</mml:mo>
<mml:mn>83</mml:mn>
</mml:mrow>
</mml:math>
</inline-formula>).</p>
</sec>
</sec>
<sec id="section19-1059712312462247">
<title>4.3 Dynamic service demand</title>
<p>The analysis in the previous section confirms the hypothesis that stable community structures form such that the supply of services can organize to satisfy service demand (provided that sufficient resources are available). However, this assumes that the demand is static and fixed. In this section, the validity of Hypothesis 2 is explored, whereby the stability of communities that emerge from the stimulus–response behaviour of the model is explored in a highly dynamic environment where service demand is continually changing.</p>
<sec id="section20-1059712312462247">
<title>4.3.1 Scenario configuration</title>
<p>To investigate the performance of limiting the size (<inline-formula id="inline-formula231-1059712312462247">
<mml:math display="inline" id="math240-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>m</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>c</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
</inline-formula>) of consumer service registries (and, hence, information flow), and compare it with the case where complete information is available, the scenario was modified to facilitate changes in service demand over time. For all providers in this scenario, <inline-formula id="inline-formula232-1059712312462247">
<mml:math display="inline" id="math241-1059712312462247">
<mml:mrow>
<mml:mi>Capability</mml:mi>
<mml:mo>=</mml:mo>
<mml:mo stretchy="false">{</mml:mo>
<mml:mi>A</mml:mi>
<mml:mo>,</mml:mo>
<mml:mi>B</mml:mi>
<mml:mo stretchy="false">}</mml:mo>
</mml:mrow>
</mml:math>
</inline-formula>, and thus <inline-formula id="inline-formula233-1059712312462247">
<mml:math display="inline" id="math242-1059712312462247">
<mml:mrow>
<mml:mi>V</mml:mi>
<mml:mo>=</mml:mo>
<mml:mo stretchy="false">|</mml:mo>
<mml:mi>Capability</mml:mi>
<mml:mo stretchy="false">|</mml:mo>
<mml:mo>=</mml:mo>
<mml:mn>2</mml:mn>
</mml:mrow>
</mml:math>
</inline-formula> for all providers in this scenario. The service capacity for each provider is restricted to satisfying two service requests at any time, i.e. <inline-formula id="inline-formula234-1059712312462247">
<mml:math display="inline" id="math243-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>C</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>A</mml:mi>
</mml:mrow>
</mml:msub>
<mml:mo>=</mml:mo>
<mml:msub>
<mml:mrow>
<mml:mi>C</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>B</mml:mi>
</mml:mrow>
</mml:msub>
<mml:mo>=</mml:mo>
<mml:mn>2</mml:mn>
</mml:mrow>
</mml:math>
</inline-formula> (<xref ref-type="table" rid="table3-1059712312462247">Table 3</xref>).</p>
<table-wrap id="table3-1059712312462247" position="float">
<label>Table 3.</label>
<caption>
<p>Parameters used for the scenario when service demand is dynamic</p>
</caption>
<graphic alternate-form-of="table3-1059712312462247" xlink:href="10.1177_1059712312462247-table3.tif"/>
<table>
<colgroup>
<col align="left"/>
<col align="left"/>
<col align="char" char="."/>
<col align="char" char="."/>
<col align="char" char="."/>
</colgroup>
<thead>
<tr>
<th align="left">
<inline-formula id="inline-formula235-1059712312462247">
<mml:math display="inline" id="math244-1059712312462247">
<mml:mrow>
<mml:mi>V</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula></th>
<th align="left">Set of service types (<inline-formula id="inline-formula236-1059712312462247">
<mml:math display="inline" id="math245-1059712312462247">
<mml:mrow>
<mml:mi>Capability</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula>)</th>
<th align="left">Number of consumers</th>
<th align="left">Number of providers</th>
<th align="left">Service capacity <inline-formula id="inline-formula237-1059712312462247">
<mml:math display="inline" id="math246-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>C</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>type</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
</inline-formula></th>
</tr>
</thead>
<tbody>
<tr>
<td>2</td>
<td><inline-formula id="inline-formula238-1059712312462247">
<mml:math display="inline" id="math247-1059712312462247">
<mml:mrow>
<mml:mo stretchy="false">{</mml:mo>
<mml:mi>A</mml:mi>
<mml:mo>,</mml:mo>
<mml:mi>B</mml:mi>
<mml:mo stretchy="false">}</mml:mo>
</mml:mrow>
</mml:math>
</inline-formula></td>
<td>120</td>
<td>60</td>
<td>2</td>
</tr>
</tbody>
</table>
</table-wrap>
<p>Consumer demand varies exogenously, with demand for service type <inline-formula id="inline-formula239-1059712312462247">
<mml:math display="inline" id="math248-1059712312462247">
<mml:mrow>
<mml:mi>A</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula>, oscillating in anti-phase with the demand for service type <inline-formula id="inline-formula240-1059712312462247">
<mml:math display="inline" id="math249-1059712312462247">
<mml:mrow>
<mml:mi>B</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula>. This variation is implemented by altering the average sleep period that consumers undergo between successive service requests. Thus, when the average sleep period for consumers requesting <inline-formula id="inline-formula241-1059712312462247">
<mml:math display="inline" id="math250-1059712312462247">
<mml:mrow>
<mml:mi>A</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula> is longer than that for consumers requesting <inline-formula id="inline-formula242-1059712312462247">
<mml:math display="inline" id="math251-1059712312462247">
<mml:mrow>
<mml:mi>B</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula>, then the demand for providers of service type <inline-formula id="inline-formula243-1059712312462247">
<mml:math display="inline" id="math252-1059712312462247">
<mml:mrow>
<mml:mi>B</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula> will effectively be greater. The sleep period is defined as</p>
<p><disp-formula id="disp-formula10-1059712312462247">
<mml:math display="block" id="math253-1059712312462247">
<mml:mrow>
<mml:mi>slee</mml:mi>
<mml:msub>
<mml:mrow>
<mml:mi>p</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>type</mml:mi>
</mml:mrow>
</mml:msub>
<mml:mo>=</mml:mo>
<mml:mi>rand</mml:mi>
<mml:mo>+</mml:mo>
<mml:msub>
<mml:mrow>
<mml:mi>δ</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>type</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
<graphic alternate-form-of="disp-formula10-1059712312462247" xlink:href="10.1177_1059712312462247-eq10.tif"/>
</disp-formula></p>
<p>where <inline-formula id="inline-formula244-1059712312462247">
<mml:math display="inline" id="math254-1059712312462247">
<mml:mrow>
<mml:mi>rand</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula> is a random value drawn from the range <inline-formula id="inline-formula245-1059712312462247">
<mml:math display="inline" id="math255-1059712312462247">
<mml:mrow>
<mml:mo stretchy="false">[</mml:mo>
<mml:mn>0</mml:mn>
<mml:mo>,</mml:mo>
<mml:mi>ω</mml:mi>
<mml:mo stretchy="false">]</mml:mo>
</mml:mrow>
</mml:math>
</inline-formula>, and <inline-formula id="inline-formula246-1059712312462247">
<mml:math display="inline" id="math256-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>δ</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>type</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
</inline-formula> is derived from the sinusoidal function of time (illustrated in <xref ref-type="fig" rid="fig11-1059712312462247">Figure 11</xref>). Thus, by varying <inline-formula id="inline-formula247-1059712312462247">
<mml:math display="inline" id="math257-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>δ</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>A</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
</inline-formula> and a corresponding <inline-formula id="inline-formula248-1059712312462247">
<mml:math display="inline" id="math258-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>δ</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>B</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
</inline-formula> which is <inline-formula id="inline-formula249-1059712312462247">
<mml:math display="inline" id="math259-1059712312462247">
<mml:mrow>
<mml:mn>180</mml:mn>
<mml:mo>∘</mml:mo>
</mml:mrow>
</mml:math>
</inline-formula> out of phase, a symmetrical change in demand can be achieved for the two services. To allow the system to achieve a steady state, demand for both types of service is equal and constant for the first <inline-formula id="inline-formula250-1059712312462247">
<mml:math display="inline" id="math260-1059712312462247">
<mml:mrow>
<mml:mn>200</mml:mn>
</mml:mrow>
</mml:math>
</inline-formula> s<sup><xref ref-type="fn" rid="fn11-1059712312462247">11</xref></sup></p>
<p>Within each evaluation, several simulation runs were performed with different service registry, or memory sizes, <inline-formula id="inline-formula251-1059712312462247">
<mml:math display="inline" id="math261-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>m</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>c</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
</inline-formula>, to evaluate the model with limited information retention, and these results were contrasted with a global information model.</p>
<fig id="fig11-1059712312462247" position="float">
<label>Figure 11.</label>
<caption>
<p>Variance of <inline-formula id="inline-formula252-1059712312462247">
<mml:math display="inline" id="math262-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>δ</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>type</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
</inline-formula> parameter stimulating the change in demand of services, for type <inline-formula id="inline-formula253-1059712312462247">
<mml:math display="inline" id="math263-1059712312462247">
<mml:mrow>
<mml:mi>A</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula> (dotted line) and <inline-formula id="inline-formula254-1059712312462247">
<mml:math display="inline" id="math264-1059712312462247">
<mml:mrow>
<mml:mi>B</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula> (continuous line).</p>
</caption>
<graphic xlink:href="10.1177_1059712312462247-fig11.tif"/>
</fig>
</sec>
<sec id="section21-1059712312462247">
<title>4.3.2 Evaluation and analysis</title>
<p><xref ref-type="fig" rid="fig12-1059712312462247">Figure 12</xref> illustrates the mean performance of the model with respect to <inline-formula id="inline-formula255-1059712312462247">
<mml:math display="inline" id="math265-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>m</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>c</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
</inline-formula>. The graphs are normalized with respect to the optimal system performance experienced by the system in equilibrium during steady state (i.e. when service demand is satisfied by supply such than no reconfiguration of providers is necessary). An analysis of the model’s efficiency in successfully satisfying service requests for different sizes of memory (<xref ref-type="fig" rid="fig12-1059712312462247">Figure 12</xref>) reveals that the system efficiently satisfies service requests only for certain cases where <inline-formula id="inline-formula256-1059712312462247">
<mml:math display="inline" id="math266-1059712312462247">
<mml:mrow>
<mml:mn>4</mml:mn>
<mml:mo>&lt;</mml:mo>
<mml:msub>
<mml:mrow>
<mml:mi>m</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>c</mml:mi>
</mml:mrow>
</mml:msub>
<mml:mo>&lt;</mml:mo>
<mml:mn>12</mml:mn>
</mml:mrow>
</mml:math>
</inline-formula>. In addition, the level of information flow between consumers is low under such conditions, suggesting that the distribution of knowledge across different consumers regarding local providers is relatively stable. However, for memory sizes outside this range, performance falls to a level below that achieved if global knowledge was available (<inline-formula id="inline-formula257-1059712312462247">
<mml:math display="inline" id="math267-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>m</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>c</mml:mi>
</mml:mrow>
</mml:msub>
<mml:mo>=</mml:mo>
<mml:mi>∞</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula>), where the flow of information between consumers is maximized.</p>
<fig id="fig12-1059712312462247" position="float">
<label>Figure 12.</label>
<caption>
<p>The mean system throughput for different memory retention sizes (i.e. varying <inline-formula id="inline-formula258-1059712312462247">
<mml:math display="inline" id="math268-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>m</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>c</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
</inline-formula>). The dotted line corresponds to the case where <inline-formula id="inline-formula259-1059712312462247">
<mml:math display="inline" id="math269-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>m</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>c</mml:mi>
</mml:mrow>
</mml:msub>
<mml:mo>=</mml:mo>
<mml:mi>∞</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula>.</p>
</caption>
<graphic xlink:href="10.1177_1059712312462247-fig12.tif"/>
</fig>
<p>Three general types of behaviour can be observed, based on the way in which the model responds to changing conditions for different memory sizes. These are captured in <xref ref-type="fig" rid="fig13-1059712312462247">Figure 13</xref>, which illustrates the behaviour emerging from three representative cases (i.e. <inline-formula id="inline-formula260-1059712312462247">
<mml:math display="inline" id="math270-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>m</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>c</mml:mi>
</mml:mrow>
</mml:msub>
<mml:mo>∈</mml:mo>
<mml:mo stretchy="false">{</mml:mo>
<mml:mn>2</mml:mn>
<mml:mo>,</mml:mo>
<mml:mn>5</mml:mn>
<mml:mo>,</mml:mo>
<mml:mn>20</mml:mn>
<mml:mo stretchy="false">}</mml:mo>
</mml:mrow>
</mml:math>
</inline-formula>). When <inline-formula id="inline-formula261-1059712312462247">
<mml:math display="inline" id="math271-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>m</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>c</mml:mi>
</mml:mrow>
</mml:msub>
<mml:mo>=</mml:mo>
<mml:mn>2</mml:mn>
</mml:mrow>
</mml:math>
</inline-formula> (<xref ref-type="fig" rid="fig13-1059712312462247">Figure 13</xref> empty rectangles), the performance degrades as a result of the consumers’ inability to resolve service request conflicts in a timely manner. As a result, the stress level grows within an increasing number of unsatisfied consumers. This catalyses the re-organization and sharing of the consumer’s local knowledge, resulting in the acquisition of knowledge about new providers which are likely to be more suitable to the consumer’s tasks. However, given the high volume of shared information from stressed consumers, providers become selective regarding the information they retain. Since the number of retained types is so small, information loss occurs, resulting in the formation of isolated groups of agents aware of only small groups of providers, which are unable to propagate this information to other, similar groups.</p>
<fig id="fig13-1059712312462247" position="float">
<label>Figure 13.</label>
<caption>
<p>The performance (i.e. system throughput) of four system configurations with differing memory sizes: <inline-formula id="inline-formula262-1059712312462247">
<mml:math display="inline" id="math272-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>m</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>c</mml:mi>
</mml:mrow>
</mml:msub>
<mml:mo>=</mml:mo>
<mml:mn>2</mml:mn>
</mml:mrow>
</mml:math>
</inline-formula> (empty rectangles), <inline-formula id="inline-formula263-1059712312462247">
<mml:math display="inline" id="math273-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>m</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>c</mml:mi>
</mml:mrow>
</mml:msub>
<mml:mo>=</mml:mo>
<mml:mn>5</mml:mn>
</mml:mrow>
</mml:math>
</inline-formula> (solid rectangles), <inline-formula id="inline-formula264-1059712312462247">
<mml:math display="inline" id="math274-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>m</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>c</mml:mi>
</mml:mrow>
</mml:msub>
<mml:mo>=</mml:mo>
<mml:mn>20</mml:mn>
</mml:mrow>
</mml:math>
</inline-formula> (empty circles) and <inline-formula id="inline-formula265-1059712312462247">
<mml:math display="inline" id="math275-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>m</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>c</mml:mi>
</mml:mrow>
</mml:msub>
<mml:mo>=</mml:mo>
<mml:mi>∞</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula> (solid circles).</p>
</caption>
<graphic xlink:href="10.1177_1059712312462247-fig13.tif"/>
</fig>
<p>The model for <inline-formula id="inline-formula266-1059712312462247">
<mml:math display="inline" id="math276-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>m</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>c</mml:mi>
</mml:mrow>
</mml:msub>
<mml:mo>=</mml:mo>
<mml:mn>5</mml:mn>
</mml:mrow>
</mml:math>
</inline-formula> exemplifies a scenario in which efficient performance is exhibited (<xref ref-type="fig" rid="fig13-1059712312462247">Figure 13</xref> solid rectangles). In this case, the model responds smoothly to changes in demand, due to the fact that the consumers’ service registries are large enough to retain some information about local consumers despite the change in demand, but small enough that little of the new information exchanged is retained, and hence does not compromise future service provision. As a consequence, there are comparatively few consumers that experience stress high enough to necessitate a continual reorganization of the local service registry (as in the case when <inline-formula id="inline-formula267-1059712312462247">
<mml:math display="inline" id="math277-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>m</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>c</mml:mi>
</mml:mrow>
</mml:msub>
<mml:mo>=</mml:mo>
<mml:mn>2</mml:mn>
</mml:mrow>
</mml:math>
</inline-formula>), and thus require new information (less than 10%). This also limits the number of providers that observe large changes in service demand, and thus reduces the number of providers that subsequently switch services. The way in which providers switch services in response to the changes in demand is illustrated in <xref ref-type="fig" rid="fig14-1059712312462247">Figure 14</xref>. During the initial 200 s, local communities start to form corresponding to the two service types, with roughly equal numbers of providers supporting each community. However, as the demand for one service type increases, the level of reorganization experienced by the consumer population is limited, and thus the number of providers that switch matches the resulting demand, yielding a stable, but dynamic environment.</p>
<fig id="fig14-1059712312462247" position="float">
<label>Figure 14.</label>
<caption>
<p>The number of resources currently offering service of type <inline-formula id="inline-formula268-1059712312462247">
<mml:math display="inline" id="math278-1059712312462247">
<mml:mrow>
<mml:mi>B</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula> with respect to changing demand for <inline-formula id="inline-formula269-1059712312462247">
<mml:math display="inline" id="math279-1059712312462247">
<mml:mrow>
<mml:mi>B</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula> (dotted lines) for two system configurations: solid rectangles (<inline-formula id="inline-formula270-1059712312462247">
<mml:math display="inline" id="math280-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>m</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>c</mml:mi>
</mml:mrow>
</mml:msub>
<mml:mo>=</mml:mo>
<mml:mn>5</mml:mn>
</mml:mrow>
</mml:math>
</inline-formula>) and empty rectangles (<inline-formula id="inline-formula271-1059712312462247">
<mml:math display="inline" id="math281-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>m</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>c</mml:mi>
</mml:mrow>
</mml:msub>
<mml:mo>=</mml:mo>
<mml:mn>20</mml:mn>
</mml:mrow>
</mml:math>
</inline-formula>).</p>
</caption>
<graphic xlink:href="10.1177_1059712312462247-fig14.tif"/>
</fig>
<p>As the number of known providers increases (e.g. in the case where <inline-formula id="inline-formula272-1059712312462247">
<mml:math display="inline" id="math282-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>m</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>c</mml:mi>
</mml:mrow>
</mml:msub>
<mml:mo>=</mml:mo>
<mml:mn>20</mml:mn>
</mml:mrow>
</mml:math>
</inline-formula>), the performance becomes degenerate (empty circles in <xref ref-type="fig" rid="fig13-1059712312462247">Figure 13</xref>). In this case, as consumers become stressed due to increases in service demand, they exchange and retain larger quantities of information regarding new providers. This compromises their ability to successfully locate service providers, as there will be greater competition for the highest ranking ones. This leads to an increase in the stress of the consumers, which in turn exerts unnecessary pressure on providers to switch due to a continuous and elevated exchange of information. Thus, the equilibrium destabilizes, as providers fail to respond to changes in the service demand (as illustrated by the empty rectangles in <xref ref-type="fig" rid="fig14-1059712312462247">Figure 14</xref>), and the community structure is lost.</p>
<p>The case where <inline-formula id="inline-formula273-1059712312462247">
<mml:math display="inline" id="math283-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>m</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>c</mml:mi>
</mml:mrow>
</mml:msub>
<mml:mo>=</mml:mo>
<mml:mi>∞</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula> corresponds to that where global information is available to all agents (solid circles on <xref ref-type="fig" rid="fig13-1059712312462247">Figure 13</xref>). In this case, herding occurs, where a large number of consumers ends up crowding for the most attractive providers. As the number of requests that can simultaneously be satisfied is small (<inline-formula id="inline-formula274-1059712312462247">
<mml:math display="inline" id="math284-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>C</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>type</mml:mi>
</mml:mrow>
</mml:msub>
<mml:mo>=</mml:mo>
<mml:mn>2</mml:mn>
</mml:mrow>
</mml:math>
</inline-formula> for these experiments), a substantial number of requests are rejected, resulting in large numbers of new queries being issued. This results in an increase in stress experienced by a large number of consumers, which increases the pressure on providers to continually switch, thus further destabilizing any community structure. The resulting behaviour of providers (which offer services of a given type) varies in a similar way to that observed when <inline-formula id="inline-formula275-1059712312462247">
<mml:math display="inline" id="math285-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>m</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>c</mml:mi>
</mml:mrow>
</mml:msub>
<mml:mo>=</mml:mo>
<mml:mn>20</mml:mn>
</mml:mrow>
</mml:math>
</inline-formula> (empty rectangles in <xref ref-type="fig" rid="fig14-1059712312462247">Figure 14</xref>).</p>
<p>A system that effectively manages service provision can be characterized by a community structure that is stable enough to sustain internal reorganization. Therefore, to better understand the relationship between the model performance and the manner in which agents share local information, an analysis of the community strength (using the assortativity metric defined in Section 4.1), was used. <xref ref-type="fig" rid="fig15-1059712312462247">Figure 15</xref> plots the assortativity strength of consumers against time for two different scenarios; where <inline-formula id="inline-formula276-1059712312462247">
<mml:math display="inline" id="math286-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>m</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>c</mml:mi>
</mml:mrow>
</mml:msub>
<mml:mo>=</mml:mo>
<mml:mn>5</mml:mn>
</mml:mrow>
</mml:math>
</inline-formula> (<xref ref-type="fig" rid="fig15-1059712312462247">Figure 15(a)</xref>) and <inline-formula id="inline-formula277-1059712312462247">
<mml:math display="inline" id="math287-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>m</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>c</mml:mi>
</mml:mrow>
</mml:msub>
<mml:mo>=</mml:mo>
<mml:mn>20</mml:mn>
</mml:mrow>
</mml:math>
</inline-formula> (<xref ref-type="fig" rid="fig15-1059712312462247">Figure 15(b)</xref>).</p>
<fig id="fig15-1059712312462247" position="float">
<label>Figure 15.</label>
<caption>
<p>The assortativity strength for communities providing service types <inline-formula id="inline-formula278-1059712312462247">
<mml:math display="inline" id="math288-1059712312462247">
<mml:mrow>
<mml:mi>A</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula> and <inline-formula id="inline-formula279-1059712312462247">
<mml:math display="inline" id="math289-1059712312462247">
<mml:mrow>
<mml:mi>B</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula> over time. The triangles represents community strength for service community <inline-formula id="inline-formula280-1059712312462247">
<mml:math display="inline" id="math290-1059712312462247">
<mml:mrow>
<mml:mi>A</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula> (where <inline-formula id="inline-formula281-1059712312462247">
<mml:math display="inline" id="math291-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>m</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>c</mml:mi>
</mml:mrow>
</mml:msub>
<mml:mo>=</mml:mo>
<mml:mn>5</mml:mn>
</mml:mrow>
</mml:math>
</inline-formula>), whereas the circles represent the corresponding community strength for community <inline-formula id="inline-formula282-1059712312462247">
<mml:math display="inline" id="math292-1059712312462247">
<mml:mrow>
<mml:mi>B</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula>. The rectangles and crosses denote the corresponding populations (for <inline-formula id="inline-formula283-1059712312462247">
<mml:math display="inline" id="math293-1059712312462247">
<mml:mrow>
<mml:mi>A</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula> and <inline-formula id="inline-formula284-1059712312462247">
<mml:math display="inline" id="math294-1059712312462247">
<mml:mrow>
<mml:mi>B</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula>) when <inline-formula id="inline-formula285-1059712312462247">
<mml:math display="inline" id="math295-1059712312462247">
<mml:mrow>
<mml:mo stretchy="false">(</mml:mo>
<mml:msub>
<mml:mrow>
<mml:mi>m</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>c</mml:mi>
</mml:mrow>
</mml:msub>
<mml:mo>=</mml:mo>
<mml:mn>20</mml:mn>
<mml:mo stretchy="false">)</mml:mo>
</mml:mrow>
</mml:math>
</inline-formula>.</p>
</caption>
<graphic xlink:href="10.1177_1059712312462247-fig15.tif"/>
</fig>
<p>As the consumers experience increased stress due to rising demand for a given service type, they exert increasing pressure on the providers to satisfy this demand, which in turn strengthens the community structure. In the scenario explored within <xref ref-type="fig" rid="fig15-1059712312462247">Figure 15(a)</xref>, the community strength approached <inline-formula id="inline-formula286-1059712312462247">
<mml:math display="inline" id="math296-1059712312462247">
<mml:mrow>
<mml:mn>0</mml:mn>
<mml:mo>.</mml:mo>
<mml:mn>9</mml:mn>
</mml:mrow>
</mml:math>
</inline-formula> as the demand for a service type reached its peak; reflecting the fact that the majority of knowledge retained by the consumers was correctly identifying relevant providers. Correspondingly, as the service demand falls, the strength of the community decreases accordingly. <xref ref-type="fig" rid="fig15-1059712312462247">Figure 15(b)</xref> illustrates the pathological case, whereby larger memory size (<inline-formula id="inline-formula287-1059712312462247">
<mml:math display="inline" id="math297-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>m</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>c</mml:mi>
</mml:mrow>
</mml:msub>
<mml:mo>=</mml:mo>
<mml:mn>20</mml:mn>
</mml:mrow>
</mml:math>
</inline-formula>) causes providers to switch far too frequently, compromising the ability of consumers to effectively locate relevant providers. In this case, the community strength becomes erratic, and no longer varies in phase with changes in service demand.</p>
<p>These results suggest that the formation of strong and adaptive communities (i.e. those that exhibit high assortativity) is accompanied by good system performance and a robust response to varying demand. Recall that service provision depends on the co-adaptive stability between agents responding to locally perceived changes. The formation of a strong community by agents interested in a particular service type yields an exchange of information that is constrained. If a community is strong, knowledge passed to consumers can be exploited to induce a small subset of providers to switch service types, minimizing the risk of destabilizing the availability of services to other consumers in other local communities. This raises the question of how strong should a community be in order to support this process optimally? A tightly linked community (where community strength approaches one) could prevent reorganization when there are changes in demand. However, if the community is too weak, then the availability of services will be destabilized. A second question thus arises: under what conditions is such a system capable of forming strong communities? As demonstrated in this paper, simply varying the amount of information available to agents is sufficient to bring about changes in system behaviour: from being too disconnected, to effectively evolving self-organizing communities, and eventually to a configuration where agents regress into a chaotic flux.</p>
<p><xref ref-type="fig" rid="fig16-1059712312462247">Figure 16</xref> plots the community strength as a function of memory size. In those cases where the size is too small or too big, degenerate behaviour results, similar to that illustrated in <xref ref-type="fig" rid="fig15-1059712312462247">Figure 15(b)</xref>. For those cases where <inline-formula id="inline-formula288-1059712312462247">
<mml:math display="inline" id="math298-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>m</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>c</mml:mi>
</mml:mrow>
</mml:msub>
<mml:mo>∈</mml:mo>
<mml:mo stretchy="false">{</mml:mo>
<mml:mn>2</mml:mn>
<mml:mo>,</mml:mo>
<mml:mn>3</mml:mn>
<mml:mo stretchy="false">}</mml:mo>
</mml:mrow>
</mml:math>
</inline-formula>, consumers retain insufficient knowledge to successfully facilitate a useful flow of information as the environment changes. In contrast, when the memory size is large (i.e. <inline-formula id="inline-formula289-1059712312462247">
<mml:math display="inline" id="math299-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>m</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>c</mml:mi>
</mml:mrow>
</mml:msub>
<mml:mo>&gt;</mml:mo>
<mml:mn>15</mml:mn>
</mml:mrow>
</mml:math>
</inline-formula>), consumers retain more information about the environment, and consequently can better stimulate change in the provider population. As levels of stress increase, there is a greater chance that larger numbers of consumers will compete for the most favoured providers, resulting in a feedback loop that escalates stress levels, which increases the pressure on providers to change, yielding further destabilization. It is only within the intermediate range of cases (i.e. <inline-formula id="inline-formula290-1059712312462247">
<mml:math display="inline" id="math300-1059712312462247">
<mml:mrow>
<mml:mn>4</mml:mn>
<mml:mo>≤</mml:mo>
<mml:msub>
<mml:mrow>
<mml:mi>m</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>c</mml:mi>
</mml:mrow>
</mml:msub>
<mml:mo>&lt;</mml:mo>
<mml:mn>15</mml:mn>
</mml:mrow>
</mml:math>
</inline-formula>) that the community strength increases. Here, each agent is able to adapt to changes in the environment effectively, without necessarily being able to identify the globally optimal providers. The close agreement between <xref ref-type="fig" rid="fig16-1059712312462247">Figures 16</xref> and <xref ref-type="fig" rid="fig12-1059712312462247">12</xref> demonstrates that it is the strength of the communities formed through information flowing through the system that directly underpins and accounts for system performance.</p>
<fig id="fig16-1059712312462247" position="float">
<label>Figure 16.</label>
<caption>
<p>The mean community strength as a function of memory size.</p>
</caption>
<graphic xlink:href="10.1177_1059712312462247-fig16.tif"/>
</fig>
</sec>
</sec>
<sec id="section22-1059712312462247">
<title>4.4 Discussion</title>
<p>When first confronted by the problem of configuring computational resources and allocating them in response to varying consumer need, it seems likely that smart enough agents employing probabilistic and possibly collaborative reasoning of some kind might be able to circumvent the ‘herding’ problem. This may indeed be the case, but instead it may be that, as <xref ref-type="bibr" rid="bibr20-1059712312462247">Hogg and Huberman (1991)</xref> concluded, the smarter the agents, the more likely they are to suffer from some kind of co-ordination problem. Our approach here has been to explore whether these potentially intractable co-ordination problems can be avoided by employing much simpler agents and relying on asymmetries in their knowledge state that arise naturally under conditions of only local information flow.</p>
<p>A critical factor in achieving the efficient performance is the organization of knowledge across the consumer and provider populations. A system where consumers successfully organize their local knowledge supports ongoing interaction between providers that can supply the services that the corresponding consumers require. Moreover, such an organization also has the ability to smoothly reconfigure the supply of services in response to changes in demand. By contrast, operating on the wrong information will result in degraded performance due to high numbers of rejected queries and time spent on needlessly reconfiguring service providers. Populations of agents that possess only incomplete local knowledge must therefore rely on the appropriate flow of information in order to keep this knowledge up to date, and coherent enough to be of use. This must be achieved in the absence of any global flow-facilitating mechanisms that determine what information should flow to which agent.</p>
<p>An analysis of the information flow that emerges from the evaluation of our model can provide a number of insights into the dynamics of self-organization and, in particular, how self-organization can emerge from localized decision-making within the context of resource management problems involving configuration of providers to offer services based on locally perceived demand. Although results demonstrate that the size of the local registry containing provider information is one of the critical factors influencing the flow of information between agents in the neighbourhood, and thus the cohesion and stability of the community as a whole, there are other interdependent variables that play an important role in the process. Such variables include: the frequency of information exchange, the quantity of information exchanged in a single exchange transaction, and thus the level of influence an agent has on another agent’s decision making. These variables have been demonstrated to play a key role in achieving self-organization and adaptation for a number of other decentralized architectures (<xref ref-type="bibr" rid="bibr34-1059712312462247">Packard, 1988</xref>; <xref ref-type="bibr" rid="bibr5-1059712312462247">S. A. Brueckner &amp; Parunak, 2003</xref>; <xref ref-type="bibr" rid="bibr18-1059712312462247">Guerin &amp; Kunkle, 2004</xref>). In the model presented in this paper, the extent of exchanged information was dynamically affected by consumer stress (<inline-formula id="inline-formula291-1059712312462247">
<mml:math display="inline" id="math301-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>c</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>s</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
</inline-formula>) which determined the amount of information that both consumer and provider agents were willing to accept. Likewise, the level of consumer stress was an important factor in determining the impact of the consumer, whilst querying the provider for a given service type. Finally, this stress level was also significant in establishing the demand for a scarce resource, and hence encouraging providers to switch the type of service they currently provided. As all of these factors have an impact on how agent interactions evolve, and thus how information flows through the system, we plan to (i) conduct a further investigation to analyse how these parameters affect each other in order to formally identify the synergistic relationship between these parameters and their influence on the dynamic stability of the system, and (ii) to identify efficient techniques for automatically self-regulating them in a decentralized manner based on information available locally to each agent.</p>
<p>This research highlights functional substitutability, i.e. the ability of a component to change its behaviour in response to changes in demand. This is desirable with many scenarios where there is a risk of failure in one component, such as within robotic rescue scenarios (<xref ref-type="bibr" rid="bibr27-1059712312462247">Kitano, 2000</xref>) whereby a robot may be able to perform several different tasks (e.g. sensing, moving, performing actions, etc.), but only a few of these are needed for any given scenario. However, changes in the environment may necessitate corresponding changes in the roles (at run time) that those robots perform. Similar behaviours have been observed within biological systems. In natural ant colonies, it has been observed that within what is often ascribed as a homogeneous community of ants sharing the same behavioural repertoire, there arise leaders that strongly stimulate the actions of other ants by their more frequent activity (<xref ref-type="bibr" rid="bibr12-1059712312462247">Dobrzanski &amp; Dobrzanska, 1987</xref>). Such hyperactive ants stimulate the workload of the colony in every aspect (food foraging, nest building, brood feeding, etc.). Thus, leader and follower roles arise under certain conditions (rather than being inherent, programmed behaviours). However, a complete understanding of this social stimulation process is still unclear.</p>
</sec>
</sec>
<sec id="section23-1059712312462247" sec-type="conclusions">
<title>5 Conclusions</title>
<p>In this paper, we have investigated how a simple stimulus–response mechanism inspired by a study of emergent behaviours within biological systems can be used to facilitate the emergence of stable behaviour in a large multi-agent system. We argue that this approach or something like it is necessary to support collaborative behaviour of large-scale, decentralized IT systems, such as in autonomic computing systems. The paper’s contribution is to demonstrate that constrained information flow can enable simple agents to solve a decentralized co-ordination problem through the self-organization of agent communities. These communities arise spontaneously as a consequence of local gossiping. They reflect the nature of the pressure experienced by the system, are stable, and are capable of smoothly reconfiguring to cope with changes in consumer demand.</p>
<p>Future work will explore scenarios in which the demand for computational resource may outstrip supply (or vice versa), the challenge of combining power management considerations with performance targets in a single autonomic scheme, and the robustness of decentralized behaviour to systemic parameters and the types of system noise and error that characterize real-world environments.</p>
</sec>
</body>
<back>
<ack>
<p>Thanks are due to the SENSe and AIC research groups at the University of Southampton for discussion of these ideas.</p>
</ack>
<fn-group>
<fn fn-type="financial-disclosure">
<label>Funding</label>
<p>The work was partially funded by the Engineering and Physical Science Research Council’s AMORPH grant EP/D00232X/1.</p>
</fn>
</fn-group>
<notes>
<fn-group>
<fn fn-type="other" id="fn1-1059712312462247">
<label>1.</label>
<p>See <ext-link ext-link-type="uri" xlink:href="http://www.research.ibm.com/autonomic/manifesto/autonomiccomputing.pdf">http://www.research.ibm.com/autonomic/manifesto/autonomiccomputing.pdf</ext-link>.</p>
</fn>
<fn fn-type="other" id="fn2-1059712312462247">
<label>2.</label>
<p>By ‘service provision’, we refer to the problem faced by consumer agents in selecting amongst provider agents that offer services (<xref ref-type="bibr" rid="bibr44-1059712312462247">Stein, Jennings, &amp; Payne, 2008</xref>). By contrast, ‘resource allocation’ also includes the complementary problem faced by provider agents in deciding which service(s) to offer.</p>
</fn>
<fn fn-type="other" id="fn3-1059712312462247">
<label>3.</label>
<p>In this context, we refer to the market as a decentralized collection of service providers, that each respond individually, based on their perception of changing service demand, rather than a single, atomic, coordinating entity.</p>
</fn>
<fn fn-type="other" id="fn4-1059712312462247">
<label>4.</label>
<p>The value <inline-formula id="inline-formula292-1059712312462247">
<mml:math display="inline" id="math302-1059712312462247">
<mml:mrow>
<mml:mi>δ</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula>
<sub>bias</sub>= 0.1 was found empirically. The modified bias parameter is limited such that it does not extend beyond its defined range: <inline-formula id="inline-formula293-1059712312462247">
<mml:math display="inline" id="math303-1059712312462247">
<mml:mrow>
<mml:mi>bias</mml:mi>
<mml:mo>∈</mml:mo>
</mml:mrow>
</mml:math>
</inline-formula>[0; 1].</p>
</fn>
<fn fn-type="other" id="fn5-1059712312462247">
<label>5.</label>
<p>The decay coefficient used in this model has the value <inline-formula id="inline-formula294-1059712312462247">
<mml:math display="inline" id="math304-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>δ</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>decay</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
</inline-formula>= 0.9; this value was determined empirically.</p>
</fn>
<fn fn-type="other" id="fn6-1059712312462247">
<label>6.</label>
<p>In the results reported here <inline-formula id="inline-formula295-1059712312462247">
<mml:math display="inline" id="math305-1059712312462247">
<mml:mrow>
<mml:mo>∀</mml:mo>
<mml:msub>
<mml:mrow>
<mml:mi>α</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>p</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
</inline-formula>, Capability<sub>α<sub>p</sub>
</sub> = Capability.</p>
</fn>
<fn fn-type="other" id="fn7-1059712312462247">
<label>7.</label>
<p>The update coefficient used in this model has the value <inline-formula id="inline-formula296-1059712312462247">
<mml:math display="inline" id="math306-1059712312462247">
<mml:mrow>
<mml:msub>
<mml:mrow>
<mml:mi>δ</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mi>update</mml:mi>
</mml:mrow>
</mml:msub>
</mml:mrow>
</mml:math>
</inline-formula> = 0.1; this value was determined empirically.</p>
</fn>
<fn fn-type="other" id="fn8-1059712312462247">
<label>8.</label>
<p>The order of equally biased tuples is arbitrary, and thus may vary whenever the set is inspected.</p>
</fn>
<fn fn-type="other" id="fn9-1059712312462247">
<label>9.</label>
<p>If the provider is in the process of reconfiguring or switching, all requests are rejected until any currently executed services have been completed, and the provider has successfully changed its current service offering.</p>
</fn>
<fn fn-type="other" id="fn10-1059712312462247">
<label>10.</label>
<p>The value of 200 s was found empirically for a range of experiments and values of m<sub>c</sub>. Tests on unlimited memory or local registry size (i.e. m<sub>c</sub> =<inline-formula id="inline-formula297-1059712312462247">
<mml:math display="inline" id="math307-1059712312462247">
<mml:mrow>
<mml:mi>∞</mml:mi>
</mml:mrow>
</mml:math>
</inline-formula>) failed to converge, despite a range of bootstrapping values tested.</p>
</fn>
<fn fn-type="other" id="fn11-1059712312462247">
<label>11.</label>
<p>Whilst this scenario is relatively simple compared with real patterns of demand, the intent is to evaluate the behaviour of the system (and resulting communities) whilst maintaining full control of the demand dynamics. More complex scenarios (and real-world case studies) could be explored in future work.</p>
</fn>
</fn-group>
</notes>
<bio>
<title>About the Authors</title>
<p><bold>Mariusz Jacyno</bold> received his PhD from the University of Southampton in 2011 where he investigated the problem of engineering autonomic IT systems. After receiving his doctorate he worked as a post-doctoral research associate at the University of Southampton and then as a research engineer at the University of Southampton’s IT innovation centre where he was involved in modelling distributed and complex IT systems using agent-based techniques. He is currently working as a research associate at the University of Zielona Gora in Poland, where he focuses on agent-based and event-based simulation techniques for studying the behaviour of large-scale computational and social systems. His main interests lie in the area of complex systems modelling, self-organization and distributed artificial intelligence.</p>
<p><bold>Seth Bullock</bold> is professor of computer science at the University of Southampton, and founding director of the university’s institute for complex systems simulation (<ext-link ext-link-type="uri" xlink:href="http://www.icss.soton.ac.uk">http://www.icss.soton.ac.uk</ext-link>). His expertise lies in complex systems simulation, modelling methodology, complex adaptive systems and evolutionary theory. Research projects include Resilient Futures (<ext-link ext-link-type="uri" xlink:href="http://r-futures.ecs.soton.ac.uk">http://r-futures.ecs.soton.ac.uk</ext-link>) and the Care Life Cycle (<ext-link ext-link-type="uri" xlink:href="http://www.southampton.ac.uk/clc">http://www.southampton.ac.uk/clc</ext-link>). He served as conference chair for the 11th International Conference on Artificial Life on its first visit to Europe in 2008, sits on the editorial board of the journal <italic>Adaptive Behavior</italic>, and was elected to the board of directors of the International Society for Artificial Life. He has published in journals spanning health, economics, finance, biology, computing, architecture, environmental management and physics, and was the only engineer invited to contribute to Richard Dawkins’ 2006 OUP festschrift.</p>
<p><bold>Nicholas Geard</bold> is a researcher in the vaccination and immunisation research group at the Melbourne school of population health, University of Melbourne, Australia. He obtained his PhD from The University of Queensland, Australia in 2006. His broad research interests are in the application of computational simulation models to the study of complex biological, social and artificial systems. His current research concerns the impact of demographic change on the dynamics of disease spread and patterns of immunity in human populations.</p>
<p><bold>Terry Payne</bold> received his PhD in 1998 and MSc in 1994 in artificial intelligence from the University of Aberdeen, UK. He then spent 4 years as a research fellow at Carnegie Mellon University, USA, before being appointed as a faculty member within the school of electronics and computer science at Southampton University. He has been a faculty member at the University of Liverpool since 2008, where he carries out research in agent-based computing and knowledge-based systems and services. His specific interests lie in the autonomous use of ontological knowledge for the support of service discovery and provision, through decision theoretic and distributed negotiation mechanisms.</p>
<p><bold>Michael Luck</bold> is professor of computer science and head of the department of informatics at King’s College London, where he undertakes research into agent technologies and intelligent systems. His work has sought to take a principled approach to the development of practical agent systems, and spans formal models and theories as well as practical applications. Recent work has been directed at norms, contracts and institutions, declarative programming of agent systems, industrial deployment and technology forecasting. He has published over 200 articles in these and related areas, and 12 books. He is a director of the board of the International Foundation for Autonomous Agents and Multi-Agent Systems (IFAAMAS) and is an editorial board member of <italic>Autonomous Agents and Multi-Agent Systems</italic>, the <italic>International Journal of Agent-Oriented Software Engineering, Web Intelligence and Agent Systems</italic> and the <italic>ACM Transactions on Autonomous and Adaptive Systems</italic>.</p>
</bio>
<ref-list>
<title>References</title>
<ref id="bibr1-1059712312462247">
<citation citation-type="journal">
<person-group person-group-type="author">
<name><surname>Arthur</surname><given-names>W. B.</given-names></name>
</person-group> (<year>1994</year>). <article-title>Inductive reasoning and bounded rationality</article-title>. <source>American Economic Review</source>, <volume>84</volume>, <fpage>406</fpage>–<lpage>411</lpage>.</citation>
</ref>
<ref id="bibr2-1059712312462247">
<citation citation-type="confproc">
<person-group person-group-type="author">
<name><surname>Babaoglu</surname><given-names>O.</given-names></name>
<name><surname>Meling</surname><given-names>H.</given-names></name>
<name><surname>Montresor</surname><given-names>A.</given-names></name>
</person-group> (<year>2002</year>). <article-title>Anthill: A framework for the development of agent-based peer-to-peer systemsAnthill: A framework for the development of agent-based peer-to-peer systems Technical Report UBLCS-2001-09)</article-title>. <conf-loc>University of Bologna, Italy</conf-loc>. (<conf-name>Presented at the 22nd International Conference on Distributed Computing Systems</conf-name>)</citation>
</ref>
<ref id="bibr3-1059712312462247">
<citation citation-type="web">
<person-group person-group-type="author">
<name><surname>Bonabeau</surname><given-names>E.</given-names></name>
</person-group> (<year>2002</year>, <month>March</month>). <article-title>Predicting the unpredictable</article-title>. <source>Harvard Business Review</source>, <volume>80</volume>, <fpage>1</fpage>–<lpage>9</lpage>. Available from <ext-link ext-link-type="uri" xlink:href="http://www.psych.lse.ac.uk/socialpsychology/Research/organisational/complexity/PDFiles/publication/hbr_unpredictable.pdf">http://www.psych.lse.ac.uk/socialpsychology/Research/organisational/complexity/PDFiles/publication/hbr_unpredictable.pdf</ext-link></citation>
</ref>
<ref id="bibr4-1059712312462247">
<citation citation-type="web">
<person-group person-group-type="author">
<name><surname>Bonabeau</surname><given-names>E.</given-names></name>
<name><surname>Sobkowski</surname><given-names>A.</given-names></name>
<name><surname>Théraulaz</surname><given-names>G.</given-names></name>
<name><surname>Deneubourg</surname><given-names>J.</given-names></name>
</person-group> (<year>1997</year>). <article-title>Adaptive task allocation inspired by a model of division of labor in social insects</article-title>. In <person-group person-group-type="editor">
<name><surname>Lundh</surname><given-names>D.</given-names></name>
<name><surname>Olsson</surname><given-names>B.</given-names></name>
<name><surname>Narayanan</surname><given-names>A.</given-names></name>
</person-group> (Eds.), <source>Biocomputing and emergent computation</source> (pp. <fpage>36</fpage>–<lpage>45</lpage>). <publisher-name>World Scientific</publisher-name>. Available from <ext-link ext-link-type="uri" xlink:href="http://citeseer.ist.psu.edu/bonabeau98adaptive.html">citeseer.ist.psu.edu/bonabeau98adaptive.html</ext-link></citation>
</ref>
<ref id="bibr5-1059712312462247">
<citation citation-type="book">
<person-group person-group-type="author">
<name><surname>Brueckner</surname><given-names>S.</given-names></name>
<name><surname>Parunak</surname><given-names>H. V. D.</given-names></name>
</person-group> (<year>2003</year>). <article-title>Self-organizing MANET management</article-title>. In <person-group person-group-type="editor">
<name><surname>Marzo</surname><given-names>G. D.</given-names></name>
<name><surname>Karageorgos</surname><given-names>A.</given-names></name>
<name><surname>Rana</surname><given-names>O. F.</given-names></name>
<name><surname>Zambonelli</surname><given-names>F.</given-names></name>
</person-group> (Eds.), <source>Engineering self-organising systems</source> (p. <fpage>1</fpage>–<lpage>16</lpage>). <publisher-loc>Springer</publisher-loc>.</citation>
</ref>
<ref id="bibr6-1059712312462247">
<citation citation-type="confproc">
<person-group person-group-type="author">
<name><surname>Brueckner</surname><given-names>S. A.</given-names></name>
<name><surname>Parunak</surname><given-names>H. V. D.</given-names></name>
</person-group> (<year>2003</year>). <article-title>Information-Driven Phase Changes in Multi-Agent Coordination</article-title>. In <conf-name>Proceedings of the second international joint conference on autonomous agents and multiagent systems</conf-name> (p. <fpage>950</fpage>–<lpage>951</lpage>). <publisher-loc>NY, USA</publisher-loc>: <publisher-name>ACM Press</publisher-name>.</citation>
</ref>
<ref id="bibr7-1059712312462247">
<citation citation-type="journal">
<person-group person-group-type="author">
<name><surname>Bullock</surname><given-names>S.</given-names></name>
<name><surname>Cliff</surname><given-names>D.</given-names></name>
</person-group> (<year>2004</year>). <article-title>Complexity and emergent behaviour in ICT systems (Technical Report No. HP-2004-187)</article-title>. Hewlett-Packard Labs.</citation>
</ref>
<ref id="bibr8-1059712312462247">
<citation citation-type="journal">
<person-group person-group-type="author">
<name><surname>Bullock</surname><given-names>S.</given-names></name>
<name><surname>Ladley</surname><given-names>D.</given-names></name>
<name><surname>Kerby</surname><given-names>M.</given-names></name>
</person-group> (in press). <article-title>Wasps, termites and waspmites: Distinguishing competence from performance in collective construction</article-title>. <source>Artificial Life</source>.</citation>
</ref>
<ref id="bibr9-1059712312462247">
<citation citation-type="journal">
<person-group person-group-type="author">
<name><surname>Bullock</surname><given-names>S.</given-names></name>
<name><surname>Todd</surname><given-names>P.</given-names></name>
</person-group> (<year>1999</year>). <article-title>Made to measure: Ecological rationality in structured environments</article-title>. <source>Minds and Machines</source>, <volume>9</volume>, <fpage>497</fpage>–<lpage>541</lpage>.</citation>
</ref>
<ref id="bibr10-1059712312462247">
<citation citation-type="journal">
<person-group person-group-type="author">
<name><surname>Challet</surname><given-names>D.</given-names></name>
<name><surname>Zhang</surname><given-names>C.</given-names></name>
</person-group> (<year>1997</year>). <article-title>Emergence of cooperation and organization in an evolutionary game</article-title>. <source>Physica A: Statistical and Theoretical Physics</source>, <volume>246</volume>, <fpage>407</fpage>–<lpage>418</lpage>.</citation>
</ref>
<ref id="bibr11-1059712312462247">
<citation citation-type="web">
<person-group person-group-type="author">
<name><surname>De Roure</surname><given-names>D.</given-names></name>
</person-group> (<year>2003</year>). <article-title>On self-organization and the semantic grid</article-title>. <source>IEEE Intelligent Systems</source>, <volume>18</volume>, <fpage>77</fpage>–<lpage>79</lpage>. Available from <ext-link ext-link-type="uri" xlink:href="http://lsirpeople.epfl.ch/aberer/GMD-PAPERS/IEEE%20IS%202003.pdf">http://lsirpeople.epfl.ch/aberer/GMD-PAPERS/IEEE%20IS%202003.pdf</ext-link></citation>
</ref>
<ref id="bibr12-1059712312462247">
<citation citation-type="journal">
<person-group person-group-type="author">
<name><surname>Dobrzanski</surname><given-names>J.</given-names></name>
<name><surname>Dobrzanska</surname><given-names>J.</given-names></name>
</person-group> (<year>1987</year>). <article-title>About the joint action by ants: Collaboration or participation?</article-title> <source>Panstwowe Wydawnictwo Naukowe</source>, <volume>36</volume>, <fpage>61</fpage>–<lpage>75</lpage>.</citation>
</ref>
<ref id="bibr13-1059712312462247">
<citation citation-type="journal">
<person-group person-group-type="author">
<name><surname>Durfee</surname><given-names>E. H.</given-names></name>
</person-group> (<year>2001</year>). <article-title>Scaling up agent coordination strategies</article-title>. <source>IEEE Computer</source>, <volume>34</volume> (<issue>7</issue>), <fpage>1</fpage>–<lpage>8</lpage>.</citation>
</ref>
<ref id="bibr14-1059712312462247">
<citation citation-type="web">
<person-group person-group-type="author">
<name><surname>Estrin</surname><given-names>D.</given-names></name>
<name><surname>Culler</surname><given-names>D.</given-names></name>
<name><surname>Pister</surname><given-names>K.</given-names></name>
<name><surname>Sukhatme</surname><given-names>G.</given-names></name>
</person-group> (<year>2002</year>). <article-title>Connecting the physical world with pervasive networks</article-title>. <source>IEEE Pervasive Computing</source>, <volume>1</volume>(<issue>1</issue>), <fpage>59</fpage>–<lpage>69</lpage>. Available from <ext-link ext-link-type="uri" xlink:href="http://www.cs.utah.edu/classes/cs6935/papers/sensNet2.pdf">http://www.cs.utah.edu/classes/cs6935/papers/sensNet2.pdf</ext-link></citation>
</ref>
<ref id="bibr15-1059712312462247">
<citation citation-type="book">
<person-group person-group-type="author">
<name><surname>Forrest</surname><given-names>S.</given-names></name>
<name><surname>Balthrop</surname><given-names>J.</given-names></name>
<name><surname>Glickman</surname><given-names>M.</given-names></name>
<name><surname>Ackley</surname><given-names>D.</given-names></name>
</person-group> (<year>2005</year>). <article-title>Computation in the wild</article-title>. In <person-group person-group-type="editor">
<name><surname>Park</surname><given-names>K.</given-names></name>
<name><surname>Willins</surname><given-names>W.</given-names></name>
</person-group> (Eds.), <source>The Internet as a Large-Scale Complex System</source> (p. <fpage>203</fpage>–<lpage>227</lpage>). <publisher-name>Oxford University Press</publisher-name>.</citation>
</ref>
<ref id="bibr16-1059712312462247">
<citation citation-type="book">
<person-group person-group-type="author">
<name><surname>Gershenson</surname><given-names>C.</given-names></name>
<name><surname>Heylighen</surname><given-names>F.</given-names></name>
</person-group> (<year>2005</year>). <article-title>How can we think the complex?</article-title> In <person-group person-group-type="editor">
<name><surname>Richardson</surname><given-names>K.</given-names></name>
</person-group> (Ed.), <source>Managing the Complex</source>Managing the complex (<volume>Vol. 1</volume>, p. <fpage>1</fpage>–<lpage>14</lpage>). <publisher-name>Information Age Publishing</publisher-name>.</citation>
</ref>
<ref id="bibr17-1059712312462247">
<citation citation-type="journal">
<person-group person-group-type="author">
<name><surname>Gordon</surname><given-names>D.</given-names></name>
</person-group> (<year>2002</year>). <article-title>The organization of work in social insect colonies</article-title>. <source>Complexity</source>, <volume>8</volume>(<issue>1</issue>), <fpage>43</fpage>–<lpage>46</lpage>.</citation>
</ref>
<ref id="bibr18-1059712312462247">
<citation citation-type="journal">
<person-group person-group-type="author">
<name><surname>Guerin</surname><given-names>S.</given-names></name>
<name><surname>Kunkle</surname><given-names>D.</given-names></name>
</person-group> (<year>2004</year>). <article-title>Emergence of constraint in self-organizing systems</article-title>. <source>Journal of Nonlinear Dynamics, Psychology, and Life Sciences</source>, <volume>
8:2</volume>, <fpage>131</fpage>–<lpage>146</lpage>.</citation>
</ref>
<ref id="bibr19-1059712312462247">
<citation citation-type="journal">
<person-group person-group-type="author">
<name><surname>Heylighen</surname><given-names>F.</given-names></name>
</person-group> (<year>1991</year>). <article-title>Modelling emergence</article-title>. <source>World Futures: The Journal of General Evolution</source>, <volume>31</volume>, <fpage>89</fpage>–<lpage>104</lpage>.</citation>
</ref>
<ref id="bibr20-1059712312462247">
<citation citation-type="journal">
<person-group person-group-type="author">
<name><surname>Hogg</surname><given-names>T.</given-names></name>
<name><surname>Huberman</surname><given-names>B. A.</given-names></name>
</person-group> (<year>1991</year>). <article-title>Controlling chaos in distributed systems</article-title>. <source>IEEE Transactions on Systems, Man and Cybernetics</source>, <volume>21</volume>, <fpage>1325</fpage>–<lpage>1332</lpage>.</citation>
</ref>
<ref id="bibr21-1059712312462247">
<citation citation-type="book">
<person-group person-group-type="author">
<name><surname>Hogg</surname><given-names>T.</given-names></name>
<name><surname>Huberman</surname><given-names>B. A.</given-names></name>
</person-group> (<year>2002</year>). <article-title>Dynamics of large computational ecosystems (Tech. Rep. No. HPL-2002-77)</article-title>. <publisher-loc>Palo Alto</publisher-loc>: <publisher-name>Information Dynamics Laboratory, Hewlett-Packard Laboratories</publisher-name>.</citation>
</ref>
<ref id="bibr22-1059712312462247">
<citation citation-type="web">
<person-group person-group-type="author">
<name><surname>Kay</surname><given-names>J. J.</given-names></name>
</person-group> (<year>1984</year>). <source>Self-organization in living systems</source>. Unpublished doctoral dissertation, Deparment of Systems Design Engineering, <publisher-name>University of Waterloo</publisher-name>. Available from <ext-link ext-link-type="uri" xlink:href="http://www.fes.uwaterloo.ca/u/jjkay/pubs/thesis/6.pdf">http://www.fes.uwaterloo.ca/u/jjkay/pubs/thesis/6.pdf</ext-link></citation>
</ref>
<ref id="bibr23-1059712312462247">
<citation citation-type="confproc">
<person-group person-group-type="author">
<name><surname>Keil</surname><given-names>D.</given-names></name>
<name><surname>Goldin</surname><given-names>D.</given-names></name>
</person-group> (<year>2004</year>). <article-title>Modelling indirect interaction in open computational systems</article-title>. In <conf-name>Workshop on enabling technologies: Infrastructure for collaborative enterprises</conf-name> ( p. <fpage>371</fpage>–<lpage>377</lpage>). <publisher-loc>Washington, DC, USA</publisher-loc>: <publisher-name>IEEE Computer Society</publisher-name>.</citation>
</ref>
<ref id="bibr24-1059712312462247">
<citation citation-type="confproc">
<person-group person-group-type="author">
<name><surname>Kephart</surname><given-names>J.</given-names></name>
<name><surname>Chan</surname><given-names>H.</given-names></name>
<name><surname>Das</surname><given-names>R.</given-names></name>
<name><surname>Levine</surname><given-names>D.</given-names></name>
<name><surname>Tesauro</surname><given-names>G.</given-names></name>
<name><surname>Rawson</surname><given-names>F.</given-names></name>
<etal/>
</person-group>. (<year>2007</year>). <article-title>Coordinating multiple autonomic managers to achieve specified power-performance tradeoffs</article-title>. In <conf-name>Icac ’07: Proceedings of the fourth international conference on autonomic computing</conf-name> (p.<fpage>24</fpage>). <publisher-loc>Washington, DC, USA</publisher-loc>: <publisher-name>IEEE Computer Society</publisher-name>.</citation>
</ref>
<ref id="bibr25-1059712312462247">
<citation citation-type="book">
<person-group person-group-type="author">
<name><surname>Kephart</surname><given-names>J. O.</given-names></name>
<name><surname>Chess</surname><given-names>D. M.</given-names></name>
</person-group> (<year>2003</year>). <article-title>The vision of autonomic computing</article-title>. <source>IEE Computer</source>, <volume>36</volume>(<issue>1</issue>), <fpage>41</fpage>–<lpage>50</lpage>. <publisher-name>IBM Thomas J. Watson Research Center</publisher-name>.</citation>
</ref>
<ref id="bibr26-1059712312462247">
<citation citation-type="journal">
<person-group person-group-type="author">
<name><surname>Kephart</surname><given-names>J. O.</given-names></name>
<name><surname>Das</surname><given-names>R.</given-names></name>
</person-group> (<year>2007</year>). <article-title>Achieving self-management via utility functions</article-title>. <source>IEEE Internet Computing</source>, <volume>11</volume>(<issue>1</issue>), <fpage>40</fpage>–<lpage>48</lpage>.</citation>
</ref>
<ref id="bibr27-1059712312462247">
<citation citation-type="confproc">
<person-group person-group-type="author">
<name><surname>Kitano</surname><given-names>H.</given-names></name>
</person-group> (<year>2000</year>). <article-title>Robocup rescue: A grand challenge for multi-agent systems</article-title>. In <conf-name>Icmas ’00: Proceedings of the fourth international conference on multiagent systems (icmas-2000)</conf-name> (p. <fpage>5</fpage>–<lpage>12</lpage>). <publisher-loc>Washington, DC, USA</publisher-loc>: <publisher-name>IEEE Computer Society</publisher-name>.</citation>
</ref>
<ref id="bibr28-1059712312462247">
<citation citation-type="confproc">
<person-group person-group-type="author">
<name><surname>Ladley</surname><given-names>D.</given-names></name>
<name><surname>Bullock</surname><given-names>S.</given-names></name>
</person-group> (<year>2004</year>). <article-title>Logistic constraints on 3d termite construction</article-title>. In <person-group person-group-type="editor">
<name><surname>Dorigo</surname><given-names>M.</given-names></name>
<name><surname>Birattari</surname><given-names>M.</given-names></name>
<name><surname>Blum</surname><given-names>L. M.</given-names></name>
<name><surname>Mondada</surname><given-names>F.</given-names></name>
<name><surname>Stützle</surname><given-names>T.</given-names></name>
</person-group> (Eds.), <conf-name>Proceedings of the fourth international workshop on ant colony optimisation</conf-name> (p. <fpage>178</fpage>–<lpage>189</lpage>). <conf-loc>Springer, Berlin</conf-loc>.</citation>
</ref>
<ref id="bibr29-1059712312462247">
<citation citation-type="journal">
<person-group person-group-type="author">
<name><surname>Ladley</surname><given-names>D.</given-names></name>
<name><surname>Bullock</surname><given-names>S.</given-names></name>
</person-group> (<year>2005</year>). <article-title>The role of logistic constraints on termite construction of chambers and tunnels</article-title>. <source>Journal of Theoretical Biology</source>, <volume>234</volume>, <fpage>551</fpage>–<lpage>564</lpage>.</citation>
</ref>
<ref id="bibr30-1059712312462247">
<citation citation-type="journal">
<person-group person-group-type="author">
<name><surname>Levins</surname><given-names>R.</given-names></name>
</person-group> (<year>1966</year>). <article-title>The strategy of model building in population biology</article-title>. <source>American Scientist</source>, <volume>54</volume>, <fpage>421</fpage>–<lpage>431</lpage>.</citation>
</ref>
<ref id="bibr31-1059712312462247">
<citation citation-type="journal">
<person-group person-group-type="author">
<name><surname>Merkle</surname><given-names>D.</given-names></name>
<name><surname>Middendorf</surname><given-names>M.</given-names></name>
</person-group> (<year>2004</year>). <article-title>Dynamic polyethism and competition for tasks in threshold reinforcement models of social insects</article-title>. <source>Adaptive Behavior</source>, <volume>12</volume> (<issue>3-4</issue>), <fpage>251</fpage>–<lpage>262</lpage>.</citation>
</ref>
<ref id="bibr32-1059712312462247">
<citation citation-type="journal">
<person-group person-group-type="author">
<name><surname>Mesarovic</surname><given-names>M.</given-names></name>
<name><surname>Sreenath</surname><given-names>S.</given-names></name>
<name><surname>Keene</surname><given-names>J.</given-names></name>
</person-group> (<year>2004</year>). <article-title>Search for organizing principles: Understanding in systems biology</article-title>. <source>Systems Biology</source>, <volume>1</volume> (<issue>1</issue>), <fpage>19</fpage>–<lpage>27</lpage>.</citation>
</ref>
<ref id="bibr33-1059712312462247">
<citation citation-type="book">
<person-group person-group-type="author">
<name><surname>Noble</surname><given-names>J.</given-names></name>
<name><surname>Di Paolo</surname><given-names>E. A.</given-names></name>
<name><surname>Bullock</surname><given-names>S.</given-names></name>
</person-group> (<year>2001</year>). <article-title>Adaptive factors in the evolution of signalling systems</article-title>. In <person-group person-group-type="editor">
<name><surname>Cangelosi</surname><given-names>A.</given-names></name>
<name><surname>Parisi</surname><given-names>D.</given-names></name>
</person-group> (Eds.), <source>Simulating the evolution of language</source> (p. <fpage>53</fpage>–<lpage>78</lpage>). <publisher-loc>Springer, Heidelberg</publisher-loc>.</citation>
</ref>
<ref id="bibr34-1059712312462247">
<citation citation-type="book">
<person-group person-group-type="author">
<name><surname>Packard</surname><given-names>N. H.</given-names></name>
</person-group> (<year>1988</year>). <article-title>Adaptation toward the edge of chaos</article-title>. In <person-group person-group-type="editor">
<name><surname>Kelso</surname><given-names>J.</given-names></name>
<name><surname>Mandell</surname><given-names>A.</given-names></name>
<name><surname>Shlesinger</surname><given-names>M.</given-names></name>
</person-group> (Eds.), <source>Dynamic patterns in complex systems</source> (p. <fpage>293</fpage>–<lpage>301</lpage>). <publisher-name>World Scientific</publisher-name>.</citation>
</ref>
<ref id="bibr35-1059712312462247">
<citation citation-type="web">
<person-group person-group-type="author">
<name><surname>Pynadath</surname><given-names>D.</given-names></name>
<name><surname>Tambe</surname><given-names>M.</given-names></name>
</person-group> (<year>2002</year>). <article-title>The communicative multiagent team decision problem: Analyzing teamwork theories and models</article-title>. <source>Journal of Artificial Intelligence Research</source>, <volume>16</volume>, <fpage>389</fpage>–<lpage>423</lpage>. Available from <ext-link ext-link-type="uri" xlink:href="http://citeseer.ist.psu.edu/article/pynadath02communicative.html">citeseer.ist.psu.edu/article/pynadath02communicative.html</ext-link></citation>
</ref>
<ref id="bibr36-1059712312462247">
<citation citation-type="journal">
<person-group person-group-type="author">
<name><surname>Robinson</surname><given-names>G. E.</given-names></name>
</person-group> (<year>1992</year>). <article-title>Regulation of division of labor in insect societies</article-title>. <source>Annual Review of Entomology</source>, <volume>37</volume>, <fpage>637</fpage>–<lpage>665</lpage>.</citation>
</ref>
<ref id="bibr37-1059712312462247">
<citation citation-type="confproc">
<person-group person-group-type="author">
<name><surname>Saffre</surname><given-names>F.</given-names></name>
<name><surname>Shackleton</surname><given-names>M.</given-names></name>
</person-group> (<year>2008</year>). <article-title>“embryo”: An autonomic co-operative service management framework</article-title>. In <person-group person-group-type="editor">
<name><surname>Bullock</surname><given-names>S.</given-names></name>
<name><surname>Noble</surname><given-names>J.</given-names></name>
<name><surname>Watson</surname><given-names>R.</given-names></name>
<name><surname>Bedau</surname><given-names>M. A.</given-names></name>
</person-group> (Eds.), <conf-name>Artificial life xi: Proceedings of the eleventh international conference on the simulation and synthesis of living systems</conf-name> (pp. <fpage>513</fpage>–<lpage>520</lpage>). <conf-loc>MIT Press, Cambridge, MA</conf-loc>.</citation>
</ref>
<ref id="bibr38-1059712312462247">
<citation citation-type="journal">
<person-group person-group-type="author">
<name><surname>Saffre</surname><given-names>F.</given-names></name>
<name><surname>Tateson</surname><given-names>R.</given-names></name>
<name><surname>Halloy</surname><given-names>J.</given-names></name>
<name><surname>Shackleton</surname><given-names>M.</given-names></name>
<name><surname>Deneubourg</surname><given-names>J.-L.</given-names></name>
</person-group> (<year>2009</year>). <article-title>Aggregation dynamics in overlay networks and their implications for self-organized distributed applications</article-title>. <source>Computer Journal</source>, <volume>52</volume> (<issue>4</issue>), <fpage>397</fpage>–<lpage>412</lpage>.</citation>
</ref>
<ref id="bibr39-1059712312462247">
<citation citation-type="journal">
<person-group person-group-type="author">
<name><surname>Savit</surname><given-names>R.</given-names></name>
<name><surname>Manuca</surname><given-names>R.</given-names></name>
<name><surname>Riolo</surname><given-names>R.</given-names></name>
</person-group> (<year>1999</year>). <article-title>Adaptive competition, market efficiency, and phase transitions</article-title>. <source>Physical Review Letters</source>, <volume>82</volume>, <fpage>2203</fpage>–<lpage>2206</lpage>.</citation>
</ref>
<ref id="bibr40-1059712312462247">
<citation citation-type="web">
<person-group person-group-type="author">
<name><surname>Seeley</surname><given-names>T. D.</given-names></name>
</person-group> (<year>2002</year>). <article-title>When is self-organization used in biological systems?</article-title> <source>Biological Bulletin</source>, <volume>202</volume>, <fpage>314</fpage>–<lpage>318</lpage>. Available from <ext-link ext-link-type="uri" xlink:href="http://www.biolbull.org/cgi/reprint/202/3/314">http://www.biolbull.org/cgi/reprint/202/3/314</ext-link></citation>
</ref>
<ref id="bibr41-1059712312462247">
<citation citation-type="confproc">
<person-group person-group-type="author">
<name><surname>Sen</surname><given-names>S.</given-names></name>
<name><surname>Roychowdhury</surname><given-names>S.</given-names></name>
<name><surname>Arora</surname><given-names>N.</given-names></name>
</person-group> (<year>1996</year>). <article-title>Effects of local information on group behavior</article-title>. In <conf-name>Proceedings of the second international conference on multi-agent systems</conf-name> (p. <fpage>315</fpage>–<lpage>321</lpage>). <conf-loc>AAAI Press, Menlo Park, CA</conf-loc>.</citation>
</ref>
<ref id="bibr42-1059712312462247">
<citation citation-type="journal">
<person-group person-group-type="author">
<name><surname>Shehory</surname><given-names>O.</given-names></name>
<name><surname>Kraus</surname><given-names>S.</given-names></name>
</person-group> (<year>1998</year>). <article-title>Methods for task allocation via agent coalition formation</article-title>. <source>Artificial Intelligence</source>, <volume>101</volume>, <fpage>165</fpage>–<lpage>200</lpage>.</citation>
</ref>
<ref id="bibr43-1059712312462247">
<citation citation-type="journal">
<person-group person-group-type="author">
<name><surname>Simon</surname><given-names>H. A.</given-names></name>
</person-group> (<year>1956</year>). <article-title>Rational choice and the structure of the environment</article-title>. <source>Psychological Review</source>, <volume>63</volume>(<issue>2</issue>), <fpage>129</fpage>–<lpage>138</lpage>.</citation>
</ref>
<ref id="bibr44-1059712312462247">
<citation citation-type="web">
<person-group person-group-type="author">
<name><surname>Stein</surname><given-names>S.</given-names></name>
<name><surname>Jennings</surname><given-names>N. R.</given-names></name>
<name><surname>Payne</surname><given-names>T.</given-names></name>
</person-group> (<year>2008</year>, <month>May</month>). <article-title>Flexible service provisioning with advance agreements</article-title>. In <conf-name>Proceedings of the 7th international joint conference on autonomous agents and multi-agent systems</conf-name> (<volume>Vol. 1</volume>, p. <fpage>249</fpage>–<lpage>256</lpage>). Available from <ext-link ext-link-type="uri" xlink:href="http://eprints.ecs.soton.ac.uk/15128/">http://eprints.ecs.soton.ac.uk/15128/</ext-link></citation>
</ref>
<ref id="bibr45-1059712312462247">
<citation citation-type="web">
<person-group person-group-type="author">
<name><surname>Stone</surname><given-names>P.</given-names></name>
<name><surname>Veloso</surname><given-names>M.</given-names></name>
</person-group> (<year>2000</year>). <article-title>Layered learning and exible teamwork in RoboCup simulationagents</article-title>. In <person-group person-group-type="editor">
<name><surname>Veloso</surname><given-names>M.</given-names></name>
<name><surname>Pagello</surname><given-names>E.</given-names></name>
<name><surname>Kitano</surname><given-names>H.</given-names></name>
</person-group> (Eds.), <source>RoboCup-99: Robot soccer world cup iii</source> (p. <fpage>495</fpage>–<lpage>508</lpage>). <publisher-loc>London, UK</publisher-loc>: <publisher-name>Springer, Berlin</publisher-name>. Available from <ext-link ext-link-type="uri" xlink:href="http://www.springerlink.com/media/m3mwrwqgqqngfbg4wr8x/contributions/7/e/y/l/7eyl5c0vrfpb2q3x.pdf">http://www.springerlink.com/media/m3mwrwqgqqngfbg4wr8x/contributions/7/e/y/l/7eyl5c0vrfpb2q3x.pdf</ext-link></citation>
</ref>
<ref id="bibr46-1059712312462247">
<citation citation-type="confproc">
<person-group person-group-type="author">
<name><surname>Sycara</surname><given-names>K.</given-names></name>
<name><surname>Decker</surname><given-names>K.</given-names></name>
<name><surname>Williamson</surname><given-names>M.</given-names></name>
</person-group> (<year>1997</year>). <article-title>Middle-agents for the internet</article-title>. In <person-group person-group-type="editor">
<name><surname>Pollack</surname><given-names>M. E.</given-names></name>
</person-group> (Ed.), <conf-name>Proceedings of the fifteenth international joint conference on artificial intelligence (ijcai- 97)</conf-name> (p. <fpage>578</fpage>–<lpage>583</lpage>). <conf-loc>Morgan Kaffman</conf-loc>.</citation>
</ref>
<ref id="bibr47-1059712312462247">
<citation citation-type="journal">
<person-group person-group-type="author">
<name><surname>Tanenbaum</surname><given-names>A.</given-names></name>
<name><surname>Renesse</surname><given-names>R. V.</given-names></name>
</person-group> (<year>1985</year>). <article-title>Distributed operating systems</article-title>. <source>ACM Computing Surveys</source>, <volume>17</volume>(<issue>4</issue>) <fpage>419</fpage>–<lpage>470</lpage>.</citation>
</ref>
<ref id="bibr48-1059712312462247">
<citation citation-type="journal">
<person-group person-group-type="author">
<name><surname>Tesauro</surname><given-names>G.</given-names></name>
</person-group> (<year>2007</year>). <article-title>Reinforcement learning in autonomic computing: A manifesto and case studies</article-title>. <source>IEEE Internet Computing</source>, <volume>11</volume>(<issue>1</issue>), <fpage>22</fpage>–<lpage>30</lpage>.</citation>
</ref>
<ref id="bibr49-1059712312462247">
<citation citation-type="journal">
<person-group person-group-type="author">
<name><surname>Théraulaz</surname><given-names>G.</given-names></name>
<name><surname>Bonabeau</surname><given-names>E.</given-names></name>
<name><surname>Deneubourg</surname><given-names>J.</given-names></name>
</person-group> (<year>1998</year>). <article-title>Response threshold reinforcement and division of labour in insect societies</article-title>. <source>Proceedings of the Royal Society of London, Series B</source>, <volume>265</volume>, <fpage>327</fpage>–<lpage>332</lpage>.</citation>
</ref>
<ref id="bibr50-1059712312462247">
<citation citation-type="journal">
<person-group person-group-type="author">
<name><surname>Wang</surname><given-names>M.</given-names></name>
<name><surname>Kandasamy</surname><given-names>N.</given-names></name>
<name><surname>Guez</surname><given-names>A.</given-names></name>
<name><surname>Kam</surname><given-names>M.</given-names></name>
</person-group> (<year>2007</year>). <article-title>Distributed Cooperative Control for Adaptive Performance ManagementDistributed cooperative control for adaptive performance management</article-title>. <source>IEEE Internet Computing</source>, <volume>11</volume>(<issue>1</issue>), <fpage>31</fpage>–<lpage>39</lpage>.</citation>
</ref>
<ref id="bibr51-1059712312462247">
<citation citation-type="book">
<person-group person-group-type="author">
<name><surname>Zambonelli</surname><given-names>F.</given-names></name>
<name><surname>Mamei</surname><given-names>M.</given-names></name>
<name><surname>Roli</surname><given-names>A.</given-names></name>
</person-group> (<year>2002</year>). <article-title>What can cellular automata tell us about the behavior of large multi-agent systems?</article-title> In <person-group person-group-type="editor">
<name><surname>Garcia</surname><given-names>A. F.</given-names></name>
<name><surname>de Lucena</surname><given-names>C. J. P.</given-names></name>
<name><surname>Zambonelli</surname><given-names>F.</given-names></name>
<name><surname>Omicini</surname><given-names>A.</given-names></name>
<name><surname>Castro</surname><given-names>J.</given-names></name>
</person-group> (Eds.), <source>Software engineering for large-scale multi-agent systems, research issues and practical applications</source> (p. <fpage>216</fpage>–<lpage>231</lpage>). <publisher-loc>Springer</publisher-loc>.</citation>
</ref>
<ref id="bibr52-1059712312462247">
<citation citation-type="web">
<person-group person-group-type="author">
<name><surname>Zambonelli</surname><given-names>F.</given-names></name>
<name><surname>Parunak</surname><given-names>H. V. D.</given-names></name>
</person-group> (<year>2001</year>). <article-title>Signs of a revolution in computer science and software engineering</article-title>. In <source>Second italian workshop on objects and agents</source> (p. <fpage>1</fpage>–<lpage>12</lpage>). <publisher-loc>Springer, Heidelberg</publisher-loc>. Available from <ext-link ext-link-type="uri" xlink:href="http://www.erim.org/vparunak/ZambonelliParunakAOSE02.pdf">http://www.erim.org/vparunak/ZambonelliParunakAOSE02.pdf</ext-link></citation>
</ref>
</ref-list>
</back>
</article>