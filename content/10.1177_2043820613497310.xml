<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article
  PUBLIC "-//NLM//DTD Journal Publishing DTD v2.3 20070202//EN" "journalpublishing.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" article-type="review-article">
<front>
<journal-meta>
<journal-id journal-id-type="publisher-id">DHG</journal-id>
<journal-id journal-id-type="hwp">spdhg</journal-id>
<journal-title>Dialogues in Human Geography</journal-title>
<issn pub-type="ppub">2043-8206</issn>
<issn pub-type="epub">2043-8214</issn>
<publisher>
<publisher-name>SAGE Publications</publisher-name>
<publisher-loc>Sage UK: London, England</publisher-loc>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="doi">10.1177/2043820613497310</article-id>
<article-id pub-id-type="publisher-id">10.1177_2043820613497310</article-id>
<article-categories>
<subj-group subj-group-type="heading">
<subject>BOOK REVIEW FORUM 2</subject>
<subj-group subj-group-type="heading">
<subject>Code/Space: Software and Everyday Life</subject>
<subj-group subj-group-type="heading">
<subject>Reviews</subject>
</subj-group></subj-group></subj-group>
</article-categories>
<title-group>
<article-title>Towards a geography of software</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<name>
<surname>Kellerman</surname>
<given-names>Aharon</given-names>
</name>
<aff id="aff1-2043820613497310"><italic>University of Haifa, Israel</italic></aff>
</contrib>
</contrib-group>
<pub-date pub-type="epub-ppub">
<month>7</month>
<year>2013</year>
</pub-date>
<volume>3</volume>
<issue>2</issue>
<fpage>242</fpage>
<lpage>244</lpage>
<permissions>
<copyright-statement>© The Author(s) 2013</copyright-statement>
<copyright-year>2013</copyright-year>
<copyright-holder content-type="sage">SAGE Publications</copyright-holder>
</permissions>
</article-meta>
</front>
<body>
<p>This is a pioneering and rather daring project, attempting, probably for the first time, to uncover the spatiality of software in a systematic way. As such, the book acquaints the reader, time and again, with the world of software. It presents notions of space and social space, followed by a conceptual discussion of code/space relationships through the proposed transduction of space, in its second half. The rest of the book exposes the reader to the present (Chapters seven to nine) and possible future (Chapter 10) of routine uses and consumptions of code. Thus, the conceptualization of code/space revolves around three rather than two dimensions, namely code/space/society. The quantitative division among these three major dimensions covered by the book assumes that the reader needs to learn much on the world of software and little on space, thus making the book fit mainly the ‘spatial readership’ market and foremost geographers. This choice of covered dimensions further accentuates the world of code consumption, avoiding an exposition of the spatiality and code/space of code production.</p>
<p>The authors claim that the discussion of technology in geography so far has tended to ignore the role of software, and this book aims to start to fill this lacuna. Thus, the essence of the book is probably expressed through the statement that ‘code/space is quite literally constituted through software-mediated practices, wherein code is essential to the form, function and meaning of space’ (p. 71). In the following paragraphs of this review, instead of criticizing the authors’ statements and arguments throughout the book, we will attempt to briefly sketch several additional components that we believe are, separately and jointly, essential elements of code/space and that may complement those covered in the book, possibly leading toward what might possibly develop into a geography of software. Given the nature of this essay as a short review, most of these proposed elements will be presented as questions or as unsupported arguments.</p>
<p>It is important to provide a proper context, and thus meaning, for the thing called code. Software is not something material, and even the plastic disks containing software look the same for different kinds of software. Code constitutes information and is, thus, abstract in its nature. Code is, however, a special kind of information, and as such it should be assessed against other forms of information and their geographies. While other forms of information are ‘passive’, in the sense that they stand for themselves, or possibly lead to the development of knowledge, code is an ‘active’ type of information, in the sense that it is meant to make some material or virtual things or systems perform some operation, including the ‘operation’ of other more ‘passive’ information types through information processing and maintenance.</p>
<p>Place and distance, two primal notions of geography, seem almost completely irrelevant to code consumption, but the third primal geographical notion, that of space, applies widely to code consumption, as the authors showed in much detail. However, comparisons between the spatialities of ‘active’ and ‘passive’ types of information are not provided. As far as mobility is concerned, when comparing hardware to software, the first, as a material thing travels much more slowly than software as information, since hardware, as the name implies, is always static, even when installed in moving cars or in moved smartphones.</p>
<p>Code consumption is presented in the book, and rightfully so, as something universal, at least in developed societies. But could we claim the same also for code production? In code production, code presents itself again as a special type of information. Its mass production is almost banal. Software may be embedded into products during their material production (e.g. in watches), or it may be transmitted or downloaded from one computer to another one, or from standard external devices such as disks into computers. Hence, the crucial and unique production phase for code is not its distribution but rather its R&amp;D (research and development). One may, therefore, be intrigued to grasp the spatialities or code/space for this phase, or to understand the role of software production for the form, function, and meaning of space. At the most basic level of international comparisons, can we assume that countries that lead in code consumption by their population size and by their level of economic development lead also in code R&amp;D? As it turns out, the global map of code production is different than that of code consumption, with small countries leading, following the United States. Uncovering the sociospatial dimensions of code production at the local and regional levels is no less important, and they may not necessarily be the same as those of neither software consumption nor hardware development.</p>
<p>Code was shown in the book as a leading element in contemporary space production and transduction, probably constituting a most crucial one in this regard, albeit it is invisible. As such, one is tempted to view code as the invisible hand of technology, producing and managing not just one but rather two kinds of spaces: the real one and the virtual one of the Internet and communications. Constituting such an invisible technological hand, would its dissemination into space and its spatialities differ among countries not just by their size and economic level of development but also by their economic and political types of regime? Could one assume a more significant role of code in space and in consumption patterns in democratic countries?</p>
<p>Code may be recognized as being several dimensions simultaneously. It may be viewed as medium and means, mediating between economic and political systems, on the one hand, and daily human agency, on the other. Code development may, thus, respond simultaneously to customers’ needs as well as to motivations for profit and efficiency by business. Software may further be assessed as constituting a controlling element, for example, in air and terrestrial traffic systems as well as in manufacturing and for all kinds of information flows. Software can further turn into a kind of decontrolling means, when used, for example, by hackers, to bring about malfunctioning of information and other systems.</p>
<p>Despite the immense power of code in a globalized world, there does not seems to evolve, other than in science fiction literature, a kind of ‘super code’ controlling all lower echelons of software. Code is rather a ‘local’ thing, not necessarily in the simple geographical sense of local, but rather in the sense that distinct code types and systems are used separately for different spheres of human life, even if some of these have a global spread, such as those needed for the operation of the Internet and television channeling.</p>
<p>
<italic>Code/Space</italic> can, thus, be assessed not just by what it includes, but even more so through the thought that it provokes regarding a possible development of the geography of code. The book constitutes, thus, a cornerstone for the understanding and assessment of emerging new geographies, and the authors should, therefore, be praised for its writing!</p>
</body>
</article>