<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article
  PUBLIC "-//NLM//DTD Journal Publishing DTD v2.3 20070202//EN" "journalpublishing.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink" article-type="research-article">
<front>
<journal-meta>
<journal-id journal-id-type="publisher-id">PIC</journal-id>
<journal-id journal-id-type="hwp">sppic</journal-id>
<journal-title>Proceedings of the Institution of Mechanical Engineers, Part C: Journal of Mechanical Engineering Science</journal-title>
<issn pub-type="ppub">0954-4062</issn>
<issn pub-type="epub">2041-2983</issn>
<publisher>
<publisher-name>SAGE Publications</publisher-name>
<publisher-loc>Sage UK: London, England</publisher-loc>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="doi">10.1177/0954406212446900</article-id>
<article-id pub-id-type="publisher-id">10.1177_0954406212446900</article-id>
<article-categories>
<subj-group subj-group-type="heading">
<subject>Mechatronics and Information Technology</subject>
</subj-group>
</article-categories>
<title-group>
<article-title>Sensor-based motion planning for path tracking and obstacle avoidance of robotic vehicles with nonholonomic constraints</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<name><surname>Kim</surname><given-names>Dong-Hyung</given-names></name>
</contrib>
<contrib contrib-type="author">
<name><surname>Han</surname><given-names>Chang-Soo</given-names></name>
</contrib>
<contrib contrib-type="author" corresp="yes">
<name><surname>Lee</surname><given-names>Ji Yeong</given-names></name>
<xref ref-type="corresp" rid="corresp1-0954406212446900"/>
</contrib>
</contrib-group>
<aff id="aff1-0954406212446900">Department of Mechanical Engineering, Hanyang University, Gyeonggi-do, Korea</aff>
<author-notes>
<corresp id="corresp1-0954406212446900">Ji Yeong Lee, Department of Mechanical Engineering, Hanyang University, Gyeonggi-do, Korea. Email: <email>jiyeongl@hanyang.ac.kr</email></corresp>
</author-notes>
<pub-date pub-type="epub-ppub">
<month>1</month>
<year>2013</year>
</pub-date>
<volume>227</volume>
<issue>1</issue>
<fpage>178</fpage>
<lpage>191</lpage>
<history>
<date date-type="received"><day>4</day><month>11</month><year>2011</year></date>
<date date-type="accepted"><day>10</day><month>4</month><year>2012</year></date>
</history>
<permissions>
<copyright-statement>© IMechE 2012</copyright-statement>
<copyright-year>2012</copyright-year>
<copyright-holder content-type="society">Institution of Mechanical Engineers</copyright-holder>
</permissions>
<abstract>
<p>This article presents a sensor-based motion planning method for ro botic vehicles with nonholonomic constraints. With the given waypoints, the instantaneous motion to follow the waypoints is calculated as the turning radius through the geometric path tracking method. By generating the turning radius larger than the minimum turning radius, the motion constraints on the vehicle are satisfied during navigation. And the vehicle is assumed to be equipped with a two-dimensional range sensor, allowing it to avoid obstacles within its sensing range, thus giving it virtual force. Then the turning radius for avoiding an obstacle, which is inversely proportional to the virtual force, is calculated. By integrating the geometric path tracking method and the sensor-based obstacle avoidance method, the vehicle follows the waypoints and avoids unexpected obstacles while it considers the motion constraints. The simulation results of the path tracking only and the path tracking and obstacle avoidance with the given waypoints show the performance of the proposed method.</p>
</abstract>
<kwd-group>
<kwd>Robotic vehicle</kwd>
<kwd>path tracking</kwd>
<kwd>obstacle avoidance</kwd>
<kwd>motion planning</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="sec1-0954406212446900" sec-type="intro"><title>Introduction</title>
<p>Robotic vehicles capable of autonomous navigation have proven to be feasible through events such as the DARPA Urban Challenge competition.<sup><xref ref-type="bibr" rid="bibr1-0954406212446900">1</xref></sup> As the robotic vehicle moves along the waypoints from the starting point to the goal point sent from the global motion planner, the local motion planner determines the instant motion of a vehicle.</p>
<p>When the local motion planner generates the vehicle’s reference motion, difficulties can appear due to the motion constraints of the vehicle. At a low speed of the vehicle, the longitudinal traction and lateral forces which are exerted on the tires do not exceed the maximum static friction between the tires and the road, preventing the vehicle from moving in the direction orthogonal to its forward direction. Thus the vehicle cannot move directly to the side due to this constraint. Moreover the minimum turning radius of vehicle exists because of the limited steering angle. These motion constraints make the motion planning problem particularly complex.<sup><xref ref-type="bibr" rid="bibr2-0954406212446900">2</xref>,<xref ref-type="bibr" rid="bibr3-0954406212446900">3</xref></sup> Thus the local motion planner should generate the feasible local motion for the vehicle without violating the motion constraints.</p>
<p>In classical dynamics,<sup><xref ref-type="bibr" rid="bibr4-0954406212446900">4</xref></sup> if the constraint equations are written as nonintegrable differential expression, then the constraint of this type are known as nonholonomic constraints. The kinematic effect of a nonholonomic constraint is to constrain the direction of the allowable motions at any given point of configuration space. However the nonholonomic constraint does not reduce the number of dimensions in the configuration space. This means that the vehicle can reach any position and orientation by using the forward and backward motions in the obstacle-free space.</p>
<p>The robotic vehicle follows the given waypoints using the path tracking method. For this, Geometric path tracking methods<sup><xref ref-type="bibr" rid="bibr5-0954406212446900">5</xref>–<xref ref-type="bibr" rid="bibr10-0954406212446900">10</xref></sup> can avoid heavy computation involved in a control law as they use a look-ahead point similar to a driver’s looking point. The distance from the vehicle to the look-ahead point is crucial because the look-ahead distance determines the performance of the geometric path tracking controller. Various geometric path tracking methods have been developed including the follow-the-carrot,<sup><xref ref-type="bibr" rid="bibr5-0954406212446900">5</xref></sup> pure pursuit<sup><xref ref-type="bibr" rid="bibr6-0954406212446900">6</xref>–<xref ref-type="bibr" rid="bibr8-0954406212446900">8</xref></sup> and vector pursuit.<sup><xref ref-type="bibr" rid="bibr9-0954406212446900">9</xref></sup> Follow-the-carrot controls the steering angle to maintain the vehicle facing the look-ahead point. Pure pursuit creates a circle that passes though the current position and a look-ahead point with a radius that can be followed by a robotic vehicle. Pure-pursuit strategy has been used in many applications for explicit path tracking, including indoor<sup><xref ref-type="bibr" rid="bibr11-0954406212446900">11</xref></sup> and outdoor navigation.<sup><xref ref-type="bibr" rid="bibr12-0954406212446900">12</xref></sup> While follow-the-carrot and pure pursuit methods only use the desired position in order to determine a desired vehicle motion, vector pursuit takes advantage of the desired position as well as the desired orientation. Even the vector pursuit is similar to pure pursuit, but it is based on screw theory. As screw theory can be used to describe the instantaneous motion of a moving rigid body relative to a given coordinate system, it is used to represent the motion from the current location to the desired position and orientation that is on a given path.<sup><xref ref-type="bibr" rid="bibr9-0954406212446900">9</xref></sup></p>
<p>These three geometric path tracking methods were compared in Witt et al.<sup><xref ref-type="bibr" rid="bibr9-0954406212446900">9</xref></sup> With a real test vehicle, a ‘U’ shaped path and a figure eight path were selected to test the path tracking methods by varying the look-ahead distance and the velocity of the vehicle. From these experiments, it was shown that vector pursuit is the most robust in terms of avoiding sudden large position and orientation errors. Large oscillations for the given paths were even shown for the follow-the-carrot method. Pure pursuit shows the performance similar to that of vector pursuit during the path tracking as the look-ahead distance and the velocity increased, but vector pursuit requires more complex computation process than pure pursuit. Thus pure pursuit is suitable for real world applications as the simplest process for obtaining the desired vehicle turning radius for tracking a given path.</p>
<p>When a robotic vehicle meets an obstacle while following a given path, regardless of path errors, the robotic vehicle should be able to execute collision-free motion. After Khatib presented the potential field method,<sup><xref ref-type="bibr" rid="bibr25-0954406212446900">25</xref></sup> many researchers developed sensor-based, reactive approaches for this obstacle avoidance problem including the curvature velocity method,<sup><xref ref-type="bibr" rid="bibr13-0954406212446900">13</xref></sup> vector field histogram<sup><xref ref-type="bibr" rid="bibr14-0954406212446900">14</xref></sup> and dynamic window algorithm.<sup><xref ref-type="bibr" rid="bibr15-0954406212446900">15</xref></sup> Extended or modified versions of these methods have also been developed.<sup><xref ref-type="bibr" rid="bibr16-0954406212446900">16</xref>–<xref ref-type="bibr" rid="bibr18-0954406212446900">18</xref></sup> For consideration of the motion constraints of the nonholonomic robot, mapping from the configuration space to the space in which the robot can be regarded as a holonomic point is suggested in Minguez et al.<sup><xref ref-type="bibr" rid="bibr19-0954406212446900">19</xref>,<xref ref-type="bibr" rid="bibr20-0954406212446900">20</xref></sup> Thus the well-known reactive collision avoidance method for a holonomic robot can be applied to the nonholonomic robot in that space. This also means that a transformation between two spaces is necessary for executing the reactive navigation method. To execute the real-time path planning and obstacle avoidance simultaneously, nonholonomic path deformation methods were introduced in Lamiraux et al.,<sup><xref ref-type="bibr" rid="bibr21-0954406212446900">21</xref></sup> Lefebvre et al.<sup><xref ref-type="bibr" rid="bibr22-0954406212446900">22</xref>,<xref ref-type="bibr" rid="bibr23-0954406212446900">23</xref></sup> and Pradalier et al.<sup><xref ref-type="bibr" rid="bibr24-0954406212446900">24</xref></sup> With an initial path, the methods in Lamiraux et al.,<sup><xref ref-type="bibr" rid="bibr21-0954406212446900">21</xref></sup> Lefebvre et al.<sup><xref ref-type="bibr" rid="bibr22-0954406212446900">22</xref>,<xref ref-type="bibr" rid="bibr23-0954406212446900">23</xref></sup> and Pradalier et al.<sup><xref ref-type="bibr" rid="bibr24-0954406212446900">24</xref></sup> define the potential field over the space of a path. The obstacle potential is generated from the obstacle and determines the direction of the path deformation. Since these methods compute the obstacle potential field along the path, it requires a lot of computation by the robotic vehicle’s real-time controller.</p>
<p>This article focuses on the motion planning of the robotic vehicle to follow the given waypoints in an environment with obstacles. With several waypoints between the start point and the goal point, the motion planning aims to find the desired motions of the vehicle driving it through the waypoints without colliding with obstacles. Often the robotic vehicles have motion constraints which prevent the vehicle from moving in a direction orthogonal to its forward direction. This is an example of a nonholonomic constraint. The motion planning of these nonholonomic robots should be able to cope with the robot’s motion constraints. By using the pure pursuit path tracking method, the motion that satisfies the nonholonomic constraint is provided in terms of the turning radius. Taking into consideration the change in velocity and the limit of the angular velocity of the robotic vehicle, this article introduces a variable look-ahead distance to the path tracking in order to limit the angular velocity. To avoid the obstacles, instead of calculating the potential fields over the entire workspace, this article defines the local obstacle potential within a specified sensing range. By considering a 2D range sensor, a set of obstacle points is obtained and the approximated nonholonomic distances to the sensed obstacle points are calculated. Then these distances are used to only generate a local obstacle potential field, unlike the original potential field method. The virtual force from this potential is then calculated from this potential field. And the turning radius for avoiding the obstacles is calculated from the virtual force so that this motion for avoiding the obstacle also satisfies the nonholonomic constraint.</p>
</sec>
<sec id="sec2-0954406212446900"><title>Robotic vehicle model</title>
<p><xref ref-type="fig" rid="fig1-0954406212446900">Figure 1</xref> shows a robotic vehicle with the linear velocity <italic>v</italic> and the angular velocity or yaw rate <italic>ω</italic>. In <xref ref-type="fig" rid="fig1-0954406212446900">Figure 1</xref>, the global coordinate system is a fixed coordinate system, and each axis is denoted by the superscript, <italic>G</italic>. The vehicle coordinate system, denoted by a superscript <italic>V</italic>, is a moving coordinate system attached to the robot, with the <italic>x</italic>-axis aligned with the heading of the robot. If the position and the orientation of the robotic vehicle are expressed by (<italic>x</italic>, <italic>y</italic>) and <italic>θ,</italic> respectively, the configuration of the robotic vehicle can be defined as <bold>q</bold> = [<italic>x y θ</italic>]<sup>T</sup>. Then the kinematic model of the robotic vehicle is expressed by
<disp-formula id="disp-formula1-0954406212446900"><label>(1)</label><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline" id="math1-0954406212446900"><mml:mrow><mml:mover><mml:mrow><mml:mtext mathvariant="bold">q</mml:mtext></mml:mrow><mml:mi>·</mml:mi></mml:mover><mml:mo>=</mml:mo><mml:mrow><mml:mo/><mml:mo>[</mml:mo></mml:mrow><mml:mtable align="left"><mml:mtr><mml:mtd columnalign="center"><mml:mrow><mml:mi>cos</mml:mi><mml:mi>θ</mml:mi></mml:mrow></mml:mtd><mml:mtd columnalign="center"><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="center" columnspan="1"><mml:mrow><mml:mi>sin</mml:mi><mml:mi>θ</mml:mi></mml:mrow></mml:mtd><mml:mtd columnalign="center"><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="center" columnspan="1"><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:mtd><mml:mtd columnalign="center"><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:mtd></mml:mtr></mml:mtable><mml:mrow><mml:mo/><mml:mo>]</mml:mo></mml:mrow><mml:mtext mathvariant="bold">u</mml:mtext></mml:mrow></mml:math><graphic alternate-form-of="disp-formula1-0954406212446900" xlink:href="10.1177_0954406212446900-eq1.tif"/></disp-formula>
where <bold>u</bold> = [<italic>v ω</italic>]<sup>T</sup> is the control input vector that contains the linear velocity <italic>v</italic> and the angular velocity or yaw rate <italic>ω</italic>. The backward motion of the robotic vehicle is not considered in this work; i.e. <italic>v</italic> is not negative. And at a low speeds, the kinematic steering of the robot vehicle is satisfied as follows
<disp-formula id="disp-formula2-0954406212446900"><label>(2)</label><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline" id="math2-0954406212446900"><mml:mrow><mml:mi>δ</mml:mi><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mi>R</mml:mi></mml:mrow></mml:mfrac><mml:mo>=</mml:mo><mml:mi>b</mml:mi><mml:mi>κ</mml:mi></mml:mrow></mml:math><graphic alternate-form-of="disp-formula2-0954406212446900" xlink:href="10.1177_0954406212446900-eq2.tif"/></disp-formula>
where <italic>δ</italic> is the steering angle for the front wheels, <italic>b</italic> is the wheelbase, and <italic>R</italic> and <italic>κ</italic> are the turning radius and the curvature, respectively. And the lower limit on the turning radius is the minimum turning radius <italic>R<sub>min</sub></italic>.
<fig id="fig1-0954406212446900" position="float"><label>Figure 1.</label><caption><p>Coordinate systems and kinematic steering.</p></caption><graphic xlink:href="10.1177_0954406212446900-fig1.tif"/>
</fig></p>
<p>In this kinematic model, the motion of the robotic vehicle is constrained by a nonholonomic constraint
<disp-formula id="disp-formula3-0954406212446900"><label>(3)</label><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline" id="math3-0954406212446900"><mml:mrow><mml:mover><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mi>·</mml:mi></mml:mover><mml:mi>sin</mml:mi><mml:mi>θ</mml:mi><mml:mo>-</mml:mo><mml:mover><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mi>·</mml:mi></mml:mover><mml:mi>cos</mml:mi><mml:mi>θ</mml:mi><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math><graphic alternate-form-of="disp-formula3-0954406212446900" xlink:href="10.1177_0954406212446900-eq3.tif"/></disp-formula>
</p>
<p>That is, it is assumed that the robotic vehicle is slow enough that the longitudinal traction and lateral force exerted on the tires do not exceed the maximum static friction between the tires and the floor. This is called the no-slip condition.</p>
</sec>
<sec id="sec3-0954406212446900"><title>Geometric path tracking</title>
<p>Pure pursuit<sup><xref ref-type="bibr" rid="bibr8-0954406212446900">8</xref></sup> is a geometric path tracking method that calculates the turning radius so that the robotic vehicle follows the given path. <xref ref-type="fig" rid="fig2-0954406212446900">Figure 2</xref> shows the geometry of pure pursuit for the robotic vehicle that follows the path connecting the two waypoints. In <xref ref-type="fig" rid="fig2-0954406212446900">Figure 2</xref>, an arc that joins the current position of the robotic vehicle and the look-ahead point is constructed. The chord length of this arc is the look-ahead distance <italic>L</italic>. If the position of the look-ahead point is (<italic>x<sub>L</sub></italic>, <italic>y<sub>L</sub></italic>) with respect to the robot coordinate, the three equations can be geometrically obtained as follows
<disp-formula id="disp-formula4-0954406212446900"><label>(4)</label><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline" id="math4-0954406212446900"><mml:mrow><mml:msubsup><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msubsup><mml:mo>+</mml:mo><mml:msubsup><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msubsup><mml:mo>=</mml:mo><mml:msup><mml:mrow><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo>,</mml:mo></mml:mrow></mml:math><graphic alternate-form-of="disp-formula4-0954406212446900" xlink:href="10.1177_0954406212446900-eq4.tif"/></disp-formula>
<disp-formula id="disp-formula5-0954406212446900"><label>(5)</label><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline" id="math5-0954406212446900"><mml:mrow><mml:msup><mml:mrow><mml:mi>a</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo>+</mml:mo><mml:msubsup><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msubsup><mml:mo>=</mml:mo><mml:msubsup><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mi>track</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msubsup><mml:mo>,</mml:mo></mml:mrow></mml:math><graphic alternate-form-of="disp-formula5-0954406212446900" xlink:href="10.1177_0954406212446900-eq5.tif"/></disp-formula>
<disp-formula id="disp-formula6-0954406212446900"><label>(6)</label><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline" id="math6-0954406212446900"><mml:mrow><mml:mi>a</mml:mi><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mi>track</mml:mi></mml:mrow></mml:msub><mml:mo>-</mml:mo><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mi>L</mml:mi></mml:mrow></mml:msub><mml:mo>.</mml:mo></mml:mrow></mml:math><graphic alternate-form-of="disp-formula6-0954406212446900" xlink:href="10.1177_0954406212446900-eq6.tif"/></disp-formula>
<fig id="fig2-0954406212446900" position="float"><label>Figure 2.</label><caption><p>Geometry of the pure pursuit.</p></caption><graphic xlink:href="10.1177_0954406212446900-fig2.tif"/>
</fig></p>
<p>From (4), (5) and (6), the turning radius for tracking the path is obtained as follows
<disp-formula id="disp-formula7-0954406212446900"><label>(7)</label><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline" id="math7-0954406212446900"><mml:mrow><mml:msub><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mi>track</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:msup><mml:mrow><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow><mml:mrow><mml:mn>2</mml:mn><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mi>L</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfrac><mml:mo>.</mml:mo></mml:mrow></mml:math><graphic alternate-form-of="disp-formula7-0954406212446900" xlink:href="10.1177_0954406212446900-eq7.tif"/></disp-formula>
</p>
<sec id="sec4-0954406212446900"><title>Look-ahead distance to limit the angular velocity</title>
<p>The performance of the geometric path tracking controller depends on the look-ahead distance. The look-ahead distance is analogous to the distance between the vehicle and a point in front of the vehicle that a human driver may look at to track the roadway. Therefore, a robotic vehicle should have a variable look-ahead distance with respect to the velocity. The faster the robotic vehicle moves, the longer the look-ahead distance should be. Because a long look-ahead distance makes the robotic vehicle turn earlier than it would have with a shorter look-ahead distance, an accurate path navigation requires a short look-ahead distance. If, however, the robotic vehicle has a high speed and a short look-ahead distance, the robotic vehicle will have a high angular velocity while it is following the path, which may cause the robotic vehicle to slip. In the following section, we discuss the conditions which prevent this.</p>
<p>With the look-ahead distance <italic>L</italic>, the shaded region of <xref ref-type="fig" rid="fig3-0954406212446900">Figure 3</xref> represents the set of feasible trajectories of the robotic vehicle under the pure pursuit method. As the robotic vehicle follows the path, the look-ahead point can be placed at any position on the circumference of the circle of which the center is the position of the robotic vehicle, and the radius of the circle is the given look-ahead distance <italic>L</italic>. In <xref ref-type="fig" rid="fig3-0954406212446900">Figure 3</xref>, if the robotic vehicle follows the given path without any position or orientation errors, then the look-ahead point lies on point <italic>A,</italic> which is the intersection of the <italic>X</italic>-axis of the vehicle coordinate and the circumference of the circle with radius <italic>L</italic>. As the path error increases, the look-ahead point moves toward the points <italic>B</italic> or <italic>C</italic> along the circumference of the circle with radius <italic>L</italic>. The look-ahead points <italic>B</italic> and <italic>C</italic> shown in <xref ref-type="fig" rid="fig3-0954406212446900">Figure 3</xref> are special cases where the look-ahead point is on the <italic>Y</italic>-axis of the vehicle coordinate. For those cases, the pure pursuit method calculates the minimum value of the turning radius as min(<italic>R<sub>track</sub></italic>). With the velocity <italic>v</italic>, the maximum value of the angular velocity for the robotic vehicle is also calculated as max(<italic>ω</italic>). Thus, the minimum value of the turning radius can be written as
<disp-formula id="disp-formula8-0954406212446900"><label>(8)</label><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline" id="math8-0954406212446900"><mml:mrow><mml:mo>min</mml:mo><mml:mrow><mml:mo/><mml:mo>(</mml:mo></mml:mrow><mml:msub><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mi>track</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo/><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mo>max</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>ω</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mfrac><mml:mo>.</mml:mo></mml:mrow></mml:math><graphic alternate-form-of="disp-formula8-0954406212446900" xlink:href="10.1177_0954406212446900-eq8.tif"/></disp-formula>
<fig id="fig3-0954406212446900" position="float"><label>Figure 3.</label><caption><p>Set of feasible trajectory with pure pursuit method.</p></caption><graphic xlink:href="10.1177_0954406212446900-fig3.tif"/>
</fig></p>
<p>To limit the angular velocity of the robotic vehicle to <italic>ω</italic><sub>lim</sub>, we define max(<italic>ω</italic>) in (8) as <italic>ω</italic><sub>lim</sub>. And <italic>L</italic> = 2 min(<italic>R<sub>track</sub></italic>) can be seen in <xref ref-type="fig" rid="fig3-0954406212446900">Figure 3</xref>. By substituting these into (8), the look-ahead distance <italic>L</italic> for limiting the angular velocity of the robotic vehicle to <italic>ω</italic><sub>lim</sub> is determined by
<disp-formula id="disp-formula9-0954406212446900"><label>(9)</label><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline" id="math9-0954406212446900"><mml:mrow><mml:mi>L</mml:mi><mml:mo>=</mml:mo><mml:mn>2</mml:mn><mml:mo>min</mml:mo><mml:mrow><mml:mo/><mml:mo>(</mml:mo></mml:mrow><mml:msub><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mi>track</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo/><mml:mo>)</mml:mo></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:math><graphic alternate-form-of="disp-formula9-0954406212446900" xlink:href="10.1177_0954406212446900-eq9.tif"/></disp-formula>
</p>
<p>By substituting (8) into (9), the look-ahead distance <italic>L</italic> to limit the angular velocity of the robotic vehicle as <italic>ω</italic><sub>lim</sub> is determined by
<disp-formula id="disp-formula10-0954406212446900"><label>(10)</label><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline" id="math10-0954406212446900"><mml:mrow><mml:mi>L</mml:mi><mml:mo>=</mml:mo><mml:mn>2</mml:mn><mml:mfrac><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>ω</mml:mi></mml:mrow><mml:mrow><mml:mo>lim</mml:mo></mml:mrow></mml:msub></mml:mrow></mml:mfrac><mml:mo>.</mml:mo></mml:mrow></mml:math><graphic alternate-form-of="disp-formula10-0954406212446900" xlink:href="10.1177_0954406212446900-eq10.tif"/></disp-formula>
</p>
</sec>
<sec id="sec5-0954406212446900"><title>Stability analysis for the pure pursuit method</title>
<p>The proof of convergence that the robotic vehicle has reached the waypoints within a finite time can be provided using the stability analysis technique of the nonlinear system. Given the instant goal point and the path from the vehicle to the look-ahead point as shown in <xref ref-type="fig" rid="fig4-0954406212446900">Figure 4</xref>, the turning radius is derived using the pure pursuit method as follows.
<fig id="fig4-0954406212446900" position="float"><label>Figure 4.</label><caption><p>Robotic vehicle following the line.</p></caption><graphic xlink:href="10.1177_0954406212446900-fig4.tif"/>
</fig></p>
<p>Let <italic>y<sub>e</sub></italic> be the error, the distance between the vehicle and the given path, then <italic>y<sub>e</sub></italic> = <italic>y<sub>GL</sub></italic> – <italic>y</italic>, where <italic>y<sub>GL</sub></italic> is constant, thus
<disp-formula id="disp-formula11-0954406212446900"><label>(11)</label><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline" id="math11-0954406212446900"><mml:mrow><mml:msub><mml:mrow><mml:mover><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mi>·</mml:mi></mml:mover></mml:mrow><mml:mrow><mml:mi>e</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mo>-</mml:mo><mml:mover><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mi>·</mml:mi></mml:mover><mml:mo>=</mml:mo><mml:mo>-</mml:mo><mml:mi>v</mml:mi><mml:mi>sin</mml:mi><mml:mi>θ</mml:mi></mml:mrow></mml:math><graphic alternate-form-of="disp-formula11-0954406212446900" xlink:href="10.1177_0954406212446900-eq11.tif"/></disp-formula>
is obtained. And <italic>y<sub>L</sub></italic> in <xref ref-type="fig" rid="fig4-0954406212446900">Figure 4</xref> is
<disp-formula id="disp-formula12-0954406212446900"><label>(12)</label><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline" id="math12-0954406212446900"><mml:mrow><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mi>L</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mi>e</mml:mi></mml:mrow></mml:msub><mml:mi>cos</mml:mi><mml:mi>θ</mml:mi><mml:mo>-</mml:mo><mml:msqrt><mml:mrow><mml:msup><mml:mrow><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo>-</mml:mo><mml:msubsup><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msubsup></mml:mrow></mml:msqrt><mml:mi>sin</mml:mi><mml:mi>θ</mml:mi><mml:mo>.</mml:mo></mml:mrow></mml:math><graphic alternate-form-of="disp-formula12-0954406212446900" xlink:href="10.1177_0954406212446900-eq12.tif"/></disp-formula>
</p>
<p>By substituting (12) for (7), the turning radius can be rewritten as
<disp-formula id="disp-formula13-0954406212446900"><label>(13)</label><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline" id="math13-0954406212446900"><mml:mrow><mml:msub><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mi>track</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:msup><mml:mrow><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow><mml:mrow><mml:mn>2</mml:mn><mml:mrow><mml:mo/><mml:mo>(</mml:mo></mml:mrow><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mi>e</mml:mi></mml:mrow></mml:msub><mml:mi>cos</mml:mi><mml:mi>θ</mml:mi><mml:mo>-</mml:mo><mml:msqrt><mml:mrow><mml:msup><mml:mrow><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo>-</mml:mo><mml:msubsup><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msubsup></mml:mrow></mml:msqrt><mml:mi>sin</mml:mi><mml:mi>θ</mml:mi><mml:mrow><mml:mo/><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mfrac><mml:mo>.</mml:mo></mml:mrow></mml:math><graphic alternate-form-of="disp-formula13-0954406212446900" xlink:href="10.1177_0954406212446900-eq13.tif"/></disp-formula>
</p>
<p>Therefore, the angular velocity of the robotic vehicle to track the path is
<disp-formula id="disp-formula14-0954406212446900"><label>(14)</label><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline" id="math14-0954406212446900"><mml:mrow><mml:mover><mml:mrow><mml:mi>θ</mml:mi></mml:mrow><mml:mi>·</mml:mi></mml:mover><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mi>track</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfrac><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mn>2</mml:mn><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mfrac><mml:mrow><mml:mo/><mml:mo>(</mml:mo></mml:mrow><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mi>e</mml:mi></mml:mrow></mml:msub><mml:mi>cos</mml:mi><mml:mi>θ</mml:mi><mml:mo>-</mml:mo><mml:msqrt><mml:mrow><mml:msup><mml:mrow><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo>-</mml:mo><mml:msubsup><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msubsup></mml:mrow></mml:msqrt><mml:mi>sin</mml:mi><mml:mi>θ</mml:mi><mml:mrow><mml:mo/><mml:mo>)</mml:mo></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:math><graphic alternate-form-of="disp-formula14-0954406212446900" xlink:href="10.1177_0954406212446900-eq14.tif"/></disp-formula>
</p>
<p>Thus, (11) and (14) are the steering control system of the mobile robot. If we define the state of this system by <bold>p</bold> = [<italic>y<sub>e</sub> θ</italic>]<sup>T</sup>, the steering control system is
<disp-formula id="disp-formula15-0954406212446900"><label>(15)</label><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline" id="math15-0954406212446900"><mml:mrow><mml:mtable align="right"><mml:mtr><mml:mtd columnalign="right" columnspan="1"><mml:mrow><mml:mover><mml:mrow><mml:mtext mathvariant="bold">p</mml:mtext></mml:mrow><mml:mi>·</mml:mi></mml:mover><mml:mo>=</mml:mo><mml:mtext mathvariant="bold">f</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mi>e</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mi>θ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right" columnspan="1"><mml:mrow><mml:mi>   </mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:mo/><mml:mo>[</mml:mo></mml:mrow><mml:mtable align="left"><mml:mtr><mml:mtd columnalign="center"><mml:mrow><mml:mo>-</mml:mo><mml:mi>v</mml:mi><mml:mi>sin</mml:mi><mml:mi>θ</mml:mi></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="center" columnspan="1"><mml:mrow><mml:mfrac><mml:mrow><mml:mn>2</mml:mn><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mfrac><mml:mrow><mml:mo/><mml:mo>(</mml:mo></mml:mrow><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mi>e</mml:mi></mml:mrow></mml:msub><mml:mi>cos</mml:mi><mml:mi>θ</mml:mi><mml:mo>-</mml:mo><mml:msqrt><mml:mrow><mml:msup><mml:mrow><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo>-</mml:mo><mml:msubsup><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msubsup></mml:mrow></mml:msqrt><mml:mi>sin</mml:mi><mml:mi>θ</mml:mi><mml:mrow><mml:mo/><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable><mml:mrow><mml:mo/><mml:mo>]</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic alternate-form-of="disp-formula15-0954406212446900" xlink:href="10.1177_0954406212446900-eq15.tif"/></disp-formula>
</p>
<p><xref ref-type="disp-formula" rid="disp-formula15-0954406212446900">Equation (15)</xref> represents a nonlinear system. If the origin of the linearized state equation is a stable node in the neighborhood of the equilibrium point, the trajectories of the nonlinear state equation will behave like a stable node. The linearized system around the origin is
<disp-formula id="disp-formula16-0954406212446900"><label>(16)</label><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline" id="math16-0954406212446900"><mml:mrow><mml:mover><mml:mrow><mml:mtext mathvariant="bold">p</mml:mtext></mml:mrow><mml:mi>·</mml:mi></mml:mover><mml:mo>=</mml:mo><mml:mtext mathvariant="bold">Jp</mml:mtext><mml:mi>   </mml:mi><mml:mtext>where</mml:mtext><mml:mi>   </mml:mi><mml:mtext mathvariant="bold">J</mml:mtext><mml:mo>=</mml:mo><mml:mrow><mml:mo/><mml:mo/></mml:mrow><mml:mfrac><mml:mrow><mml:mo>∂</mml:mo><mml:mtext mathvariant="bold">f</mml:mtext></mml:mrow><mml:mrow><mml:mo>∂</mml:mo><mml:msup><mml:mrow><mml:mtext mathvariant="bold">p</mml:mtext></mml:mrow><mml:mrow><mml:mtext>T</mml:mtext></mml:mrow></mml:msup></mml:mrow></mml:mfrac><mml:msub><mml:mrow><mml:mo/><mml:mo>|</mml:mo></mml:mrow><mml:mrow><mml:mtext mathvariant="bold">p</mml:mtext><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo/><mml:mo>[</mml:mo></mml:mrow><mml:mtable align="left"><mml:mtr><mml:mtd columnalign="center"><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:mtd><mml:mtd columnalign="center"><mml:mrow><mml:mo>-</mml:mo><mml:mi>v</mml:mi></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="center" columnspan="1"><mml:mrow><mml:mfrac><mml:mrow><mml:mn>2</mml:mn><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mfrac></mml:mrow></mml:mtd><mml:mtd columnalign="center"><mml:mrow><mml:mo>-</mml:mo><mml:mfrac><mml:mrow><mml:mn>2</mml:mn><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>L</mml:mi></mml:mrow></mml:mfrac></mml:mrow></mml:mtd></mml:mtr></mml:mtable><mml:mrow><mml:mo/><mml:mo>]</mml:mo></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:math><graphic alternate-form-of="disp-formula16-0954406212446900" xlink:href="10.1177_0954406212446900-eq16.tif"/></disp-formula>
</p>
<p>The eigenvalues of the jacobian matrix <bold>J</bold> in (16) are
<disp-formula id="disp-formula17-0954406212446900"><label>(17)</label><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline" id="math17-0954406212446900"><mml:mrow><mml:mi>λ</mml:mi><mml:mo>=</mml:mo><mml:mo>-</mml:mo><mml:mfrac><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>L</mml:mi></mml:mrow></mml:mfrac><mml:mo>±</mml:mo><mml:mfrac><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>L</mml:mi></mml:mrow></mml:mfrac><mml:mi>j</mml:mi></mml:mrow></mml:math><graphic alternate-form-of="disp-formula17-0954406212446900" xlink:href="10.1177_0954406212446900-eq17.tif"/></disp-formula>
</p>
<p>As denoted in (17), the real part of the eigenvalues is negative for the positive <italic>v</italic> and <italic>L</italic>. It shows that the equilibrium point of the steering control system is locally asymptotically stable. Therefore, the convergence is satisfied.</p>
</sec>
</sec>
<sec id="sec6-0954406212446900"><title>Range sensor-based obstacle avoidance</title>
<p>As shown in <xref ref-type="fig" rid="fig5-0954406212446900">Figure 5</xref>, we assume that the robotic vehicle is equipped with a 2D laser scanner. The 2D laser scanner provides <italic>N</italic> equally spaced angular readings within a limited field of view. Therefore, the boundary of an obstacle is represented by a set of obstacle points. The maximum range of the laser scanner is denoted by <italic>d</italic><sub>max.</sub> Depending on the performance of the laser scanner, this maximum range can be large so that it detects faraway obstacles. However, we do not need to consider obstacles far away from the robotic vehicle. Thus, we define <italic>d<sub>l</sub></italic> as the obstacle’s effective distance. The robotic vehicle can ignore obstacles outside of distance <italic>d<sub>l</sub></italic>, even if the laser scanner can measure them.
<fig id="fig5-0954406212446900" position="float"><label>Figure 5.</label><caption><p>Obstacle detecting with 2D laser scanner.</p></caption><graphic xlink:href="10.1177_0954406212446900-fig5.tif"/>
</fig></p>
<p>The <italic>i</italic>-th angular reading of the laser scanner is a single obstacle point and let <italic>O<sub>i</sub></italic> be the <italic>i</italic>-th obstacle point. Thus, the obstacle’s boundary is expressed as a set of obstacle points. And <italic><sup>V</sup></italic><bold>p</bold><italic><sub>Oi</sub></italic> is the vector that indicates point <italic>O<sub>i</sub></italic> with respect to the robot coordinate; <italic><sup>V</sup></italic><bold>p</bold><italic><sub>Oi</sub></italic> has direction <italic>α<sub>i</sub></italic> with respect to the <italic>x</italic>-axis of the robot coordinate system. <italic>α<sub>i</sub></italic> is termed the scanning angle of the <italic>i</italic>-th obstacle point.</p>
<sec id="sec7-0954406212446900"><title>Approximated nonholonomic distance</title>
<p>The distance from a robotic vehicle to an obstacle is used to calculate the obstacle potential. Since we are considering a vehicle cannot move sideways, an obstacle that lies on the side of the vehicle is not significant obstacle. Thus an obstacle potential from this obstacle is need to be a smaller one comparing with the obstacle lie in front of the vehicle.</p>
<p>In this article, instead of calculating the length of a nonholonomic path, which requires a complex computation, we approximate the length of the nonholonomic path as the approximated nonholonomic distance. If the look-ahead distance is given by <italic>L</italic> and the look-ahead point is <italic>p<sub>L</sub></italic>, the approximate nonholonomic distance between the robotic vehicle and the obstacle point is expressed as follows
<disp-formula id="disp-formula18-0954406212446900"><label>(18)</label><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline" id="math18-0954406212446900"><mml:mrow><mml:mi>n</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mtext mathvariant="bold">q</mml:mtext><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>O</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mrow><mml:mo/><mml:mo>{</mml:mo></mml:mrow><mml:mtable align="left"><mml:mtr><mml:mtd columnalign="center"><mml:mrow><mml:mtable align="left"><mml:mtr><mml:mtd columnalign="center"><mml:mrow><mml:mi>d</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mtext mathvariant="bold">q</mml:mtext><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>O</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mi>   </mml:mi><mml:mtext>if</mml:mtext><mml:mi> </mml:mi><mml:msub><mml:mrow><mml:mi>α</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="center" columnspan="1"><mml:mrow><mml:mfrac><mml:mrow><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>sin</mml:mi><mml:msub><mml:mrow><mml:mi>α</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfrac><mml:msub><mml:mrow><mml:mi>α</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mi>d</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mrow><mml:mi>L</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>O</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mi>   </mml:mi><mml:mtext>if</mml:mtext><mml:mi> </mml:mi><mml:mi>d</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mtext mathvariant="bold">q</mml:mtext><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>O</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>&gt;</mml:mo><mml:mi>L</mml:mi><mml:mi>   </mml:mi></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="center" columnspan="1"><mml:mrow><mml:mtext>and</mml:mtext><mml:msub><mml:mrow><mml:mi>α</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>≠</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="center" columnspan="1"><mml:mrow><mml:mfrac><mml:mrow><mml:mi>d</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mtext mathvariant="bold">q</mml:mtext><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>O</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mi>sin</mml:mi><mml:msub><mml:mrow><mml:mi>α</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfrac><mml:msub><mml:mrow><mml:mi>α</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mi>   </mml:mi><mml:mtext>if</mml:mtext><mml:mi> </mml:mi><mml:mi>d</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mtext mathvariant="bold">q</mml:mtext><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>O</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>≤</mml:mo><mml:mi>L</mml:mi><mml:mi>   </mml:mi><mml:mtext>and</mml:mtext><mml:msub><mml:mrow><mml:mi>α</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>≠</mml:mo><mml:mn>0</mml:mn><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable><mml:mrow><mml:mo/><mml:mo/></mml:mrow></mml:mrow></mml:math><graphic alternate-form-of="disp-formula18-0954406212446900" xlink:href="10.1177_0954406212446900-eq18.tif"/></disp-formula>
</p>
<p>In (18), <italic>Lα<sub>i</sub></italic>/sin<italic>α<sub>i</sub></italic> is the arc length from <bold>q</bold> to <italic>p<sub>L</sub></italic> in <xref ref-type="fig" rid="fig6-0954406212446900">Figure 6</xref>. Thus, the approximated nonholonomic distance <italic>n</italic>(<bold>q</bold>, <italic>O<sub>i</sub></italic>) is the sum of the arc length from <bold>q</bold> to <italic>p<sub>L</sub></italic> and the Euclidian distance between <italic>p<sub>L</sub></italic> and <italic>O<sub>i</sub></italic> when <italic>d</italic>(<bold>q</bold>, <italic>O<sub>i</sub></italic>) &gt; <italic>L</italic>. Otherwise, the approximated nonholonomic distance is the arc length from <bold>q</bold> to <italic>O<sub>i</sub></italic>. The approximated nonholonomic distance has a maximum value for the fixed <italic>O<sub>i</sub></italic> when the obstacle’s direction <italic>α<sub>i</sub></italic> is −90° or 90°.
<fig id="fig6-0954406212446900" position="float"><label>Figure 6.</label><caption><p>Approximated nonholonomic distance.</p></caption><graphic xlink:href="10.1177_0954406212446900-fig6.tif"/>
</fig></p>
<p>Let us consider the nonholonomic path to the point, then it is constructed with the arc with the radius <italic>R</italic><sub>min</sub> and the straight line to the point. For a given <italic>α<sub>i</sub></italic>, the length of the approximated path is larger than the nonholonomic distance because the arc length of <italic>n</italic>(<bold>q</bold>, <italic>O<sub>i</sub></italic>) given in (18) is larger than the arc length of the nonholonomic path. Even though this distance is approximated as one of the nonholonomic paths, the distance increases according to the obstacle’s direction <italic>α<sub>i</sub></italic> as like the nonholonomic path. Thus it can be used as the approximation of the nonholonomic path.</p>
<p>For example, let us assume that only a single obstacle point <italic>O</italic> exists and <italic>O</italic> can be located where it satisfies <italic>d</italic>(<bold>q</bold>, <italic>O</italic>) = 12 m and −90° &lt; <italic>α</italic> &lt; 90°. Then the approximated nonholonomic distance <italic>n</italic>(<bold>q</bold>, <italic>O</italic>) is determined as shown in <xref ref-type="fig" rid="fig7-0954406212446900">Figure 7</xref>.
<fig id="fig7-0954406212446900" position="float"><label>Figure 7.</label><caption><p>Example of an approximated nonholonomic distance to the single obstacle point: <italic>α</italic> versus <italic>n</italic>(<bold>q</bold>, <italic>O</italic>) when <italic>d</italic>(<bold>q</bold>, <italic>O</italic>) = 12 m, <italic>L</italic> = 10 m.</p></caption><graphic xlink:href="10.1177_0954406212446900-fig7.tif"/>
</fig></p>
</sec>
<sec id="sec8-0954406212446900"><title>Obstacle potential and virtual force</title>
<p>After determining the approximated nonholonomic distance to the obstacle point <italic>O<sub>i</sub></italic>, the obstacle potential <italic>v<sub>i</sub></italic> is given as
<disp-formula id="disp-formula19-0954406212446900"><label>(19)</label><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline" id="math19-0954406212446900"><mml:mrow><mml:msub><mml:mrow><mml:mi>ν</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo/><mml:mo>{</mml:mo></mml:mrow><mml:mtable align="left"><mml:mtr><mml:mtd columnalign="center"><mml:mrow><mml:mfrac><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mtext mathvariant="bold">q</mml:mtext><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>O</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>+</mml:mo><mml:msub><mml:mrow><mml:mi>d</mml:mi></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:mfrac><mml:mo>+</mml:mo><mml:mfrac><mml:mrow><mml:mi>n</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mtext mathvariant="bold">q</mml:mtext><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>O</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>d</mml:mi></mml:mrow><mml:mrow><mml:mi>l</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mrow><mml:mi>d</mml:mi></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:msup><mml:mi/><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mfrac><mml:mi>   </mml:mi><mml:mtext>if</mml:mtext><mml:mn>0</mml:mn><mml:mo>≤</mml:mo><mml:mi>n</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mtext mathvariant="bold">q</mml:mtext><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>O</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>≤</mml:mo><mml:msub><mml:mrow><mml:mi>d</mml:mi></mml:mrow><mml:mrow><mml:mi>l</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="center" columnspan="1"><mml:mrow><mml:mfrac><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>d</mml:mi></mml:mrow><mml:mrow><mml:mi>l</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mrow><mml:mi>d</mml:mi></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:mfrac><mml:mo>+</mml:mo><mml:mfrac><mml:mrow><mml:msub><mml:mrow><mml:mi>d</mml:mi></mml:mrow><mml:mrow><mml:mi>l</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>d</mml:mi></mml:mrow><mml:mrow><mml:mi>l</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mrow><mml:mi>d</mml:mi></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:msup><mml:mi/><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mfrac><mml:mi>      </mml:mi><mml:mi>      </mml:mi><mml:mtext>if</mml:mtext><mml:mi>n</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mtext mathvariant="bold">q</mml:mtext><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>O</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>&gt;</mml:mo><mml:msub><mml:mrow><mml:mi>d</mml:mi></mml:mrow><mml:mrow><mml:mi>l</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic alternate-form-of="disp-formula19-0954406212446900" xlink:href="10.1177_0954406212446900-eq19.tif"/></disp-formula>
where <italic>d</italic><sub>0</sub> is a constant introduced to prevent the potential obstacle from becoming infinite when <italic>n</italic>(<bold>q</bold>, <italic>O<sub>i</sub></italic>) equals zero. Then the total potential is
<disp-formula id="disp-formula20-0954406212446900"><label>(20)</label><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline" id="math20-0954406212446900"><mml:mrow><mml:mi>U</mml:mi><mml:mo>=</mml:mo><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>N</mml:mi></mml:mrow></mml:munderover><mml:msub><mml:mrow><mml:mi>ν</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>.</mml:mo></mml:mrow></mml:math><graphic alternate-form-of="disp-formula20-0954406212446900" xlink:href="10.1177_0954406212446900-eq20.tif"/></disp-formula>
</p>
<p>The virtual force from the <italic>i</italic>-th obstacle point obtained from the negative gradient of the potential function (i.e. <inline-formula id="ilm1-0954406212446900"><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline" id="mml-math1-0954406212446900"><mml:mrow><mml:msub><mml:mrow><mml:mtext mathvariant="bold">f</mml:mtext></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mo>-</mml:mo><mml:mo>∇</mml:mo><mml:msub><mml:mrow><mml:mi>ν</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula>) is</p>
<p>In (21), the magnitude of the <italic>i</italic>-th virtual force has a maximum value when <italic>n</italic>(<bold>q</bold>, <italic>O<sub>i</sub></italic>) is zero. Thus, this value is bounded.
<disp-formula id="disp-formula21-0954406212446900"><label>(21)</label><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline" id="math21-0954406212446900"><mml:mrow><mml:msub><mml:mrow><mml:mtext mathvariant="bold">f</mml:mtext></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo/><mml:mo>{</mml:mo></mml:mrow><mml:mtable align="left"><mml:mtr><mml:mtd columnalign="center"><mml:mrow><mml:mo>-</mml:mo><mml:mrow><mml:mo/><mml:mo>(</mml:mo></mml:mrow><mml:mfrac><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>d</mml:mi></mml:mrow><mml:mrow><mml:mi>l</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mrow><mml:mi>d</mml:mi></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:msup><mml:mi/><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mfrac><mml:mo>-</mml:mo><mml:mfrac><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mtext mathvariant="bold">q</mml:mtext><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>O</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>+</mml:mo><mml:msub><mml:mrow><mml:mi>d</mml:mi></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:msup><mml:mi/><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mfrac><mml:mrow><mml:mo/><mml:mo>)</mml:mo></mml:mrow><mml:msub><mml:mrow><mml:mtext mathvariant="bold">u</mml:mtext></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mtext>if</mml:mtext><mml:mn>0</mml:mn><mml:mo>≤</mml:mo><mml:mi>n</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mtext mathvariant="bold">q</mml:mtext><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>O</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>≤</mml:mo><mml:msub><mml:mrow><mml:mi>d</mml:mi></mml:mrow><mml:mrow><mml:mi>l</mml:mi></mml:mrow></mml:msub><mml:mn>0</mml:mn><mml:mtext>if</mml:mtext><mml:mi>n</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mtext mathvariant="bold">q</mml:mtext><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>O</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>&gt;</mml:mo><mml:msub><mml:mrow><mml:mi>d</mml:mi></mml:mrow><mml:mrow><mml:mi>l</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mtd></mml:mtr></mml:mtable><mml:mrow><mml:mo/><mml:mo/></mml:mrow><mml:mi>   </mml:mi><mml:mtext>where</mml:mtext><mml:mi>   </mml:mi><mml:msub><mml:mrow><mml:mtext mathvariant="bold">u</mml:mtext></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:msup><mml:mrow/><mml:mrow><mml:mi>V</mml:mi></mml:mrow></mml:msup><mml:msub><mml:mrow><mml:mtext mathvariant="bold">p</mml:mtext></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>O</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:mrow><mml:mo/><mml:mo>|</mml:mo></mml:mrow><mml:msup><mml:mrow/><mml:mrow><mml:mi>V</mml:mi></mml:mrow></mml:msup><mml:msub><mml:mrow><mml:mtext mathvariant="bold">p</mml:mtext></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>O</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mrow><mml:mo/><mml:mo>|</mml:mo></mml:mrow></mml:mrow></mml:mfrac><mml:mrow><mml:mo/><mml:mo/></mml:mrow></mml:mrow></mml:math><graphic alternate-form-of="disp-formula21-0954406212446900" xlink:href="10.1177_0954406212446900-eq21.tif"/></disp-formula></p>
<p>Similar to (20), the total virtual force is calculated by
<disp-formula id="disp-formula22-0954406212446900"><label>(22)</label><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline" id="math22-0954406212446900"><mml:mrow><mml:mtext mathvariant="bold">F</mml:mtext><mml:mo>=</mml:mo><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>N</mml:mi></mml:mrow></mml:munderover><mml:msub><mml:mrow><mml:mtext mathvariant="bold">f</mml:mtext></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math><graphic alternate-form-of="disp-formula22-0954406212446900" xlink:href="10.1177_0954406212446900-eq22.tif"/></disp-formula>
</p>
<p>Because the magnitude of the each virtual force vector is bounded, the magnitude of (22) is also bounded. As shown on the right of <xref ref-type="fig" rid="fig8-0954406212446900">Figure 8</xref>, the total virtual force <bold>F,</bold> which is given by (22), can be regarded as a single force vector that is equivalent to the sum of every virtual force from the obstacle points. Let the equivalent obstacle point be <italic>O</italic>. Then, <italic><sup>V</sup></italic><bold>p</bold><italic><sub>O</sub></italic> is the vector that indicates the equivalent obstacle point <italic>O</italic> with respect to the vehicle coordinate. Then <italic><sup>V</sup></italic><bold>p</bold><italic><sub>O</sub></italic> has the direction <italic>α</italic> with respect to the <italic>x</italic>-axis of the robot coordinate system.
<fig id="fig8-0954406212446900" position="float"><label>Figure 8.</label><caption><p>Obstacle points and its equivalent point obstacle.</p></caption><graphic xlink:href="10.1177_0954406212446900-fig8.tif"/>
</fig></p>
</sec>
<sec id="sec9-0954406212446900"><title>Turning radius for avoiding obstacles</title>
<p>Since the robotic vehicle has a nonholonomic constraint, the force given in (22) cannot be directly used as a motion command. From the calculation of the virtual force using (22), the direction of the virtual force is always opposite from the direction of the robotic vehicle to the obstacle point. Instead of using the virtual force to determine the motion command for the vehicle directly, the turning radius for avoiding the obstacle is given as follows
<disp-formula id="disp-formula23-0954406212446900"><label>(23)</label><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline" id="math23-0954406212446900"><mml:mrow><mml:msub><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mi>avoid</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo/><mml:mo>(</mml:mo></mml:mrow><mml:mrow><mml:mo/><mml:mo>|</mml:mo></mml:mrow><mml:mtext mathvariant="bold">F</mml:mtext><mml:mrow><mml:mo/><mml:mo>|</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:mi>α</mml:mi><mml:mrow><mml:mo/><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:mo/><mml:mo>{</mml:mo></mml:mrow><mml:mtable align="left"><mml:mtr><mml:mtd columnalign="center"><mml:mrow><mml:mfrac><mml:mrow><mml:mo>-</mml:mo><mml:mtext>sgn</mml:mtext><mml:mrow><mml:mo/><mml:mo>(</mml:mo></mml:mrow><mml:mi>α</mml:mi><mml:mrow><mml:mo/><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>k</mml:mi></mml:mrow><mml:mrow><mml:mi>a</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo/><mml:mo>|</mml:mo></mml:mrow><mml:mtext mathvariant="bold">F</mml:mtext><mml:mrow><mml:mo/><mml:mo>|</mml:mo></mml:mrow></mml:mrow></mml:mfrac><mml:mi>   </mml:mi><mml:mtext>if</mml:mtext><mml:mi>α</mml:mi><mml:mo>≠</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="center" columnspan="1"><mml:mrow><mml:mfrac><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>k</mml:mi></mml:mrow><mml:mrow><mml:mi>a</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo/><mml:mo>|</mml:mo></mml:mrow><mml:mtext mathvariant="bold">F</mml:mtext><mml:mrow><mml:mo/><mml:mo>|</mml:mo></mml:mrow></mml:mrow></mml:mfrac><mml:mi>      </mml:mi><mml:mi>   </mml:mi><mml:mtext>if</mml:mtext><mml:mi>α</mml:mi><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:mtd></mml:mtr></mml:mtable><mml:mrow><mml:mo/><mml:mo/></mml:mrow></mml:mrow></mml:math><graphic alternate-form-of="disp-formula23-0954406212446900" xlink:href="10.1177_0954406212446900-eq23.tif"/></disp-formula>
where <italic>k<sub>a</sub></italic> is the gain value of the turning radius for avoiding the obstacle. The selection of this gain value is discussed in the ‘Motion planning of the robotic vehicle’ section. From (23), if the sensed obstacle lies exactly in front of the vehicle, in the case of <italic>α</italic> = 0, then we assume a left turn for the vehicle. Otherwise, in the case of <italic>α</italic> ≠ 0, the sign of the turning radius <italic>R<sub>avoid</sub></italic> is determined with respect to the sign of <italic>α</italic>. We can see that the turning radius for avoiding the obstacle <italic>R<sub>avoid</sub></italic> is infinite when there are no virtual forces from the obstacles. As the number of obstacle points increases or the approximated nonholonomic distance decreases, the magnitude of the total virtual force <bold>F</bold> from (22) becomes larger. Thus <italic>R<sub>avoid</sub></italic> given in (23) decreases so that the vehicle can have a sharper turn.</p>
</sec>
</sec>
<sec id="sec10-0954406212446900"><title>Motion planning of the robotic vehicle</title>
<p>In this article, we define the motion planning of the robotic vehicle as planning the linear velocity and the steering angle for the front wheels. These types of inputs to the vehicle do not violate nonholonomic constraints; thus, it is suitable for the vehicle’s motion planning. Since the range sensor only provides the local information of the environment, the objective of the motion planning is to plan the motion that guarantees a collision-free trajectory of the robotic vehicle given the limited information. To increase realism, the planning algorithm needs to consider the limit on the lateral acceleration for satisfying the nonslip condition.</p>
<sec id="sec11-0954406212446900"><title>Linear velocity planning</title>
<p>For efficient motion planning, a vehicle must reach the goal as soon as possible after meeting all waypoints. Thus, we define the maximum velocity of the vehicle as <italic>v</italic><sub>max</sub> under the nonslip conditions mentioned in the ‘Robotic vehicle model’ section. The vehicle maintains the maximum velocity except when
<list id="list1-0954406212446900" list-type="order">
<list-item><p>the vehicle has a large steering angle for the front wheels or</p></list-item>
<list-item><p>the vehicle encounters close obstacles.</p></list-item>
</list></p>
<p>To prevent a large yaw rate and lateral acceleration, such as occurs wth the obstacle potential method in the ‘Range sensor-based obstacle avoidance’ section, the virtual force from the steering potential is defined as where <italic>δ</italic><sub>max</sub> is the maximum steering angle for the front wheels, <italic>δ<sub>l</sub></italic> is the boundary value of the steering angle which does not generate the virtual force from the steering angle potential. And <italic>δ</italic><sub>0</sub> is the constant for the prevention of (24) from becoming infinite. <xref ref-type="fig" rid="fig9-0954406212446900">Figure 9</xref> shows the virtual force from the steering potential with respect to the steering angle.
<fig id="fig9-0954406212446900" position="float"><label>Figure 9.</label><caption><p>Virtual force from the steering potential.</p></caption><graphic xlink:href="10.1177_0954406212446900-fig9.tif"/>
</fig></p>
<p>With the virtual force from the obstacle potential (22) and the steering potential (24), the linear velocity decreases with the following equation
<disp-formula id="disp-formula24-0954406212446900"><label>(24)</label><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline" id="math24-0954406212446900"><mml:mrow><mml:msub><mml:mrow><mml:mi>f</mml:mi></mml:mrow><mml:mrow><mml:mi>δ</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>δ</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mrow><mml:mo/><mml:mo>{</mml:mo></mml:mrow><mml:mtable align="left"><mml:mtr><mml:mtd columnalign="center"><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:mtd><mml:mtd columnalign="center"><mml:mrow><mml:mtext>if</mml:mtext></mml:mrow></mml:mtd><mml:mtd columnalign="center"><mml:mrow><mml:mn>0</mml:mn><mml:mo>≤</mml:mo><mml:mrow><mml:mo/><mml:mo>|</mml:mo></mml:mrow><mml:mi>δ</mml:mi><mml:mrow><mml:mo/><mml:mo>|</mml:mo></mml:mrow><mml:mo>&lt;</mml:mo><mml:msub><mml:mrow><mml:mi>δ</mml:mi></mml:mrow><mml:mrow><mml:mi>l</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="center" columnspan="1"><mml:mrow><mml:mfrac><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mrow><mml:mo/><mml:mo>(</mml:mo></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>δ</mml:mi></mml:mrow><mml:mrow><mml:mo>max</mml:mo></mml:mrow></mml:msub><mml:mo>-</mml:mo><mml:mtext>sgn</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>δ</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mi>δ</mml:mi><mml:mo>+</mml:mo><mml:msub><mml:mrow><mml:mi>δ</mml:mi></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub><mml:msup><mml:mrow><mml:mo/><mml:mo>)</mml:mo></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mfrac><mml:mo>-</mml:mo><mml:mfrac><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mrow><mml:mo/><mml:mo>(</mml:mo></mml:mrow><mml:msub><mml:mrow><mml:mi>δ</mml:mi></mml:mrow><mml:mrow><mml:mo>max</mml:mo></mml:mrow></mml:msub><mml:mo>-</mml:mo><mml:msub><mml:mrow><mml:mi>δ</mml:mi></mml:mrow><mml:mrow><mml:mi>l</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mrow><mml:mi>δ</mml:mi></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub><mml:msup><mml:mrow><mml:mo/><mml:mo>)</mml:mo></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mfrac></mml:mrow></mml:mtd><mml:mtd columnalign="center"><mml:mrow><mml:mtext>if</mml:mtext></mml:mrow></mml:mtd><mml:mtd columnalign="center"><mml:mrow><mml:msub><mml:mrow><mml:mi>δ</mml:mi></mml:mrow><mml:mrow><mml:mi>l</mml:mi></mml:mrow></mml:msub><mml:mo>≤</mml:mo><mml:mrow><mml:mo/><mml:mo>|</mml:mo></mml:mrow><mml:mi>δ</mml:mi><mml:mrow><mml:mo/><mml:mo>|</mml:mo></mml:mrow><mml:mo>&lt;</mml:mo><mml:msub><mml:mrow><mml:mi>δ</mml:mi></mml:mrow><mml:mrow><mml:mo>max</mml:mo></mml:mrow></mml:msub></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="center" columnspan="1"><mml:mrow><mml:mfrac><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:msubsup><mml:mrow><mml:mi>δ</mml:mi></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msubsup></mml:mrow></mml:mfrac><mml:mo>-</mml:mo><mml:mfrac><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mrow><mml:mo/><mml:mo>(</mml:mo></mml:mrow><mml:msub><mml:mrow><mml:mi>δ</mml:mi></mml:mrow><mml:mrow><mml:mo>max</mml:mo></mml:mrow></mml:msub><mml:mo>-</mml:mo><mml:msub><mml:mrow><mml:mi>δ</mml:mi></mml:mrow><mml:mrow><mml:mi>l</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mrow><mml:mi>δ</mml:mi></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub><mml:msup><mml:mrow><mml:mo/><mml:mo>)</mml:mo></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mfrac></mml:mrow></mml:mtd><mml:mtd columnalign="center"><mml:mrow><mml:mtext>if</mml:mtext></mml:mrow></mml:mtd><mml:mtd columnalign="center"><mml:mrow><mml:mrow><mml:mo/><mml:mo>|</mml:mo></mml:mrow><mml:mi>δ</mml:mi><mml:mrow><mml:mo/><mml:mo>|</mml:mo></mml:mrow><mml:mo>≥</mml:mo><mml:msub><mml:mrow><mml:mi>δ</mml:mi></mml:mrow><mml:mrow><mml:mo>max</mml:mo></mml:mrow></mml:msub></mml:mrow></mml:mtd></mml:mtr></mml:mtable><mml:mrow><mml:mo/><mml:mo/></mml:mrow></mml:mrow></mml:math><graphic alternate-form-of="disp-formula24-0954406212446900" xlink:href="10.1177_0954406212446900-eq24.tif"/></disp-formula>
<disp-formula id="disp-formula25-0954406212446900"><label>(25)</label><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline" id="math25-0954406212446900"><mml:mrow><mml:mi>v</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mo>max</mml:mo></mml:mrow></mml:msub><mml:mo>-</mml:mo><mml:msub><mml:mrow><mml:mi>k</mml:mi></mml:mrow><mml:mrow><mml:mi>O</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo/><mml:mo>|</mml:mo></mml:mrow><mml:mtext mathvariant="bold">F</mml:mtext><mml:mrow><mml:mo/><mml:mo>|</mml:mo></mml:mrow><mml:mo>-</mml:mo><mml:msub><mml:mrow><mml:mi>k</mml:mi></mml:mrow><mml:mrow><mml:mi>δ</mml:mi></mml:mrow></mml:msub><mml:mi> </mml:mi><mml:msub><mml:mrow><mml:mi>f</mml:mi></mml:mrow><mml:mrow><mml:mi>δ</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>δ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><graphic alternate-form-of="disp-formula25-0954406212446900" xlink:href="10.1177_0954406212446900-eq25.tif"/></disp-formula>
where <italic>v</italic><sub>max</sub> is the maximum velocity, <italic>k<sub>O</sub></italic> and <italic>k</italic><sub>δ</sub> are the gains for each virtual forces. Since we want to keep <italic>v</italic>(<italic>t</italic>) &gt; 0, these selected <italic>k<sub>O</sub></italic> and <italic>k</italic><sub>δ</sub> should satisfy
<disp-formula id="disp-formula26-0954406212446900"><label>(26)</label><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline" id="math26-0954406212446900"><mml:mrow><mml:msub><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mo>max</mml:mo></mml:mrow></mml:msub><mml:mo>-</mml:mo><mml:msub><mml:mrow><mml:mi>k</mml:mi></mml:mrow><mml:mrow><mml:mi>O</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mrow><mml:mi>F</mml:mi></mml:mrow><mml:mrow><mml:mo>max</mml:mo></mml:mrow></mml:msub><mml:mo>-</mml:mo><mml:msub><mml:mrow><mml:mi>k</mml:mi></mml:mrow><mml:mrow><mml:mi>δ</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mrow><mml:mi>f</mml:mi></mml:mrow><mml:mrow><mml:mi>δ</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>δ</mml:mi></mml:mrow><mml:mrow><mml:mo>max</mml:mo></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>&gt;</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math><graphic alternate-form-of="disp-formula26-0954406212446900" xlink:href="10.1177_0954406212446900-eq26.tif"/></disp-formula>
where <italic>F</italic><sub>max</sub> is the maximum value of the virtual force from the obstacle points, which is expressed by
<disp-formula id="disp-formula27-0954406212446900"><label>(27)</label><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline" id="math27-0954406212446900"><mml:mrow><mml:msub><mml:mrow><mml:mi>F</mml:mi></mml:mrow><mml:mrow><mml:mo>max</mml:mo></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>N</mml:mi></mml:mrow></mml:munderover><mml:mo>max</mml:mo><mml:mrow><mml:mo/><mml:mo>|</mml:mo></mml:mrow><mml:msub><mml:mrow><mml:mtext mathvariant="bold">f</mml:mtext></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo/><mml:mo>|</mml:mo></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:math><graphic alternate-form-of="disp-formula27-0954406212446900" xlink:href="10.1177_0954406212446900-eq27.tif"/></disp-formula>
</p>
<p>We consider the condition for selecting <italic>k</italic><sub>δ</sub> with no obstacle within the sensing range. In this case, |<bold>F</bold>| = 0 is obtained from (22) and by substituting it into (25), the linear velocity becomes <italic>v</italic><sub>max</sub> – <italic>k<sub>δ</sub>f<sub>δ</sub></italic>(<italic>δ</italic>). Using the minimum turning radius <italic>R</italic><sub>min</sub> = <italic>b</italic>/<italic>δ</italic><sub>max</sub> to keep the limit on the angular velocity for turning with <italic>R</italic><sub>min</sub>, the velocity given in (25) should not exceed <italic>R</italic><sub>min</sub><italic>ω</italic><sub>lim</sub> as follows
<disp-formula id="disp-formula28-0954406212446900"><label>(28)</label><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline" id="math28-0954406212446900"><mml:mrow><mml:msub><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mo>max</mml:mo></mml:mrow></mml:msub><mml:mo>-</mml:mo><mml:msub><mml:mrow><mml:mi>k</mml:mi></mml:mrow><mml:mrow><mml:mi>δ</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mrow><mml:mi>f</mml:mi></mml:mrow><mml:mrow><mml:mi>δ</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>δ</mml:mi></mml:mrow><mml:mrow><mml:mo>max</mml:mo></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>&lt;</mml:mo><mml:msub><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mo>min</mml:mo></mml:mrow></mml:msub><mml:msub><mml:mrow><mml:mi>ω</mml:mi></mml:mrow><mml:mrow><mml:mo>lim</mml:mo></mml:mrow></mml:msub><mml:mo>.</mml:mo></mml:mrow></mml:math><graphic alternate-form-of="disp-formula28-0954406212446900" xlink:href="10.1177_0954406212446900-eq28.tif"/></disp-formula>
</p>
<p>Then, <italic>k<sub>δ</sub></italic> satisfies the following condition
<disp-formula id="disp-formula29-0954406212446900"><label>(29)</label><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline" id="math29-0954406212446900"><mml:mrow><mml:msub><mml:mrow><mml:mi>k</mml:mi></mml:mrow><mml:mrow><mml:mi>δ</mml:mi></mml:mrow></mml:msub><mml:mo>&gt;</mml:mo><mml:mfrac><mml:mrow><mml:msub><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mo>max</mml:mo></mml:mrow></mml:msub><mml:mo>-</mml:mo><mml:msub><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mo>min</mml:mo></mml:mrow></mml:msub><mml:msub><mml:mrow><mml:mi>ω</mml:mi></mml:mrow><mml:mrow><mml:mo>lim</mml:mo></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>f</mml:mi></mml:mrow><mml:mrow><mml:mi>δ</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>δ</mml:mi></mml:mrow><mml:mrow><mml:mo>max</mml:mo></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mfrac></mml:mrow></mml:math><graphic alternate-form-of="disp-formula29-0954406212446900" xlink:href="10.1177_0954406212446900-eq29.tif"/></disp-formula>
</p>
<p>Thus the process for selecting the gain values is as follows: determining <italic>k<sub>δ</sub></italic> using (29) and then substituting that value to (26) to determine <italic>k<sub>O</sub></italic>. Under the condition of (26), the minimum value of the velocity given in (25) does not become zero. This means that the robotic vehicle does not stop due to the large steering angle or the virtual force from the obstacle. Therefore even when the velocity of the vehicle rapidly decreases while |<bold>F</bold>| becomes close to <italic>F</italic><sub>max</sub>, the local minima does not exist.</p>
</sec>
<sec id="sec12-0954406212446900"><title>Steering angle planning</title>
<p>For low-speed cornering, the lateral acceleration <italic>a<sub>y</sub></italic> needs to be limited by the maximum lateral acceleration <italic>a<sub>y</sub><sub>,</sub></italic><sub>max</sub> to satisfying a nonslip conditions where the lateral acceleration is
<disp-formula id="disp-formula30-0954406212446900"><label>(30)</label><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline" id="math30-0954406212446900"><mml:mrow><mml:msub><mml:mrow><mml:mi>a</mml:mi></mml:mrow><mml:mrow><mml:mi>y</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:msup><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow><mml:mrow><mml:mi>R</mml:mi></mml:mrow></mml:mfrac><mml:mo>=</mml:mo><mml:mi>κ</mml:mi><mml:msup><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo>.</mml:mo></mml:mrow></mml:math><graphic alternate-form-of="disp-formula30-0954406212446900" xlink:href="10.1177_0954406212446900-eq30.tif"/></disp-formula>
</p>
<p>To satisfy this condition, the motion planner restricts the planned turning radius using the following equation
<disp-formula id="disp-formula31-0954406212446900"><label>(31)</label><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline" id="math31-0954406212446900"><mml:mrow><mml:mrow><mml:mo/><mml:mo>|</mml:mo></mml:mrow><mml:mi>R</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mrow><mml:mo/><mml:mo>|</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:mo/><mml:mo>{</mml:mo></mml:mrow><mml:mtable align="left"><mml:mtr><mml:mtd columnalign="center"><mml:mrow><mml:mfrac><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>δ</mml:mi></mml:mrow><mml:mrow><mml:mo>max</mml:mo></mml:mrow></mml:msub></mml:mrow></mml:mfrac></mml:mrow></mml:mtd><mml:mtd columnalign="center"><mml:mrow><mml:mtext>if</mml:mtext></mml:mrow></mml:mtd><mml:mtd columnalign="center"><mml:mrow><mml:mn>0</mml:mn><mml:mo>≤</mml:mo><mml:mi>v</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>&lt;</mml:mo><mml:msub><mml:mrow><mml:mi>V</mml:mi></mml:mrow><mml:mrow><mml:mi>s</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="center" columnspan="1"><mml:mrow><mml:mfrac><mml:mrow><mml:msup><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>a</mml:mi></mml:mrow><mml:mrow><mml:mi>y</mml:mi><mml:mo>,</mml:mo><mml:mo>max</mml:mo></mml:mrow></mml:msub></mml:mrow></mml:mfrac></mml:mrow></mml:mtd><mml:mtd columnalign="center"><mml:mrow><mml:mtext>else if</mml:mtext></mml:mrow></mml:mtd><mml:mtd columnalign="center"><mml:mrow><mml:msub><mml:mrow><mml:mi>V</mml:mi></mml:mrow><mml:mrow><mml:mi>s</mml:mi></mml:mrow></mml:msub><mml:mo>≤</mml:mo><mml:mi>v</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>≤</mml:mo><mml:msub><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mo>max</mml:mo></mml:mrow></mml:msub></mml:mrow></mml:mtd></mml:mtr></mml:mtable><mml:mrow><mml:mo/><mml:mo/></mml:mrow></mml:mrow></mml:math><graphic alternate-form-of="disp-formula31-0954406212446900" xlink:href="10.1177_0954406212446900-eq31.tif"/></disp-formula>
where <inline-formula id="ilm2-0954406212446900"><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline" id="mml-math2-0954406212446900"><mml:mrow><mml:msub><mml:mrow><mml:mi>V</mml:mi></mml:mrow><mml:mrow><mml:mi>s</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msqrt><mml:mrow><mml:msub><mml:mrow><mml:mi>a</mml:mi></mml:mrow><mml:mrow><mml:mi>y</mml:mi><mml:mo>,</mml:mo><mml:mo>max</mml:mo></mml:mrow></mml:msub><mml:msub><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mo>min</mml:mo></mml:mrow></mml:msub></mml:mrow></mml:msqrt></mml:mrow></mml:math></inline-formula> and <italic>R</italic><sub>min</sub> = <italic>b</italic>/<italic>δ</italic><sub>max</sub>. <xref ref-type="fig" rid="fig10-0954406212446900">Figure 10</xref> shows an example of the feasible range of velocity given the turning radius for low-speed cornering.
<fig id="fig10-0954406212446900" position="float"><label>Figure 10.</label><caption><p>Feasible range for low-speed cornering.</p></caption><graphic xlink:href="10.1177_0954406212446900-fig10.tif"/>
</fig></p>
<p>We calculate the steering angle so that the turning radius and the linear velocity of the vehicle should stay within the feasible range given by (31). From (7) and (23), the turning radiuses are determined for the path tracking and the obstacle avoidance, respectively. These turning radiuses can be rewritten as the curvature
<disp-formula id="disp-formula32-0954406212446900"><label>(32)</label><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline" id="math32-0954406212446900"><mml:mrow><mml:msub><mml:mrow><mml:mi>κ</mml:mi></mml:mrow><mml:mrow><mml:mi>track</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mi>track</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfrac><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>κ</mml:mi></mml:mrow><mml:mrow><mml:mi>avoid</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mi>avoid</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfrac><mml:mo>.</mml:mo></mml:mrow></mml:math><graphic alternate-form-of="disp-formula32-0954406212446900" xlink:href="10.1177_0954406212446900-eq32.tif"/></disp-formula>
</p>
<p>In (32), <italic>κ<sub>track</sub></italic> and <italic>κ<sub>avoid</sub></italic> can be interpreted as the attractive motion to the given path and the repulsive motion to the obstacle. In this article, the reference curvature for the robotic vehicle is defined as the sum of the two curvatures as follows
<disp-formula id="disp-formula33-0954406212446900"><label>(33)</label><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline" id="math33-0954406212446900"><mml:mrow><mml:msub><mml:mrow><mml:mi>κ</mml:mi></mml:mrow><mml:mrow><mml:mi>total</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi>κ</mml:mi></mml:mrow><mml:mrow><mml:mi>track</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mrow><mml:mi>κ</mml:mi></mml:mrow><mml:mrow><mml:mi>avoid</mml:mi></mml:mrow></mml:msub><mml:mo>.</mml:mo></mml:mrow></mml:math><graphic alternate-form-of="disp-formula33-0954406212446900" xlink:href="10.1177_0954406212446900-eq33.tif"/></disp-formula>
</p>
<p>Then with (2), the steering angle for the front wheels is obtained as
<disp-formula id="disp-formula34-0954406212446900"><label>(34)</label><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline" id="math34-0954406212446900"><mml:mrow><mml:mi>δ</mml:mi><mml:mo>=</mml:mo><mml:mi>b</mml:mi><mml:msub><mml:mrow><mml:mi>κ</mml:mi></mml:mrow><mml:mrow><mml:mi>total</mml:mi></mml:mrow></mml:msub><mml:mo>.</mml:mo></mml:mrow></mml:math><graphic alternate-form-of="disp-formula34-0954406212446900" xlink:href="10.1177_0954406212446900-eq34.tif"/></disp-formula>
</p>
<p><xref ref-type="fig" rid="fig11-0954406212446900">Figure 11</xref> shows an example of the reference curvature. When the obstacle points are detected by the range sensor, the instantaneous trajectory for following the path and avoiding the obstacle is determined by summing up the two types of curvatures given in (33). Therefore, the difficulty of switching between the two modes, the path tracking and obstacle avoidance, does not need to be considered.
<fig id="fig11-0954406212446900" position="float"><label>Figure 11.</label><caption><p>Reference curvature of the robotic vehicle.</p></caption><graphic xlink:href="10.1177_0954406212446900-fig11.tif"/>
</fig></p>
<p>The turning radius for avoiding the obstacle given in (23) should guarantees the collision-free motion of the vehicle. The gain value <italic>k<sub>a</sub></italic> in (23) determines the size of turning radius, thus it is needed to be selected so that the turning radius is larger than the minimum turning radius and the resultant trajectory of the vehicle is collision free. Without finding the collision-free path while it considers the geometry of the obstacle, this article provides the method to satisfies these conditions.</p>
<p>Let <italic>F</italic><sub>min</sub> be the minimum value of the virtual force from an obstacle, which is larger than zero. As shown on the left side of <xref ref-type="fig" rid="fig12-0954406212446900">Figure 12</xref>, the equivalent point obstacle may lie on the right side of the vehicle. This is the case when the obstacle’s direction is smaller than zero, <italic>α</italic> &lt; 0. Even when the negative maximum value of the curvature is obtained from the path tracking method, the reference curvature needs to have a positive value if the virtual force from the equivalent point obstacle is larger than <italic>F</italic><sub>min</sub>. With (23) and (33), this condition can be represented by
<disp-formula id="disp-formula35-0954406212446900"><label>(35)</label><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline" id="math35-0954406212446900"><mml:mrow><mml:msub><mml:mrow><mml:mi>κ</mml:mi></mml:mrow><mml:mrow><mml:mi>total</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mo>-</mml:mo><mml:mo>max</mml:mo><mml:mrow><mml:mo/><mml:mo>(</mml:mo></mml:mrow><mml:msub><mml:mrow><mml:mi>κ</mml:mi></mml:mrow><mml:mrow><mml:mi>track</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo/><mml:mo>)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:mo>min</mml:mo><mml:mrow><mml:mo/><mml:mo>(</mml:mo></mml:mrow><mml:msub><mml:mrow><mml:mi>κ</mml:mi></mml:mrow><mml:mrow><mml:mi>avoid</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo/><mml:mo>)</mml:mo></mml:mrow><mml:mo>&lt;</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math><graphic alternate-form-of="disp-formula35-0954406212446900" xlink:href="10.1177_0954406212446900-eq35.tif"/></disp-formula>
where
<disp-formula id="disp-formula38-0954406212446900"><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline" id="math38-0954406212446900"><mml:mrow><mml:mo>min</mml:mo><mml:mrow><mml:mo/><mml:mo>(</mml:mo></mml:mrow><mml:msub><mml:mrow><mml:mi>κ</mml:mi></mml:mrow><mml:mrow><mml:mi>avoid</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo/><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mi>avoid</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo/><mml:mo>(</mml:mo></mml:mrow><mml:msub><mml:mrow><mml:mi>F</mml:mi></mml:mrow><mml:mrow><mml:mo>min</mml:mo></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mi>α</mml:mi><mml:mrow><mml:mo/><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mfrac><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi>k</mml:mi></mml:mrow><mml:mrow><mml:mi>a</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mrow><mml:mi>F</mml:mi></mml:mrow><mml:mrow><mml:mo>min</mml:mo></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mi>   </mml:mi><mml:mtext>where</mml:mtext><mml:mi>α</mml:mi><mml:mo>&lt;</mml:mo><mml:mn>0</mml:mn><mml:mo>.</mml:mo></mml:mrow></mml:math><graphic alternate-form-of="disp-formula38-0954406212446900" xlink:href="10.1177_0954406212446900-eq38.tif"/></disp-formula>
<fig id="fig12-0954406212446900" position="float"><label>Figure 12.</label><caption><p>The sign of the reference curvature depending on the orientation of the equivalent point obstacle. (a) The equivalent obstacle exists on the right side of the vehicle and (b) the equivalent obstacle exists on the left side of the vehicle.</p></caption><graphic xlink:href="10.1177_0954406212446900-fig12.tif"/>
</fig></p>
<p>Similarly, the right side of <xref ref-type="fig" rid="fig12-0954406212446900">Figure 12</xref> shows the equivalent point obstacle which has a positive orientation with respect to the vehicle coordinates. Even when the positive maximum value of the curvature is obtained from the path tracking method, the reference curvature needs to have a negative value when the equivalent point obstacle provides a virtual force larger than <italic>F</italic><sub>min</sub>. This condition is also represented by
<disp-formula id="disp-formula36-0954406212446900"><label>(36)</label><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline" id="math36-0954406212446900"><mml:mrow><mml:msub><mml:mrow><mml:mi>κ</mml:mi></mml:mrow><mml:mrow><mml:mi>total</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mo>max</mml:mo><mml:mrow><mml:mo/><mml:mo>(</mml:mo></mml:mrow><mml:msub><mml:mrow><mml:mi>κ</mml:mi></mml:mrow><mml:mrow><mml:mi>track</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo/><mml:mo>)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:mo>min</mml:mo><mml:mrow><mml:mo/><mml:mo>(</mml:mo></mml:mrow><mml:msub><mml:mrow><mml:mi>κ</mml:mi></mml:mrow><mml:mrow><mml:mi>avoid</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo/><mml:mo>)</mml:mo></mml:mrow><mml:mo>&gt;</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math><graphic alternate-form-of="disp-formula36-0954406212446900" xlink:href="10.1177_0954406212446900-eq36.tif"/></disp-formula>
where
<disp-formula id="disp-formula39-0954406212446900"><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline" id="math39-0954406212446900"><mml:mrow><mml:mo>min</mml:mo><mml:mrow><mml:mo/><mml:mo>(</mml:mo></mml:mrow><mml:msub><mml:mrow><mml:mi>κ</mml:mi></mml:mrow><mml:mrow><mml:mi>avoid</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo/><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mi>avoid</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo/><mml:mo>(</mml:mo></mml:mrow><mml:msub><mml:mrow><mml:mi>F</mml:mi></mml:mrow><mml:mrow><mml:mo>min</mml:mo></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mi>α</mml:mi><mml:mrow><mml:mo/><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mfrac><mml:mo>=</mml:mo><mml:mo>-</mml:mo><mml:msub><mml:mrow><mml:mi>k</mml:mi></mml:mrow><mml:mrow><mml:mi>a</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mrow><mml:mi>F</mml:mi></mml:mrow><mml:mrow><mml:mo>min</mml:mo></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mi>α</mml:mi><mml:mo>&gt;</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math><graphic alternate-form-of="disp-formula39-0954406212446900" xlink:href="10.1177_0954406212446900-eq39.tif"/></disp-formula>
</p>
<p>Thus, we can see that (35) and (36) are equivalent. Substituting (9) to (35) or (36) gives the following expression
<disp-formula id="disp-formula37-0954406212446900"><label>(37)</label><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" display="inline" id="math37-0954406212446900"><mml:mrow><mml:mo>-</mml:mo><mml:mfrac><mml:mrow><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mi>L</mml:mi></mml:mrow></mml:mfrac><mml:mo>+</mml:mo><mml:msub><mml:mrow><mml:mi>k</mml:mi></mml:mrow><mml:mrow><mml:mi>a</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mrow><mml:mi>F</mml:mi></mml:mrow><mml:mrow><mml:mo>min</mml:mo></mml:mrow></mml:msub><mml:mo>&lt;</mml:mo><mml:mn>0</mml:mn><mml:mi>   </mml:mi><mml:mtext>or</mml:mtext><mml:mi>   </mml:mi><mml:msub><mml:mrow><mml:mi>k</mml:mi></mml:mrow><mml:mrow><mml:mi>a</mml:mi></mml:mrow></mml:msub><mml:mo>&gt;</mml:mo><mml:mfrac><mml:mrow><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>F</mml:mi></mml:mrow><mml:mrow><mml:mo>min</mml:mo></mml:mrow></mml:msub><mml:mi>L</mml:mi></mml:mrow></mml:mfrac><mml:mo>.</mml:mo></mml:mrow></mml:math><graphic alternate-form-of="disp-formula37-0954406212446900" xlink:href="10.1177_0954406212446900-eq37.tif"/></disp-formula>
</p>
<p>That is, if the virtual force from the obstacle exceeds <italic>F</italic><sub>min,</sub> then the sign of the curvature is always opposite to the equivalent point obstacle under the condition of (37).</p>
</sec>
</sec>
<sec id="sec13-0954406212446900"><title>Simulation results</title>
<p>The motion planning method developed in this article was tested through simulations. The structure of the motion planning of the robotic vehicle is shown in <xref ref-type="fig" rid="fig13-0954406212446900">Figure 13</xref>. In this figure, the waypoint planner provides the waypoints. As it has already been explained in the ‘Range sensor-based obstacle avoidance’ section, a 2D laser scanner provides the obstacle points. In this article, the initial configuration of the robotic vehicle is given. These three kinds of information, the waypoints, the obstacle points, and the configuration, are the inputs to the robotic vehicle motion planner. With these inputs, the robotic vehicle motion planner generates the steering angle and the velocity in real time.
<fig id="fig13-0954406212446900" position="float"><label>Figure 13.</label><caption><p>Robotic vehicle motion planner.</p></caption><graphic xlink:href="10.1177_0954406212446900-fig13.tif"/>
</fig></p>
<p>For the simulation, with the initial configuration [0 0 0]<sup>T</sup>, the robotic vehicle follows eight waypoints between the starting point and the goal point. The coordinates of these points are given in <xref ref-type="table" rid="table1-0954406212446900">Table 1</xref>. All of the parameters are given in <xref ref-type="table" rid="table2-0954406212446900">Table 2</xref>. The initial value of the look-ahead distance is determined as 19.0986 m using (10). The simulation is executed under two cases: (1) Path tracking only, without obstacles between waypoints, and (2) Path tracking and obstacle avoidance, with some obstacles between waypoints.
<table-wrap id="table1-0954406212446900" position="float"><label>Table 1.</label><caption><p>The coordinates of the start point, waypoints and goal point.</p></caption>
<graphic alternate-form-of="table1-0954406212446900" xlink:href="10.1177_0954406212446900-table1.tif"/>
<table frame="hsides"><thead align="left">
<tr><th>Point</th>
<th>Coordinates</th>
</tr></thead>
<tbody align="left">
<tr>
<td>Start point</td>
<td>(0, 0)</td>
</tr>
<tr>
<td>Waypoint 1</td>
<td>(50 m, 0)</td>
</tr>
<tr>
<td>Waypoint 2</td>
<td>(50 m, 45 m)</td>
</tr>
<tr>
<td>Waypoint 3</td>
<td>(95 m, 45 m)</td>
</tr>
<tr>
<td>Waypoint 4</td>
<td>(95 m, 0)</td>
</tr>
<tr>
<td>Waypoint 5</td>
<td>(125 m, 0)</td>
</tr>
<tr>
<td>Waypoint 6</td>
<td>(218 m, 98 m)</td>
</tr>
<tr>
<td>Waypoint 7</td>
<td>(210 m,105 m)</td>
</tr>
<tr>
<td>Waypoint 8</td>
<td>(170 m, 70 m)</td>
</tr>
<tr>
<td>Goal point</td>
<td>(0, 70 m)</td>
</tr>
</tbody>
</table>
</table-wrap>
<table-wrap id="table2-0954406212446900" position="float"><label>Table 2.</label><caption><p>Parameters for the simulation.</p></caption>
<graphic alternate-form-of="table2-0954406212446900" xlink:href="10.1177_0954406212446900-table2.tif"/>
<table frame="hsides"><thead align="left">
<tr><th>Symbol</th>
<th>Parameter</th>
<th>Value</th>
</tr></thead>
<tbody align="left">
<tr>
<td><italic>v</italic><sub>max</sub></td>
<td>Maximum velocity</td>
<td>36 km/h</td>
</tr>
<tr>
<td><italic>ω</italic><sub>im</sub></td>
<td>Limit on the yaw rate</td>
<td>60 degree/s</td>
</tr>
<tr>
<td><italic>a<sub>y</sub></italic><sub>,lim</sub></td>
<td>Limit on the lateral acceleration</td>
<td>0.8 G</td>
</tr>
<tr>
<td><italic>d</italic><sub>max</sub></td>
<td>Maximum range of 2D laser scanner</td>
<td>70 m</td>
</tr>
<tr>
<td><italic>d<sub>l</sub></italic></td>
<td>Effective sensing range of 2D laser scanner</td>
<td>50 m</td>
</tr>
<tr>
<td><italic>F</italic><sub>min</sub></td>
<td>Minimum value of virtual force from obstacle</td>
<td>0.008</td>
</tr>
<tr>
<td><italic>F</italic><sub>max</sub></td>
<td>Maximum value of virtual force from obstacle</td>
<td>0.045</td>
</tr>
<tr>
<td><italic>δ</italic><sub>max</sub></td>
<td>Maximum steering angle</td>
<td>30°</td>
</tr>
<tr>
<td><italic>δ<sub>l</sub></italic></td>
<td>Boundary value of steering angle</td>
<td>3°</td>
</tr>
<tr>
<td><italic>δ</italic><sub>0</sub></td>
<td>Constant for steering potential</td>
<td>1.5</td>
</tr>
<tr>
<td><italic>k<sub>δ</sub></italic></td>
<td>Gain for velocity planning, 1</td>
<td>40</td>
</tr>
<tr>
<td><italic>k<sub>O</sub></italic></td>
<td>Gain for velocity planning, 2</td>
<td>50</td>
</tr>
<tr>
<td><italic>k<sub>a</sub></italic></td>
<td>Gain for steering angle planning</td>
<td>14</td>
</tr>
</tbody>
</table>
</table-wrap></p>
<sec id="sec14-0954406212446900"><title>Simulation results of path tracking only</title>
<p>The first simulation was conducted without obstacles. <xref ref-type="fig" rid="fig14-0954406212446900">Figure 14</xref> shows the trajectory of the robotic vehicle. <xref ref-type="fig" rid="fig15-0954406212446900">Figure 15</xref> shows the steering angle and the yaw rate of the vehicle during the simulation. During the straight path, the vehicle maintains the maximum velocity, 36 km/h. However, as shown in <xref ref-type="fig" rid="fig16-0954406212446900">Figure 16</xref>, the velocity and the look-ahead distance decrease when the vehicle turns a corner. Especially during the U-turn, the velocity becomes close to 25 km/h. <xref ref-type="fig" rid="fig17-0954406212446900">Figure 17</xref> shows the lateral acceleration of the vehicle during the path tracking.
<fig id="fig14-0954406212446900" position="float"><label>Figure 14.</label><caption><p>Trajectory of the vehicle (path tracking only).</p></caption><graphic xlink:href="10.1177_0954406212446900-fig14.tif"/>
</fig>
<fig id="fig15-0954406212446900" position="float"><label>Figure 15.</label><caption><p>Steering angle and the yaw rate of the vehicle (path tracking only).</p></caption><graphic xlink:href="10.1177_0954406212446900-fig15.tif"/>
</fig>
<fig id="fig16-0954406212446900" position="float"><label>Figure 16.</label><caption><p>Velocity and the look-ahead distance (path tracking only).</p></caption><graphic xlink:href="10.1177_0954406212446900-fig16.tif"/>
</fig>
<fig id="fig17-0954406212446900" position="float"><label>Figure 17.</label><caption><p>Lateral acceleration of the vehicle (path tracking only).</p></caption><graphic xlink:href="10.1177_0954406212446900-fig17.tif"/>
</fig></p>
</sec>
<sec id="sec15-0954406212446900"><title>Simulation results of path tracking and obstacle avoidance</title>
<p>For the second simulation, the obstacles between the waypoints are given. <xref ref-type="fig" rid="fig18-0954406212446900">Figure 18</xref> shows the trajectory of the robotic vehicle and the obstacles. Even with the rapid change of the steering angle and the velocity shown in Figures <xref ref-type="fig" rid="fig19-0954406212446900">19</xref> and <xref ref-type="fig" rid="fig20-0954406212446900">20</xref>, respectively, the constraints of the yaw rate and the lateral acceleration are satisfied as shown in Figures <xref ref-type="fig" rid="fig19-0954406212446900">19</xref> and <xref ref-type="fig" rid="fig21-0954406212446900">21</xref>.
<fig id="fig18-0954406212446900" position="float"><label>Figure 18.</label><caption><p>Trajectory of the vehicle (path tracking and obstacle avoidance).</p></caption><graphic xlink:href="10.1177_0954406212446900-fig18.tif"/>
</fig>
<fig id="fig19-0954406212446900" position="float"><label>Figure 19.</label><caption><p>Steering angle and the yaw rate of the vehicle (path tracking and obstacle avoidance).</p></caption><graphic xlink:href="10.1177_0954406212446900-fig19.tif"/>
</fig>
<fig id="fig20-0954406212446900" position="float"><label>Figure 20.</label><caption><p>Velocity and the look-ahead distance (path tracking and obstacle avoidance).</p></caption><graphic xlink:href="10.1177_0954406212446900-fig20.tif"/>
</fig>
<fig id="fig21-0954406212446900" position="float"><label>Figure 21.</label><caption><p>Lateral acceleration of the vehicle (path tracking and obstacle avoidance).</p></caption><graphic xlink:href="10.1177_0954406212446900-fig21.tif"/>
</fig></p>
</sec>
</sec>
<sec id="sec16-0954406212446900" sec-type="conclusions"><title>Conclusion</title>
<p>In this article, a motion planning method for a robotic vehicle is developed. Using the geometric path tracking method, the motion of the vehicle to follow the waypoints is determined. With limited local information obtained from the range sensor, obstacles are recognized as a set of obstacle points. By defining the virtual force from the obstacle points, the motion of the vehicle to avoid the obstacles is determined. Thus the motion planning method integrates these two functions, path tracking and obstacle avoidance. However, this proposed method, like many others, requires a set of way points, chosen at a higher level, such that a collision free path exists between points. The performance of the robotic vehicle motion planner is tested through simulations of two scenarios: path tracking only and path tracking with obstacle avoidance. The robotic vehicle is able to keeps the limit of the yaw rate and the lateral acceleration enabling accurate navigation of the waypoints without colliding with obstacles.</p>
</sec>
</body>
<back>
<sec id="sec015-0954406212446900"><title>Funding</title>
<p>This research was supported by the Ministry of Knowledge Economy (MKE), Korea, under the ‘Advanced Robot Manipulation Research Center’ support program supervised by National IT Industry Promotion Agency (NIPA), (grant number NIPA-2010-C7000-1001-0002); a grant from Construction Technology Innovation Program (CTIP) funded by Ministry of Land, Transportation and Maritime Affairs (MLTM); and a grant (grant number 2009-0068226) from National Research Foundation of Korea (NRF) grant funded by the Korean government (MEST).</p></sec>
<ref-list>
<title>References</title>
<ref id="bibr1-0954406212446900"><label>1</label><citation citation-type="book"><person-group person-group-type="author"><name><surname>Buehler</surname><given-names>M</given-names></name><name><surname>Lagnemma</surname><given-names>K</given-names></name><name><surname>Singh</surname><given-names>S</given-names></name></person-group>. <source>The DARPA urban challenge</source>, <publisher-loc>New York</publisher-loc>: <publisher-name>Springer</publisher-name>, <year>2009</year>.</citation></ref>
<ref id="bibr2-0954406212446900"><label>2</label><citation citation-type="book"><person-group person-group-type="author"><name><surname>Choset</surname><given-names>H</given-names></name><name><surname>Lynch</surname><given-names>KM</given-names></name><name><surname>Hutchinson</surname><given-names>S</given-names></name><etal/></person-group>. <source>Principles of robot motion</source>, <publisher-loc>Ch. 12. Boston</publisher-loc>: <publisher-name>MIT Press</publisher-name>, <year>2005</year>.</citation></ref>
<ref id="bibr3-0954406212446900"><label>3</label><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Wang</surname><given-names>H</given-names></name><name><surname>Chen</surname><given-names>Y</given-names></name><name><surname>Soueres</surname><given-names>P</given-names></name></person-group>. <article-title>A geometric algorithm to compute time-optimal trajectories for a bidirectional steered robot</article-title>. <source>IEEE Trans Robot</source> <year>2009</year>; <volume>25</volume>(<issue>2</issue>): <fpage>399</fpage>–<lpage>413</lpage>.</citation></ref>
<ref id="bibr4-0954406212446900"><label>4</label><citation citation-type="book"><person-group person-group-type="author"><name><surname>Greenwood</surname><given-names>DT</given-names></name></person-group>. <source>Classical dynamics</source>, <publisher-loc>New York</publisher-loc>: <publisher-name>Dover Publications</publisher-name>, <year>1997</year>.</citation></ref>
<ref id="bibr5-0954406212446900"><label>5</label><citation citation-type="other"><comment>Rankin A, Crane C, Armstrong A, et al. Autonomous path planning navigation system used for site characterization. In: <italic>Proceedings of the SPIE 10th Annual AeroSense Symposium</italic>, Orlando, FL, Vol. 2738, April 1996, pp.176–186</comment>.</citation></ref>
<ref id="bibr6-0954406212446900"><label>6</label><citation citation-type="other"><comment>Ollero A and Heredia G. Stability analysis of mobile robot path tracking. In: <italic>Proceedings of the International Conference on Intelligent Robots and Systems</italic>, Pittsburgh, PA, 1995, pp.461–466</comment>.</citation></ref>
<ref id="bibr7-0954406212446900"><label>7</label><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Hellström</surname><given-names>T</given-names></name><name><surname>Ringdahl</surname><given-names>O</given-names></name></person-group>. <article-title>Follow the past - a path tracking algorithm for autonomous vehicles</article-title>. <source>Int J Veh Autonom Syst</source> <year>2006</year>; <volume>4</volume>: <fpage>216</fpage>–<lpage>224</lpage>.</citation></ref>
<ref id="bibr8-0954406212446900"><label>8</label><citation citation-type="other"><comment>Craig Coulter R. Implementation of the pure pursuit path tracking algorithm. Technical Report CMU-RI-TR-92-01, Robotics Institute, Carnegie Mellon University, 1992</comment>.</citation></ref>
<ref id="bibr9-0954406212446900"><label>9</label><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Witt</surname><given-names>J</given-names></name><name><surname>Crane</surname><given-names>III CD</given-names></name><name><surname>Armstrong</surname><given-names>D</given-names></name></person-group>. <article-title>Autonomous ground vehicle path tracking</article-title>. <source>J Robot Syst</source> <year>2004</year>; <volume>21</volume>(<issue>8</issue>): <fpage>439</fpage>–<lpage>449</lpage>.</citation></ref>
<ref id="bibr10-0954406212446900"><label>10</label><citation citation-type="other"><comment>Giesbrecht J, Mackay D, Collier J, et al. Path tracking for unmanned ground vehicle navigation. DRDC Suffield TM 2005-224, Defence R&amp;D Canada–Suffield, December 2005</comment>.</citation></ref>
<ref id="bibr11-0954406212446900"><label>11</label><citation citation-type="other"><comment>Morales J, Martínez JL, Martínez MA, et al. Pure-pursuit reactive path tracking for nonholonomic mobile robots with a 2D laser scanner. <italic>EURASIP J Adv Signal Process</italic> 2009; 2009: Article ID 935237, p.10</comment>.</citation></ref>
<ref id="bibr12-0954406212446900"><label>12</label><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Leedy</surname><given-names>BM</given-names></name><name><surname>Putney</surname><given-names>JS</given-names></name><name><surname>Bauman</surname><given-names>C</given-names></name><etal/></person-group>. <article-title>Virginia Tech’s twin contenders: a comparative study of reactive and deliberative navigation</article-title>. <source>J Field Robot</source> <year>2006</year>; <volume>23</volume>(<issue>9</issue>): <fpage>709</fpage>–<lpage>727</lpage>.</citation></ref>
<ref id="bibr13-0954406212446900"><label>13</label><citation citation-type="other"><comment>Simmons R. The curvature-velocity method for local obstacle avoidance. In: <italic>Proceedings of the IEEE International Conference on Robotics and Automation</italic>, April 1996, pp.3375–3382</comment>.</citation></ref>
<ref id="bibr14-0954406212446900"><label>14</label><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Borenstein</surname><given-names>J</given-names></name><name><surname>Koren</surname><given-names>Y</given-names></name></person-group>. <article-title>The vector field histogram - fast obstacle avoidance for mobile robots</article-title>. <source>J Robot Automat</source> <year>1999</year>; <volume>7</volume>: <fpage>278</fpage>–<lpage>288</lpage>.</citation></ref>
<ref id="bibr15-0954406212446900"><label>15</label><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Fox</surname><given-names>D</given-names></name><name><surname>Burgard</surname><given-names>W</given-names></name><name><surname>Thrun</surname><given-names>S</given-names></name></person-group>. <article-title>The dynamic window approach to collision avoidance</article-title>. <source>IEEE Robot Automat Mag</source> <year>1999</year>; <volume>4</volume>: <fpage>23</fpage>–<lpage>33</lpage>.</citation></ref>
<ref id="bibr16-0954406212446900"><label>16</label><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Ge</surname><given-names>SS</given-names></name><name><surname>Cui</surname><given-names>YJ</given-names></name></person-group>. <article-title>Dynamic motion planning for mobile robots using potential field method</article-title>. <source>Autonom Robot</source> <year>2002</year>; <volume>13</volume>(<issue>3</issue>): <fpage>207</fpage>–<lpage>222</lpage>.</citation></ref>
<ref id="bibr17-0954406212446900"><label>17</label><citation citation-type="other"><comment>Ulrich I and Borenstein J. VFH*: Local obstacle avoidance with look-ahead verification. In: <italic>IEEE International Conference on Robotics and Automation</italic>, San Francisco, CA, April 2000, pp.2505–2511</comment>.</citation></ref>
<ref id="bibr18-0954406212446900"><label>18</label><citation citation-type="other"><comment>Arras KO, Persson J, Tomatis N, et al. Real-time obstacle avoidance for polygonal robots with a reduced dynamic window. In: <italic>Proceedings of the IEEE International Conference on Robotics and automation, Washington</italic>, DC, May 2002, pp.3050–3055</comment>.</citation></ref>
<ref id="bibr19-0954406212446900"><label>19</label><citation citation-type="other"><comment>Minguez J, Montano L and Santos-Victor J. Reactive navigation for non-holonomic robots using the ego-kinematic space. In: <italic>Proceedings of the IEEE International Conference on Robotics and Automation</italic>, Washington DC, USA, May 2002</comment>.</citation></ref>
<ref id="bibr20-0954406212446900"><label>20</label><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Minguez</surname><given-names>J</given-names></name><name><surname>Montano</surname><given-names>L</given-names></name></person-group>. <article-title>Extending collision avoidance methods to consider the vehicle shape, kinematics, and dynamics of a mobile robot</article-title>. <source>IEEE Trans Robot</source> <year>2009</year>; <volume>25</volume>(<issue>2</issue>): <fpage>2009</fpage>–<lpage>2009</lpage>.</citation></ref>
<ref id="bibr21-0954406212446900"><label>21</label><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Lamiraux</surname><given-names>F</given-names></name><name><surname>Bonnafous</surname><given-names>D</given-names></name><name><surname>Lefebvre</surname><given-names>O</given-names></name></person-group>. <article-title>Reactive path deformation for nonholonomic mobile robots</article-title>. <source>IEEE Trans Robot</source> <year>2004</year>; <volume>20</volume>(<issue>6</issue>): <fpage>967</fpage>–<lpage>977</lpage>.</citation></ref>
<ref id="bibr22-0954406212446900"><label>22</label><citation citation-type="other"><comment>Lefebvre O, Lamiraux F, Pradalier C, et al. Obstacles avoidance for car-like robots, integration and experimentation on two robots. In: <italic>Proceedings of the IEEE International Conference on Robotics and Automation</italic>, New Orleans, LA, USA, April 2004</comment>.</citation></ref>
<ref id="bibr23-0954406212446900"><label>23</label><citation citation-type="other"><comment>Lefebvre O, Lamiraux F and Bonnafous D. Fast computation of robot-obstacle interactions in nonholonomic trajectory deformation. In: <italic>Proceedings of the IEEE International Conference on Robotics and Automation,</italic> Barcelona, Spain, April 2005</comment>.</citation></ref>
<ref id="bibr24-0954406212446900"><label>24</label><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Pradalier</surname><given-names>C</given-names></name><name><surname>Hermosillo</surname><given-names>J</given-names></name><name><surname>Koike</surname><given-names>C</given-names></name><etal/></person-group>. <article-title>The cycab: a car-like robot navigating autonomously and safely among pedestrians</article-title>. <source>Robot Autonom Syst</source> <year>2005</year>; <volume>50</volume>(<issue>1</issue>): <fpage>51</fpage>–<lpage>68</lpage>.</citation></ref>
<ref id="bibr25-0954406212446900"><label>25</label><citation citation-type="other"><comment>Khatib O. Realtime obstacle avoidance for manipulators and mobile robots. In: <italic>Proceedings of the IEEE International Conference on Robotics and Automation,</italic> March 1985, pp.500–505</comment>.</citation></ref>
</ref-list>
</back>
</article>