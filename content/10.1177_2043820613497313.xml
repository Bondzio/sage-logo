<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article
  PUBLIC "-//NLM//DTD Journal Publishing DTD v2.3 20070202//EN" "journalpublishing.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" article-type="review-article">
<front>
<journal-meta>
<journal-id journal-id-type="publisher-id">DHG</journal-id>
<journal-id journal-id-type="hwp">spdhg</journal-id>
<journal-title>Dialogues in Human Geography</journal-title>
<issn pub-type="ppub">2043-8206</issn>
<issn pub-type="epub">2043-8214</issn>
<publisher>
<publisher-name>SAGE Publications</publisher-name>
<publisher-loc>Sage UK: London, England</publisher-loc>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="doi">10.1177/2043820613497313</article-id>
<article-id pub-id-type="publisher-id">10.1177_2043820613497313</article-id>
<article-categories>
<subj-group subj-group-type="heading">
<subject>BOOK REVIEW FORUM 2</subject>
<subj-group subj-group-type="heading">
<subject>Code/Space: Software and Everyday Life</subject>
<subj-group subj-group-type="heading">
<subject>Reviews</subject>
</subj-group></subj-group></subj-group>
</article-categories>
<title-group>
<article-title>The next new thing: Exploring the topography of <italic>Code/Space</italic></article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<name>
<surname>Wilson</surname>
<given-names>Mark</given-names>
</name>
<aff id="aff1-2043820613497313"><italic>Michigan State University, USA</italic></aff>
</contrib>
</contrib-group>
<pub-date pub-type="epub-ppub">
<month>7</month>
<year>2013</year>
</pub-date>
<volume>3</volume>
<issue>2</issue>
<fpage>247</fpage>
<lpage>249</lpage>
<permissions>
<copyright-statement>© The Author(s) 2013</copyright-statement>
<copyright-year>2013</copyright-year>
<copyright-holder content-type="sage">SAGE Publications</copyright-holder>
</permissions>
</article-meta>
</front>
<body>
<p>As a digital immigrant, I think back to my first computer in the early 1980s and remember the minor role software played in my decisions. Beyond the cultural personal computer (PC)/Apple decision, most of the expense for a computer was for hardware, with the cost of software, a small part of the total price. At that time, software was simple. All that was needed fitted on one 5.25′′ floppy disk, with no hard drives to handle large files. Over the past 30 years, the balance of cost has changed dramatically, so that today it is easy to spend far more on software than hardware for a laptop or PC. The evolving relationship between hardware and software has received little attention outside technical fields, but the growing significance of software, in power, cost, and influence, is the focus of Rob Kitchin and Martin Dodge’s recent book <italic>Code/Space: Software and Everyday Life</italic>.</p>
<p>
<italic>Code/Space</italic> is a timely and valuable addition to scholarship on information and communication technologies in general and to cybergeography in particular. The book proceeds in four parts, starting with the analysis of the concept of code/space (Chapter one) and the nature of software (Chapter two). The term code/space is an apt recognition of software’s ability to define space and spatial relationships. The invisibility of software means that its power is often only apparent when something goes wrong, when Web sites are down for periodic maintenance or, at the other extreme, the danger experienced by travelers when air traffic control is unable to direct aircraft. The invisibility that challenges our seeing of the Internet also applies to understanding the significance of software; as a concealed agent, it is not always apparent exactly what we experience is software driven or not.</p>
<p>In the second section, the focus shifts to the ways that software affects daily life. Chapter three addresses the technicity of everyday objects, from the use of radio-frequency identification (RFID) chips to automated teller machines (ATMs). The ability to manage and monitor flows through objects undeniably has value, but as stated earlier, the very invisibility of monitoring should remain a concern for civil society in terms of privacy and ownership of information. One significant contribution of <italic>Code/Space</italic> comes in the discussion of how software defines space in Chapter four. The application of the term transduction, from genetics, illustrates how code evolves into form and can control flows and relationships across space.</p>
<p>In the following chapter, the focus shifts to the implications of software for governance. Of all chapters, Chapter five conveys some of the concerns held by many about the automated collection of information and its effect on privacy and freedom for individuals. This concern is not new and reflects long standing dilemmas about the role of the state. As James <xref ref-type="bibr" rid="bibr1-2043820613497313">Morone (1998)</xref> notes, in the United States, there is the collision of a dread of government power while the populous yearns for participation and democracy. As we rush to embrace all that software can provide, there is also the counterpoint dread of losing control over information. Chapter six outlines many of the benefits for which we yearn and the ability of code to empower and afford new directions of creativity. After recognizing the power of Web 2.0 and the contribution of software to mapping and media, Kitchin and Dodge remind readers that these benefits are part of a ‘… wider dialectic between empowerment and control’ (p. 134).</p>
<p>The third stage of <italic>Code/Space</italic> discusses three major applications of software and its spatial impact: air travel (Chapter seven), residential life (Chapter eight: home), and consumption (Chapter nine). Along with health care, air travel presents an example of a common occurrence where we entrust our lives to the code that flies aircraft by wire and manages airborne traffic. From arrival at the airport, when software determines our threat level, check-in, flight, air traffic control, and even in-flight entertainment, multiple software dependent systems operate and interact to allow travelers to cross space. At home, we are increasingly surrounded by intelligent objects often linked by local or global networks. On example of the scale of household device and service use is how the subscription entertainment firm Netflix accounts for almost one-third of peak time download traffic in North America. This section concludes with a discussion on consumer society and the ways software changes how goods and services are bought and sold. While often invisible, the impact of code on consumption is clear from the occupants of High and Main streets in many countries. So many shops—bookstores, music, travel agents, and video rentals—have slowly disappeared to be replaced by direct online purchasing. Even when products are tangible, the shift of purchasing from bricks to clicks of electronic goods and apparel change how and where we make purchases and even what we buy.</p>
<p>The final section looks to the future with chapters on everyware (Chapter 10) and an agenda for scholarly analysis of software (Chapter 11). Everyware refers to the growing availability of devices and networks globally but, for the moment, it is also a myth of ubiquity that is also often applied to the Internet. While technically possible to be cocooned in everyware, it is also sometimes difficult to be connected even in developed economies. A recent 3-day train trip across the United States showed how variable mobile phone connections can be with nonexistent Wi-Fi access along the route. Thankfully, the author found occasional unsecured systems along the way but, in general, the experience showed the absence of everyware as well as the withdrawal suffered by the usually connected being disconnected for 3 days. The authors’ acknowledge the many spatial gaps in everyware and, in this chapter, further identify some of the threats as well as benefits of ubiquitous computing.</p>
<p>Befitting its status as one of the first syntheses of the spatial context of software, the final chapter addresses how future study of this phenomenon might evolve. As with so many fields of inquiry, analysis requires the collaboration of many disciplines—engineering, science, social science, and humanities—to fully identify and understand the meaning of code/space. Kitchin and Dodge recognize the value in an expanded mindset to see code/space as a complex and sociocultural product.</p>
<p>One important element in the realm of code/space is the personal experience individuals have with software, not only in terms of life impacts but also in its application. Early PCs required users to have some familiarity with the structure of the software they used and to determine how and when it was changed or upgraded. Today, so much of the relationship between user and software is distanced by the complexity and design of software systems. The complexity is underscored by the sobering announcement of one’s laptop that it has 16,142 upgrades to apply while explaining to airline personnel that Microsoft has ordered me not to turn off my computer. It is usually at this juncture that Adobe and Java also announce their need to upgrade my system. The end result is the distancing of the user from knowing how and what happens as remote software systems take control. While I am relieved, I do not need to manually manage 16,142 upgrades to my laptop, I also feel disconnected from what is happening, and whether or not the next iteration will be an improvement in my eyes.</p>
<p>
<italic>Code/Space</italic> is engaging and thought provoking and offers language and concepts for geographers to examine a new spatial dimension. It also makes visible a significant, yet invisible, force in the shaping of daily life. If I were to cavil, it would be that the text seems more positive about software than many critics would allow, although in its defense Kitchin and Dodge do acknowledge some of the problems associated in our surrender to code. Important elements of code/space deserving similar treatment would be medicine and military uses of software. <italic>Code/Space</italic> is a welcome addition to the scholarship on cybergeography and a valuable outline for the future spatial analysis and understanding of software.</p>
</body>
<back>
<ref-list>
<title>Reference</title>
<ref id="bibr1-2043820613497313">
<citation citation-type="book">
<person-group person-group-type="author">
<name>
<surname>Morone</surname>
<given-names>J</given-names>
</name>
</person-group> (<year>1998</year>) <source>The Democratic Wish: Popular Participation and the Limits of American Government</source>. <publisher-loc>New Haven, CT</publisher-loc>: <publisher-name>Yale University Press</publisher-name>.</citation>
</ref>
</ref-list>
</back>
</article>